{
  "abi": [
    {
      "inputs": [],
      "name": "ALLOCATION_ACTIVE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ALLOCATION_NOT_ACTIVE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ALLOCATION_NOT_ENDED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ALREADY_INITIALIZED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AMOUNT_MISMATCH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ANCHOR_ERROR",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ARRAY_MISMATCH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INVALID",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INVALID_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INVALID_FEE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INVALID_METADATA",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INVALID_REGISTRATION",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IS_APPROVED_STRATEGY",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MISMATCH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NONCE_NOT_AVAILABLE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_APPROVED_STRATEGY",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_ENOUGH_FUNDS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_INITIALIZED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_PENDING_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NewOwnerIsZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoHandoverRequest",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "POOL_ACTIVE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "POOL_INACTIVE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RECIPIENT_ALREADY_ACCEPTED",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipientId",
          "type": "address"
        }
      ],
      "name": "RECIPIENT_ERROR",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RECIPIENT_NOT_ACCEPTED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "REGISTRATION_NOT_ACTIVE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UNAUTHORIZED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZERO_ADDRESS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BaseFeePaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseFee",
          "type": "uint256"
        }
      ],
      "name": "BaseFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pendingOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipHandoverCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pendingOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipHandoverRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "percentFee",
          "type": "uint256"
        }
      ],
      "name": "PercentFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "profileId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "protocol",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "pointer",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct Metadata",
          "name": "metadata",
          "type": "tuple"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "PoolFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "protocol",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "pointer",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct Metadata",
          "name": "metadata",
          "type": "tuple"
        }
      ],
      "name": "PoolMetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "registry",
          "type": "address"
        }
      ],
      "name": "RegistryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "TreasuryUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NATIVE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        }
      ],
      "name": "addPoolManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "addToCloneableStrategies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "allocate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_poolIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_datas",
          "type": "bytes[]"
        }
      ],
      "name": "batchAllocate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_poolIds",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_data",
          "type": "bytes[]"
        }
      ],
      "name": "batchRegisterRecipient",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "recipientIds",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelOwnershipHandover",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pendingOwner",
          "type": "address"
        }
      ],
      "name": "completeOwnershipHandover",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_profileId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_initStrategyData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "protocol",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "pointer",
              "type": "string"
            }
          ],
          "internalType": "struct Metadata",
          "name": "_metadata",
          "type": "tuple"
        },
        {
          "internalType": "address[]",
          "name": "_managers",
          "type": "address[]"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_profileId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_initStrategyData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "protocol",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "pointer",
              "type": "string"
            }
          ],
          "internalType": "struct Metadata",
          "name": "_metadata",
          "type": "tuple"
        },
        {
          "internalType": "address[]",
          "name": "_managers",
          "type": "address[]"
        }
      ],
      "name": "createPoolWithCustomStrategy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_recipientIds",
          "type": "address[]"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "fundPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFeeDenominator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "FEE_DENOMINATOR",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPercentFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "profileId",
              "type": "bytes32"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ],
              "internalType": "struct Metadata",
              "name": "metadata",
              "type": "tuple"
            },
            {
              "internalType": "bytes32",
              "name": "managerRole",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "adminRole",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IAllo.Pool",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        }
      ],
      "name": "getStrategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTreasury",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_percentFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseFee",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "isCloneableStrategy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPoolAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPoolManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "result",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pendingOwner",
          "type": "address"
        }
      ],
      "name": "ownershipHandoverExpiresAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "recoverFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "registerRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "removeFromCloneableStrategies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        }
      ],
      "name": "removePoolManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestOwnershipHandover",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_baseFee",
          "type": "uint256"
        }
      ],
      "name": "updateBaseFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percentFee",
          "type": "uint256"
        }
      ],
      "name": "updatePercentFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "protocol",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "pointer",
              "type": "string"
            }
          ],
          "internalType": "struct Metadata",
          "name": "_metadata",
          "type": "tuple"
        }
      ],
      "name": "updatePoolMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "updateRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "updateTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061323f806100206000396000f3fe6080604052600436106102e75760003560e01c80635f9ca13811610184578063ab3febc6116100d6578063eb990c591161008a578063f4e1fc4111610064578063f4e1fc41146107e8578063f54fc4a014610803578063fee81cf41461082357600080fd5b8063eb990c59146107a2578063f04e283e146107c2578063f2fde38b146107d557600080fd5b8063cfc0cc34116100bb578063cfc0cc3414610736578063d547741f1461076f578063e1007d4a1461078f57600080fd5b8063ab3febc6146106f6578063c6dff1cf1461071657600080fd5b80638da5cb5b11610138578063a0cf0aea11610112578063a0cf0aea14610699578063a217fddf146106c1578063ab2ec589146106d657600080fd5b80638da5cb5b1461061a5780638e6901861461063357806391d148541461065357600080fd5b806377da8caf1161016957806377da8caf146105c75780637f51bb1f146105da5780637f5a70bd146105fa57600080fd5b80635f9ca1381461059f578063715018a6146105bf57600080fd5b80632cf682b01161023d5780633b19e84a116101f157806354d1f13d116101cb57806354d1f13d146105665780635ab1bd531461056e5780635acd6fac1461058c57600080fd5b80633b19e84a1461051357806341bba0b4146105315780634edbaadc1461055157600080fd5b80632f2ff15d116102225780632f2ff15d146104b357806336568abe146104d35780633a5fbd92146104f357600080fd5b80632cf682b0146104805780632ec38188146104a057600080fd5b80631a20bd881161029f57806324ae6a271161027957806324ae6a2714610438578063256929621461045857806329e40d4b1461046057600080fd5b80631a20bd88146103ba5780631a5da6c8146103e7578063248a9ca31461040757600080fd5b8063068bcd8d116102d0578063068bcd8d14610343578063075c0e9c1461037057806315e812ad1461039b57600080fd5b806301ffc9a7146102ec578063031e2fa114610321575b600080fd5b3480156102f857600080fd5b5061030c61030736600461267c565b610856565b60405190151581526020015b60405180910390f35b34801561032d57600080fd5b5061034161033c3660046126d3565b6108ef565b005b34801561034f57600080fd5b5061036361035e3660046126f0565b61094f565b6040516103189190612778565b61038361037e3660046128a0565b610a62565b6040516001600160a01b039091168152602001610318565b3480156103a757600080fd5b506035545b604051908152602001610318565b3480156103c657600080fd5b506103da6103d536600461299b565b610b16565b6040516103189190612a8e565b3480156103f357600080fd5b506103416104023660046126d3565b610c9d565b34801561041357600080fd5b506103ac6104223660046126f0565b6000908152600160208190526040909120015490565b34801561044457600080fd5b50610341610453366004612aa1565b610cb1565b610341610d79565b34801561046c57600080fd5b5061030c61047b366004612ada565b610dc9565b34801561048c57600080fd5b5061034161049b366004612ada565b610ddc565b6103416104ae3660046128a0565b610e29565b3480156104bf57600080fd5b506103416104ce366004612ada565b610e49565b3480156104df57600080fd5b506103416104ee366004612ada565b610e6f565b3480156104ff57600080fd5b5061034161050e366004612b63565b610efc565b34801561051f57600080fd5b506037546001600160a01b0316610383565b34801561053d57600080fd5b5061034161054c3660046126d3565b610f9d565b34801561055d57600080fd5b506034546103ac565b610341611020565b34801561057a57600080fd5b506038546001600160a01b0316610383565b61034161059a366004612bd0565b61105c565b3480156105ab57600080fd5b506103416105ba366004612c75565b6110ad565b61034161112a565b6103ac6105d5366004612cb2565b61113e565b3480156105e657600080fd5b506103416105f53660046126d3565b6111ed565b34801561060657600080fd5b50610341610615366004612ada565b6111fe565b34801561062657600080fd5b50638b78c6d81954610383565b34801561063f57600080fd5b5061034161064e3660046126f0565b611224565b34801561065f57600080fd5b5061030c61066e366004612ada565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156106a557600080fd5b5061038373eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b3480156106cd57600080fd5b506103ac600081565b3480156106e257600080fd5b5061030c6106f13660046126d3565b611235565b34801561070257600080fd5b5061030c610711366004612ada565b611256565b34801561072257600080fd5b50610341610731366004612d75565b611262565b34801561074257600080fd5b506103836107513660046126f0565b6000908152603a60205260409020600101546001600160a01b031690565b34801561077b57600080fd5b5061034161078a366004612ada565b6112e7565b6103ac61079d366004612cb2565b61130d565b3480156107ae57600080fd5b506103416107bd366004612e02565b6113a4565b6103416107d03660046126d3565b6114c1565b6103416107e33660046126d3565b6114fe565b3480156107f457600080fd5b50670de0b6b3a76400006103ac565b34801561080f57600080fd5b5061034161081e3660046126f0565b611525565b34801561082f57600080fd5b506103ac61083e3660046126d3565b63389a75e1600c908152600091909152602090205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806108e957507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6108f7611536565b6001600160a01b0381166000818152603b6020908152604091829020805460ff1916905590519182527f09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea491015b60405180910390a150565b610957612616565b6000828152603a6020908152604091829020825160c0810184528154815260018201546001600160a01b039081168285015260028301541681850152835180850190945260038201805485526004830180549295939460608701949390840191906109c190612e48565b80601f01602080910402602001604051908101604052809291908181526020018280546109ed90612e48565b8015610a3a5780601f10610a0f57610100808354040283529160200191610a3a565b820191906000526020600020905b815481529060010190602001808311610a1d57829003601f168201915b5050505050815250508152602001600582015481526020016006820154815250509050919050565b6000610a6c611551565b6000838152603a6020526040908190206001015490517f2bbe0cae0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690632bbe0cae90610ac79085903390600401612e82565b6020604051808303816000875af1158015610ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a9190612ead565b90506108e96001600255565b6060610b20611551565b82518067ffffffffffffffff811115610b3b57610b3b6127e1565b604051908082528060200260200182016040528015610b64578160200160208202803683370190505b50915082518114610b885760405163636e39bb60e01b815260040160405180910390fd5b60005b81811015610c9157603a6000868381518110610ba957610ba9612eca565b6020026020010151815260200190815260200160002060010160009054906101000a90046001600160a01b03166001600160a01b0316632bbe0cae858381518110610bf657610bf6612eca565b6020026020010151336040518363ffffffff1660e01b8152600401610c1c929190612e82565b6020604051808303816000875af1158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190612ead565b838281518110610c7157610c71612eca565b6001600160a01b0390921660209283029190910190910152600101610b8b565b50506108e96001600255565b610ca5611536565b610cae816115a8565b50565b610cb9611536565b60006001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610d65576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190612ee0565b610d67565b475b9050610d7483838361162a565b505050565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6000610dd58383611664565b9392505050565b81610de6816116a7565b6001600160a01b038216610e0d5760405163538ba4f960e01b815260040160405180910390fd5b6000838152603a6020526040902060050154610d7490836116ce565b610e31611551565b610e3b8282611755565b610e456001600255565b5050565b60008281526001602081905260409091200154610e65816117e8565b610d7483836116ce565b6001600160a01b0381163314610ef25760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b610e4582826117f2565b610f04611551565b6000838152603a6020526040908190206001015490517f0a6f0ee90000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690630a6f0ee990610f6190859085903390600401612ef9565b600060405180830381600087803b158015610f7b57600080fd5b505af1158015610f8f573d6000803e3d6000fd5b50505050610d746001600255565b610fa5611536565b6001600160a01b038116610fcc5760405163538ba4f960e01b815260040160405180910390fd5b6001600160a01b0381166000818152603b6020908152604091829020805460ff1916600117905590519182527f960dd94cbb79169f09a4e445d58b895df2d9bffa5b31055d0932d801724a20d19101610944565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b611064611551565b80600003611085576040516303e09bb960e31b815260040160405180910390fd5b6000828152603a6020526040902060010154610e3b90829084906001600160a01b0316611875565b816110b7816119eb565b6000838152603a60209081526040909120835160038201908155918401519091849160048401906110e89082612f86565b50905050837f14f52b76bda9e4c482842cefda2968d332933577988f224e80aae18fba10edf08460405161111c9190613046565b60405180910390a250505050565b611132611536565b61113c60006119f5565b565b6000611148611551565b6001600160a01b0387166000908152603b602052604090205460ff1661119a576040517f9369923800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260396020526040812080546111d6928b926111cc928c929091906111c38361306f565b91905055611a33565b8888888888611a87565b90506111e26001600255565b979650505050505050565b6111f5611536565b610cae81611fc2565b81611208816116a7565b6000838152603a6020526040902060050154610d7490836117f2565b61122c611536565b610cae81612044565b6001600160a01b0381166000908152603b602052604081205460ff166108e9565b6000610dd58383612079565b61126a611551565b80518290811461128d5760405163636e39bb60e01b815260040160405180910390fd5b60005b818110156112db576112d38585838181106112ad576112ad612eca565b905060200201358483815181106112c6576112c6612eca565b6020026020010151611755565b600101611290565b5050610d746001600255565b60008281526001602081905260409091200154611303816117e8565b610d7483836117f2565b60006001600160a01b0387166113365760405163538ba4f960e01b815260040160405180910390fd5b6001600160a01b0387166000908152603b602052604090205460ff1615611389576040517feeffa72100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61139888888888888888611a87565b98975050505050505050565b600054600190610100900460ff161580156113c6575060005460ff8083169116105b6114385760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610ee9565b6000805461ffff191660ff831617610100179055611455336120b1565b61145e856115a8565b61146784611fc2565b611470836120ed565b61147982612044565b6000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050505050565b6114c9611536565b63389a75e1600c52806000526020600c2080544211156114f157636f5e88186000526004601cfd5b60009055610cae816119f5565b611506611536565b8060601b61151c57637448fbae6000526004601cfd5b610cae816119f5565b61152d611536565b610cae816120ed565b638b78c6d81954331461113c576382b429006000526004601cfd5b60028054036115a25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ee9565b60028055565b6001600160a01b0381166115cf5760405163538ba4f960e01b815260040160405180910390fd5b6038805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fd6ceddf6d2a22f21c7c81675c518004eff43bc5c8a6fc32a0b748e69d58671cd90602001610944565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0384160161165957610d748282612164565b610d74838383612180565b6000828152603a60209081526040808320600501548352600182528083206001600160a01b038516845290915281205460ff1680610dd55750610dd58383612079565b6116b18133612079565b610cae5760405163075fd2b160e01b815260040160405180910390fd5b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16610e455760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152603a6020526040908190206001015490517fef2920fc0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063ef2920fc9034906117b29085903390600401612e82565b6000604051808303818588803b1580156117cb57600080fd5b505af11580156117df573d6000803e3d6000fd5b50505050505050565b610cae81336121cf565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff1615610e455760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000828152603a6020526040812060028101546034548692916001600160a01b031690156118fd57670de0b6b3a76400006034546118b39089613088565b6118bd919061309f565b93506118c984846130c1565b604080516060810182523381526037546001600160a01b031660208201529081018690529093506118fb908290612244565b505b611933816040518060600160405280336001600160a01b03168152602001886001600160a01b0316815260200186815250612244565b506040517ff5b0dfb7000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0386169063f5b0dfb790602401600060405180830381600087803b15801561198f57600080fd5b505af11580156119a3573d6000803e3d6000fd5b505060408051868152602081018890528993507fbf59838198f4ea92f663f5c1fc697f151a1b746b7dff86d564f250a55cbb485192500160405180910390a250505050505050565b6116b18133611664565b638b78c6d81980546001600160a01b039092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b6040516bffffffffffffffffffffffff193360601b166020820152603481018290526000908190605401604051602081830303815290604052805190602001209050611a7f84826122dc565b949350505050565b6038546040517f5e8a7915000000000000000000000000000000000000000000000000000000008152600481018990523360248201526000916001600160a01b031690635e8a791590604401602060405180830381865afa158015611af0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1491906130d4565b611b315760405163075fd2b160e01b815260040160405180910390fd5b603660008154611b409061306f565b91829055506040519091508190600090611b889083906020019081527f61646d696e000000000000000000000000000000000000000000000000000000602082015260250190565b60408051601f19818403018152828252805160209182012060c0840183528d84526001600160a01b03808e168584019081528c8216868601908152606087018c8152608088018a905260a0880185905260008b8152603a87529690962087518155915160018301805491851673ffffffffffffffffffffffffffffffffffffffff1992831617905590516002830180549190941691161790915592518051600385019081559281015191955084939290916004840190611c489082612f86565b5050506080820151600582015560a090910151600690910155611c6b82336116ce565b611c758383612379565b6040517fedd146cc0000000000000000000000000000000000000000000000000000000081526001600160a01b038b169063edd146cc90611cbc9087908d906004016130f6565b600060405180830381600087803b158015611cd657600080fd5b505af1158015611cea573d6000803e3d6000fd5b50505050838a6001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d519190612ee0565b141580611dd15750306001600160a01b03168a6001600160a01b03166315cc481e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc59190612ead565b6001600160a01b031614155b15611def5760405163636e39bb60e01b815260040160405180910390fd5b845160005b81811015611e60576000878281518110611e1057611e10612eca565b6020026020010151905060006001600160a01b0316816001600160a01b031603611e4d5760405163538ba4f960e01b815260040160405180910390fd5b611e5786826116ce565b50600101611df4565b5060355415611f63576001600160a01b03891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee148015611ea257503488603554611e9f919061310f565b10155b80611ed757506001600160a01b03891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14801590611ed757503460355410155b15611ef5576040516303e09bb960e31b815260040160405180910390fd5b603754603554611f269173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee916001600160a01b039091169061162a565b847f02e340b51c6ae66fd22509c9b016f224c47a54063d4259fe3d860958e9eaac72603554604051611f5a91815260200190565b60405180910390a25b8715611f7457611f7488868d611875565b8b857f69bcb5a6cf6a3c95185cbb451e77787240c866dd2e8332597e3013ff18a1aba18d8c8c8c604051611fab9493929190613122565b60405180910390a350505050979650505050505050565b6001600160a01b038116611fe95760405163538ba4f960e01b815260040160405180910390fd5b6037805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d190602001610944565b60358190556040518181527f803bee7e92bbc6ae7a1551f9f4ed3e31a8ea8df32e93332f41b0028f1091f9c390602001610944565b6000828152603a60209081526040808320600601548352600182528083206001600160a01b038516845290915281205460ff16610dd5565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b670de0b6b3a764000081111561212f576040517f2fb15b8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60348190556040518181527f9e826789de2de708fd9f09edea1182545e543893caa8ff71f8eb3aab50a4b06590602001610944565b60008060008084865af1610e455763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166121c5576390b8ec186000526004601cfd5b6000603452505050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16610e4557612202816123c6565b61220d8360206123d8565b60405160200161221e92919061315e565b60408051601f198184030181529082905262461bcd60e51b8252610ee9916004016131df565b604081015160009073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016122be57803410156122ab576040517f74c5672b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6122b9836020015182612164565b6122d2565b6122d28484600001518560200151846125b9565b5060019392505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166108e95760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610ee9565b6000828152600160208190526040808320909101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b60606108e96001600160a01b03831660145b606060006123e7836002613088565b6123f290600261310f565b67ffffffffffffffff81111561240a5761240a6127e1565b6040519080825280601f01601f191660200182016040528015612434576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061246b5761246b612eca565b60200101906001600160f81b031916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106124b6576124b6612eca565b60200101906001600160f81b031916908160001a90535060006124da846002613088565b6124e590600161310f565b90505b600181111561256a577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061252657612526612eca565b1a60f81b82828151811061253c5761253c612eca565b60200101906001600160f81b031916908160001a90535060049490941c93612563816131f2565b90506124e8565b508315610dd55760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610ee9565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661260857637939f4246000526004601cfd5b600060605260405250505050565b6040518060c001604052806000801916815260200160006001600160a01b0316815260200160006001600160a01b03168152602001612668604051806040016040528060008152602001606081525090565b815260006020820181905260409091015290565b60006020828403121561268e57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610dd557600080fd5b6001600160a01b0381168114610cae57600080fd5b6000602082840312156126e557600080fd5b8135610dd5816126be565b60006020828403121561270257600080fd5b5035919050565b60005b8381101561272457818101518382015260200161270c565b50506000910152565b60008151808452612745816020860160208601612709565b601f01601f19169290920160200192915050565b805182526000602082015160406020850152611a7f604085018261272d565b6020815281516020820152600060208301516001600160a01b0380821660408501528060408601511660608501525050606083015160c060808401526127c160e0840182612759565b9050608084015160a084015260a084015160c08401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612820576128206127e1565b604052919050565b600067ffffffffffffffff831115612842576128426127e1565b612855601f8401601f19166020016127f7565b905082815283838301111561286957600080fd5b828260208301376000602084830101529392505050565b600082601f83011261289157600080fd5b610dd583833560208501612828565b600080604083850312156128b357600080fd5b82359150602083013567ffffffffffffffff8111156128d157600080fd5b6128dd85828601612880565b9150509250929050565b600067ffffffffffffffff821115612901576129016127e1565b5060051b60200190565b600082601f83011261291c57600080fd5b8135602061293161292c836128e7565b6127f7565b82815260059290921b8401810191818101908684111561295057600080fd5b8286015b8481101561299057803567ffffffffffffffff8111156129745760008081fd5b6129828986838b0101612880565b845250918301918301612954565b509695505050505050565b600080604083850312156129ae57600080fd5b823567ffffffffffffffff808211156129c657600080fd5b818501915085601f8301126129da57600080fd5b813560206129ea61292c836128e7565b82815260059290921b84018101918181019089841115612a0957600080fd5b948201945b83861015612a2757853582529482019490820190612a0e565b96505086013592505080821115612a3d57600080fd5b506128dd8582860161290b565b600081518084526020808501945080840160005b83811015612a835781516001600160a01b031687529582019590820190600101612a5e565b509495945050505050565b602081526000610dd56020830184612a4a565b60008060408385031215612ab457600080fd5b8235612abf816126be565b91506020830135612acf816126be565b809150509250929050565b60008060408385031215612aed57600080fd5b823591506020830135612acf816126be565b600082601f830112612b1057600080fd5b81356020612b2061292c836128e7565b82815260059290921b84018101918181019086841115612b3f57600080fd5b8286015b84811015612990578035612b56816126be565b8352918301918301612b43565b600080600060608486031215612b7857600080fd5b83359250602084013567ffffffffffffffff80821115612b9757600080fd5b612ba387838801612aff565b93506040860135915080821115612bb957600080fd5b50612bc686828701612880565b9150509250925092565b60008060408385031215612be357600080fd5b50508035926020909101359150565b600060408284031215612c0457600080fd5b6040516040810167ffffffffffffffff8282108183111715612c2857612c286127e1565b81604052829350843583526020850135915080821115612c4757600080fd5b508301601f81018513612c5957600080fd5b612c6885823560208401612828565b6020830152505092915050565b60008060408385031215612c8857600080fd5b82359150602083013567ffffffffffffffff811115612ca657600080fd5b6128dd85828601612bf2565b600080600080600080600060e0888a031215612ccd57600080fd5b873596506020880135612cdf816126be565b9550604088013567ffffffffffffffff80821115612cfc57600080fd5b612d088b838c01612880565b965060608a01359150612d1a826126be565b9094506080890135935060a08901359080821115612d3757600080fd5b612d438b838c01612bf2565b935060c08a0135915080821115612d5957600080fd5b50612d668a828b01612aff565b91505092959891949750929550565b600080600060408486031215612d8a57600080fd5b833567ffffffffffffffff80821115612da257600080fd5b818601915086601f830112612db657600080fd5b813581811115612dc557600080fd5b8760208260051b8501011115612dda57600080fd5b602092830195509350908501359080821115612df557600080fd5b50612bc68682870161290b565b60008060008060808587031215612e1857600080fd5b8435612e23816126be565b93506020850135612e33816126be565b93969395505050506040820135916060013590565b600181811c90821680612e5c57607f821691505b602082108103612e7c57634e487b7160e01b600052602260045260246000fd5b50919050565b604081526000612e95604083018561272d565b90506001600160a01b03831660208301529392505050565b600060208284031215612ebf57600080fd5b8151610dd5816126be565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612ef257600080fd5b5051919050565b606081526000612f0c6060830186612a4a565b8281036020840152612f1e818661272d565b9150506001600160a01b0383166040830152949350505050565b601f821115610d7457600081815260208120601f850160051c81016020861015612f5f5750805b601f850160051c820191505b81811015612f7e57828155600101612f6b565b505050505050565b815167ffffffffffffffff811115612fa057612fa06127e1565b612fb481612fae8454612e48565b84612f38565b602080601f831160018114612fe95760008415612fd15750858301515b600019600386901b1c1916600185901b178555612f7e565b600085815260208120601f198616915b8281101561301857888601518255948401946001909101908401612ff9565b50858210156130365787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000610dd56020830184612759565b634e487b7160e01b600052601160045260246000fd5b60006001820161308157613081613059565b5060010190565b80820281158282048414176108e9576108e9613059565b6000826130bc57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156108e9576108e9613059565b6000602082840312156130e657600080fd5b81518015158114610dd557600080fd5b828152604060208201526000611a7f604083018461272d565b808201808211156108e9576108e9613059565b60006001600160a01b038087168352808616602084015250836040830152608060608301526131546080830184612759565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351613196816017850160208801612709565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516131d3816028840160208801612709565b01602801949350505050565b602081526000610dd5602083018461272d565b60008161320157613201613059565b50600019019056fea2646970667358221220f4c19949e01f70390d06d8f65fd51806b23a9cdffa1d109ee3c399451201652564736f6c63430008130033",
    "sourceMap": "5053:27650:0:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102e75760003560e01c80635f9ca13811610184578063ab3febc6116100d6578063eb990c591161008a578063f4e1fc4111610064578063f4e1fc41146107e8578063f54fc4a014610803578063fee81cf41461082357600080fd5b8063eb990c59146107a2578063f04e283e146107c2578063f2fde38b146107d557600080fd5b8063cfc0cc34116100bb578063cfc0cc3414610736578063d547741f1461076f578063e1007d4a1461078f57600080fd5b8063ab3febc6146106f6578063c6dff1cf1461071657600080fd5b80638da5cb5b11610138578063a0cf0aea11610112578063a0cf0aea14610699578063a217fddf146106c1578063ab2ec589146106d657600080fd5b80638da5cb5b1461061a5780638e6901861461063357806391d148541461065357600080fd5b806377da8caf1161016957806377da8caf146105c75780637f51bb1f146105da5780637f5a70bd146105fa57600080fd5b80635f9ca1381461059f578063715018a6146105bf57600080fd5b80632cf682b01161023d5780633b19e84a116101f157806354d1f13d116101cb57806354d1f13d146105665780635ab1bd531461056e5780635acd6fac1461058c57600080fd5b80633b19e84a1461051357806341bba0b4146105315780634edbaadc1461055157600080fd5b80632f2ff15d116102225780632f2ff15d146104b357806336568abe146104d35780633a5fbd92146104f357600080fd5b80632cf682b0146104805780632ec38188146104a057600080fd5b80631a20bd881161029f57806324ae6a271161027957806324ae6a2714610438578063256929621461045857806329e40d4b1461046057600080fd5b80631a20bd88146103ba5780631a5da6c8146103e7578063248a9ca31461040757600080fd5b8063068bcd8d116102d0578063068bcd8d14610343578063075c0e9c1461037057806315e812ad1461039b57600080fd5b806301ffc9a7146102ec578063031e2fa114610321575b600080fd5b3480156102f857600080fd5b5061030c61030736600461267c565b610856565b60405190151581526020015b60405180910390f35b34801561032d57600080fd5b5061034161033c3660046126d3565b6108ef565b005b34801561034f57600080fd5b5061036361035e3660046126f0565b61094f565b6040516103189190612778565b61038361037e3660046128a0565b610a62565b6040516001600160a01b039091168152602001610318565b3480156103a757600080fd5b506035545b604051908152602001610318565b3480156103c657600080fd5b506103da6103d536600461299b565b610b16565b6040516103189190612a8e565b3480156103f357600080fd5b506103416104023660046126d3565b610c9d565b34801561041357600080fd5b506103ac6104223660046126f0565b6000908152600160208190526040909120015490565b34801561044457600080fd5b50610341610453366004612aa1565b610cb1565b610341610d79565b34801561046c57600080fd5b5061030c61047b366004612ada565b610dc9565b34801561048c57600080fd5b5061034161049b366004612ada565b610ddc565b6103416104ae3660046128a0565b610e29565b3480156104bf57600080fd5b506103416104ce366004612ada565b610e49565b3480156104df57600080fd5b506103416104ee366004612ada565b610e6f565b3480156104ff57600080fd5b5061034161050e366004612b63565b610efc565b34801561051f57600080fd5b506037546001600160a01b0316610383565b34801561053d57600080fd5b5061034161054c3660046126d3565b610f9d565b34801561055d57600080fd5b506034546103ac565b610341611020565b34801561057a57600080fd5b506038546001600160a01b0316610383565b61034161059a366004612bd0565b61105c565b3480156105ab57600080fd5b506103416105ba366004612c75565b6110ad565b61034161112a565b6103ac6105d5366004612cb2565b61113e565b3480156105e657600080fd5b506103416105f53660046126d3565b6111ed565b34801561060657600080fd5b50610341610615366004612ada565b6111fe565b34801561062657600080fd5b50638b78c6d81954610383565b34801561063f57600080fd5b5061034161064e3660046126f0565b611224565b34801561065f57600080fd5b5061030c61066e366004612ada565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156106a557600080fd5b5061038373eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b3480156106cd57600080fd5b506103ac600081565b3480156106e257600080fd5b5061030c6106f13660046126d3565b611235565b34801561070257600080fd5b5061030c610711366004612ada565b611256565b34801561072257600080fd5b50610341610731366004612d75565b611262565b34801561074257600080fd5b506103836107513660046126f0565b6000908152603a60205260409020600101546001600160a01b031690565b34801561077b57600080fd5b5061034161078a366004612ada565b6112e7565b6103ac61079d366004612cb2565b61130d565b3480156107ae57600080fd5b506103416107bd366004612e02565b6113a4565b6103416107d03660046126d3565b6114c1565b6103416107e33660046126d3565b6114fe565b3480156107f457600080fd5b50670de0b6b3a76400006103ac565b34801561080f57600080fd5b5061034161081e3660046126f0565b611525565b34801561082f57600080fd5b506103ac61083e3660046126d3565b63389a75e1600c908152600091909152602090205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806108e957507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6108f7611536565b6001600160a01b0381166000818152603b6020908152604091829020805460ff1916905590519182527f09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea491015b60405180910390a150565b610957612616565b6000828152603a6020908152604091829020825160c0810184528154815260018201546001600160a01b039081168285015260028301541681850152835180850190945260038201805485526004830180549295939460608701949390840191906109c190612e48565b80601f01602080910402602001604051908101604052809291908181526020018280546109ed90612e48565b8015610a3a5780601f10610a0f57610100808354040283529160200191610a3a565b820191906000526020600020905b815481529060010190602001808311610a1d57829003601f168201915b5050505050815250508152602001600582015481526020016006820154815250509050919050565b6000610a6c611551565b6000838152603a6020526040908190206001015490517f2bbe0cae0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690632bbe0cae90610ac79085903390600401612e82565b6020604051808303816000875af1158015610ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a9190612ead565b90506108e96001600255565b6060610b20611551565b82518067ffffffffffffffff811115610b3b57610b3b6127e1565b604051908082528060200260200182016040528015610b64578160200160208202803683370190505b50915082518114610b885760405163636e39bb60e01b815260040160405180910390fd5b60005b81811015610c9157603a6000868381518110610ba957610ba9612eca565b6020026020010151815260200190815260200160002060010160009054906101000a90046001600160a01b03166001600160a01b0316632bbe0cae858381518110610bf657610bf6612eca565b6020026020010151336040518363ffffffff1660e01b8152600401610c1c929190612e82565b6020604051808303816000875af1158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190612ead565b838281518110610c7157610c71612eca565b6001600160a01b0390921660209283029190910190910152600101610b8b565b50506108e96001600255565b610ca5611536565b610cae816115a8565b50565b610cb9611536565b60006001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610d65576040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190612ee0565b610d67565b475b9050610d7483838361162a565b505050565b60006202a30067ffffffffffffffff164201905063389a75e1600c5233600052806020600c2055337fdbf36a107da19e49527a7176a1babf963b4b0ff8cde35ee35d6cd8f1f9ac7e1d600080a250565b6000610dd58383611664565b9392505050565b81610de6816116a7565b6001600160a01b038216610e0d5760405163538ba4f960e01b815260040160405180910390fd5b6000838152603a6020526040902060050154610d7490836116ce565b610e31611551565b610e3b8282611755565b610e456001600255565b5050565b60008281526001602081905260409091200154610e65816117e8565b610d7483836116ce565b6001600160a01b0381163314610ef25760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b610e4582826117f2565b610f04611551565b6000838152603a6020526040908190206001015490517f0a6f0ee90000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690630a6f0ee990610f6190859085903390600401612ef9565b600060405180830381600087803b158015610f7b57600080fd5b505af1158015610f8f573d6000803e3d6000fd5b50505050610d746001600255565b610fa5611536565b6001600160a01b038116610fcc5760405163538ba4f960e01b815260040160405180910390fd5b6001600160a01b0381166000818152603b6020908152604091829020805460ff1916600117905590519182527f960dd94cbb79169f09a4e445d58b895df2d9bffa5b31055d0932d801724a20d19101610944565b63389a75e1600c523360005260006020600c2055337ffa7b8eab7da67f412cc9575ed43464468f9bfbae89d1675917346ca6d8fe3c92600080a2565b611064611551565b80600003611085576040516303e09bb960e31b815260040160405180910390fd5b6000828152603a6020526040902060010154610e3b90829084906001600160a01b0316611875565b816110b7816119eb565b6000838152603a60209081526040909120835160038201908155918401519091849160048401906110e89082612f86565b50905050837f14f52b76bda9e4c482842cefda2968d332933577988f224e80aae18fba10edf08460405161111c9190613046565b60405180910390a250505050565b611132611536565b61113c60006119f5565b565b6000611148611551565b6001600160a01b0387166000908152603b602052604090205460ff1661119a576040517f9369923800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260396020526040812080546111d6928b926111cc928c929091906111c38361306f565b91905055611a33565b8888888888611a87565b90506111e26001600255565b979650505050505050565b6111f5611536565b610cae81611fc2565b81611208816116a7565b6000838152603a6020526040902060050154610d7490836117f2565b61122c611536565b610cae81612044565b6001600160a01b0381166000908152603b602052604081205460ff166108e9565b6000610dd58383612079565b61126a611551565b80518290811461128d5760405163636e39bb60e01b815260040160405180910390fd5b60005b818110156112db576112d38585838181106112ad576112ad612eca565b905060200201358483815181106112c6576112c6612eca565b6020026020010151611755565b600101611290565b5050610d746001600255565b60008281526001602081905260409091200154611303816117e8565b610d7483836117f2565b60006001600160a01b0387166113365760405163538ba4f960e01b815260040160405180910390fd5b6001600160a01b0387166000908152603b602052604090205460ff1615611389576040517feeffa72100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61139888888888888888611a87565b98975050505050505050565b600054600190610100900460ff161580156113c6575060005460ff8083169116105b6114385760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610ee9565b6000805461ffff191660ff831617610100179055611455336120b1565b61145e856115a8565b61146784611fc2565b611470836120ed565b61147982612044565b6000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050505050565b6114c9611536565b63389a75e1600c52806000526020600c2080544211156114f157636f5e88186000526004601cfd5b60009055610cae816119f5565b611506611536565b8060601b61151c57637448fbae6000526004601cfd5b610cae816119f5565b61152d611536565b610cae816120ed565b638b78c6d81954331461113c576382b429006000526004601cfd5b60028054036115a25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ee9565b60028055565b6001600160a01b0381166115cf5760405163538ba4f960e01b815260040160405180910390fd5b6038805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fd6ceddf6d2a22f21c7c81675c518004eff43bc5c8a6fc32a0b748e69d58671cd90602001610944565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0384160161165957610d748282612164565b610d74838383612180565b6000828152603a60209081526040808320600501548352600182528083206001600160a01b038516845290915281205460ff1680610dd55750610dd58383612079565b6116b18133612079565b610cae5760405163075fd2b160e01b815260040160405180910390fd5b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16610e455760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b6000828152603a6020526040908190206001015490517fef2920fc0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063ef2920fc9034906117b29085903390600401612e82565b6000604051808303818588803b1580156117cb57600080fd5b505af11580156117df573d6000803e3d6000fd5b50505050505050565b610cae81336121cf565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff1615610e455760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000828152603a6020526040812060028101546034548692916001600160a01b031690156118fd57670de0b6b3a76400006034546118b39089613088565b6118bd919061309f565b93506118c984846130c1565b604080516060810182523381526037546001600160a01b031660208201529081018690529093506118fb908290612244565b505b611933816040518060600160405280336001600160a01b03168152602001886001600160a01b0316815260200186815250612244565b506040517ff5b0dfb7000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0386169063f5b0dfb790602401600060405180830381600087803b15801561198f57600080fd5b505af11580156119a3573d6000803e3d6000fd5b505060408051868152602081018890528993507fbf59838198f4ea92f663f5c1fc697f151a1b746b7dff86d564f250a55cbb485192500160405180910390a250505050505050565b6116b18133611664565b638b78c6d81980546001600160a01b039092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a355565b6040516bffffffffffffffffffffffff193360601b166020820152603481018290526000908190605401604051602081830303815290604052805190602001209050611a7f84826122dc565b949350505050565b6038546040517f5e8a7915000000000000000000000000000000000000000000000000000000008152600481018990523360248201526000916001600160a01b031690635e8a791590604401602060405180830381865afa158015611af0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1491906130d4565b611b315760405163075fd2b160e01b815260040160405180910390fd5b603660008154611b409061306f565b91829055506040519091508190600090611b889083906020019081527f61646d696e000000000000000000000000000000000000000000000000000000602082015260250190565b60408051601f19818403018152828252805160209182012060c0840183528d84526001600160a01b03808e168584019081528c8216868601908152606087018c8152608088018a905260a0880185905260008b8152603a87529690962087518155915160018301805491851673ffffffffffffffffffffffffffffffffffffffff1992831617905590516002830180549190941691161790915592518051600385019081559281015191955084939290916004840190611c489082612f86565b5050506080820151600582015560a090910151600690910155611c6b82336116ce565b611c758383612379565b6040517fedd146cc0000000000000000000000000000000000000000000000000000000081526001600160a01b038b169063edd146cc90611cbc9087908d906004016130f6565b600060405180830381600087803b158015611cd657600080fd5b505af1158015611cea573d6000803e3d6000fd5b50505050838a6001600160a01b03166338fff2d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d519190612ee0565b141580611dd15750306001600160a01b03168a6001600160a01b03166315cc481e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc59190612ead565b6001600160a01b031614155b15611def5760405163636e39bb60e01b815260040160405180910390fd5b845160005b81811015611e60576000878281518110611e1057611e10612eca565b6020026020010151905060006001600160a01b0316816001600160a01b031603611e4d5760405163538ba4f960e01b815260040160405180910390fd5b611e5786826116ce565b50600101611df4565b5060355415611f63576001600160a01b03891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee148015611ea257503488603554611e9f919061310f565b10155b80611ed757506001600160a01b03891673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14801590611ed757503460355410155b15611ef5576040516303e09bb960e31b815260040160405180910390fd5b603754603554611f269173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee916001600160a01b039091169061162a565b847f02e340b51c6ae66fd22509c9b016f224c47a54063d4259fe3d860958e9eaac72603554604051611f5a91815260200190565b60405180910390a25b8715611f7457611f7488868d611875565b8b857f69bcb5a6cf6a3c95185cbb451e77787240c866dd2e8332597e3013ff18a1aba18d8c8c8c604051611fab9493929190613122565b60405180910390a350505050979650505050505050565b6001600160a01b038116611fe95760405163538ba4f960e01b815260040160405180910390fd5b6037805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d190602001610944565b60358190556040518181527f803bee7e92bbc6ae7a1551f9f4ed3e31a8ea8df32e93332f41b0028f1091f9c390602001610944565b6000828152603a60209081526040808320600601548352600182528083206001600160a01b038516845290915281205460ff16610dd5565b6001600160a01b0316638b78c6d8198190558060007f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a350565b670de0b6b3a764000081111561212f576040517f2fb15b8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60348190556040518181527f9e826789de2de708fd9f09edea1182545e543893caa8ff71f8eb3aab50a4b06590602001610944565b60008060008084865af1610e455763b12d13eb6000526004601cfd5b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d1560016000511417166121c5576390b8ec186000526004601cfd5b6000603452505050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16610e4557612202816123c6565b61220d8360206123d8565b60405160200161221e92919061315e565b60408051601f198184030181529082905262461bcd60e51b8252610ee9916004016131df565b604081015160009073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016122be57803410156122ab576040517f74c5672b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6122b9836020015182612164565b6122d2565b6122d28484600001518560200151846125b9565b5060019392505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166108e95760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610ee9565b6000828152600160208190526040808320909101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b60606108e96001600160a01b03831660145b606060006123e7836002613088565b6123f290600261310f565b67ffffffffffffffff81111561240a5761240a6127e1565b6040519080825280601f01601f191660200182016040528015612434576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061246b5761246b612eca565b60200101906001600160f81b031916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106124b6576124b6612eca565b60200101906001600160f81b031916908160001a90535060006124da846002613088565b6124e590600161310f565b90505b600181111561256a577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061252657612526612eca565b1a60f81b82828151811061253c5761253c612eca565b60200101906001600160f81b031916908160001a90535060049490941c93612563816131f2565b90506124e8565b508315610dd55760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610ee9565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c52602060006064601c6000895af13d15600160005114171661260857637939f4246000526004601cfd5b600060605260405250505050565b6040518060c001604052806000801916815260200160006001600160a01b0316815260200160006001600160a01b03168152602001612668604051806040016040528060008152602001606081525090565b815260006020820181905260409091015290565b60006020828403121561268e57600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610dd557600080fd5b6001600160a01b0381168114610cae57600080fd5b6000602082840312156126e557600080fd5b8135610dd5816126be565b60006020828403121561270257600080fd5b5035919050565b60005b8381101561272457818101518382015260200161270c565b50506000910152565b60008151808452612745816020860160208601612709565b601f01601f19169290920160200192915050565b805182526000602082015160406020850152611a7f604085018261272d565b6020815281516020820152600060208301516001600160a01b0380821660408501528060408601511660608501525050606083015160c060808401526127c160e0840182612759565b9050608084015160a084015260a084015160c08401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612820576128206127e1565b604052919050565b600067ffffffffffffffff831115612842576128426127e1565b612855601f8401601f19166020016127f7565b905082815283838301111561286957600080fd5b828260208301376000602084830101529392505050565b600082601f83011261289157600080fd5b610dd583833560208501612828565b600080604083850312156128b357600080fd5b82359150602083013567ffffffffffffffff8111156128d157600080fd5b6128dd85828601612880565b9150509250929050565b600067ffffffffffffffff821115612901576129016127e1565b5060051b60200190565b600082601f83011261291c57600080fd5b8135602061293161292c836128e7565b6127f7565b82815260059290921b8401810191818101908684111561295057600080fd5b8286015b8481101561299057803567ffffffffffffffff8111156129745760008081fd5b6129828986838b0101612880565b845250918301918301612954565b509695505050505050565b600080604083850312156129ae57600080fd5b823567ffffffffffffffff808211156129c657600080fd5b818501915085601f8301126129da57600080fd5b813560206129ea61292c836128e7565b82815260059290921b84018101918181019089841115612a0957600080fd5b948201945b83861015612a2757853582529482019490820190612a0e565b96505086013592505080821115612a3d57600080fd5b506128dd8582860161290b565b600081518084526020808501945080840160005b83811015612a835781516001600160a01b031687529582019590820190600101612a5e565b509495945050505050565b602081526000610dd56020830184612a4a565b60008060408385031215612ab457600080fd5b8235612abf816126be565b91506020830135612acf816126be565b809150509250929050565b60008060408385031215612aed57600080fd5b823591506020830135612acf816126be565b600082601f830112612b1057600080fd5b81356020612b2061292c836128e7565b82815260059290921b84018101918181019086841115612b3f57600080fd5b8286015b84811015612990578035612b56816126be565b8352918301918301612b43565b600080600060608486031215612b7857600080fd5b83359250602084013567ffffffffffffffff80821115612b9757600080fd5b612ba387838801612aff565b93506040860135915080821115612bb957600080fd5b50612bc686828701612880565b9150509250925092565b60008060408385031215612be357600080fd5b50508035926020909101359150565b600060408284031215612c0457600080fd5b6040516040810167ffffffffffffffff8282108183111715612c2857612c286127e1565b81604052829350843583526020850135915080821115612c4757600080fd5b508301601f81018513612c5957600080fd5b612c6885823560208401612828565b6020830152505092915050565b60008060408385031215612c8857600080fd5b82359150602083013567ffffffffffffffff811115612ca657600080fd5b6128dd85828601612bf2565b600080600080600080600060e0888a031215612ccd57600080fd5b873596506020880135612cdf816126be565b9550604088013567ffffffffffffffff80821115612cfc57600080fd5b612d088b838c01612880565b965060608a01359150612d1a826126be565b9094506080890135935060a08901359080821115612d3757600080fd5b612d438b838c01612bf2565b935060c08a0135915080821115612d5957600080fd5b50612d668a828b01612aff565b91505092959891949750929550565b600080600060408486031215612d8a57600080fd5b833567ffffffffffffffff80821115612da257600080fd5b818601915086601f830112612db657600080fd5b813581811115612dc557600080fd5b8760208260051b8501011115612dda57600080fd5b602092830195509350908501359080821115612df557600080fd5b50612bc68682870161290b565b60008060008060808587031215612e1857600080fd5b8435612e23816126be565b93506020850135612e33816126be565b93969395505050506040820135916060013590565b600181811c90821680612e5c57607f821691505b602082108103612e7c57634e487b7160e01b600052602260045260246000fd5b50919050565b604081526000612e95604083018561272d565b90506001600160a01b03831660208301529392505050565b600060208284031215612ebf57600080fd5b8151610dd5816126be565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612ef257600080fd5b5051919050565b606081526000612f0c6060830186612a4a565b8281036020840152612f1e818661272d565b9150506001600160a01b0383166040830152949350505050565b601f821115610d7457600081815260208120601f850160051c81016020861015612f5f5750805b601f850160051c820191505b81811015612f7e57828155600101612f6b565b505050505050565b815167ffffffffffffffff811115612fa057612fa06127e1565b612fb481612fae8454612e48565b84612f38565b602080601f831160018114612fe95760008415612fd15750858301515b600019600386901b1c1916600185901b178555612f7e565b600085815260208120601f198616915b8281101561301857888601518255948401946001909101908401612ff9565b50858210156130365787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000610dd56020830184612759565b634e487b7160e01b600052601160045260246000fd5b60006001820161308157613081613059565b5060010190565b80820281158282048414176108e9576108e9613059565b6000826130bc57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156108e9576108e9613059565b6000602082840312156130e657600080fd5b81518015158114610dd557600080fd5b828152604060208201526000611a7f604083018461272d565b808201808211156108e9576108e9613059565b60006001600160a01b038087168352808616602084015250836040830152608060608301526131546080830184612759565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351613196816017850160208801612709565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516131d3816028840160208801612709565b01602801949350505050565b602081526000610dd5602083018461272d565b60008161320157613201613059565b50600019019056fea2646970667358221220f4c19949e01f70390d06d8f65fd51806b23a9cdffa1d109ee3c399451201652564736f6c63430008130033",
    "sourceMap": "5053:27650:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:63;;;;;;;;;;-1:-1:-1;2732:202:63;;;;;:::i;:::-;;:::i;:::-;;;516:14:182;;509:22;491:41;;479:2;464:18;2732:202:63;;;;;;;;14756:288:0;;;;;;;;;;-1:-1:-1;14756:288:0;;;;;:::i;:::-;;:::i;:::-;;32593:108;;;;;;;;;;-1:-1:-1;32593:108:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;17154:258::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4391:55:182;;;4373:74;;4361:2;4346:18;17154:258:0;4227:226:182;31720:85:0;;;;;;;;;;-1:-1:-1;31791:7:0;;31720:85;;;4604:25:182;;;4592:2;4577:18;31720:85:0;4458:177:182;18050:747:0;;;;;;;;;;-1:-1:-1;18050:747:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13186:105::-;;;;;;;;;;-1:-1:-1;13186:105:0;;;;;:::i;:::-;;:::i;4504:129:63:-;;;;;;;;;;-1:-1:-1;4504:129:63;;;;;:::i;:::-;4578:7;4604:12;;;:6;:12;;;;;;;;:22;;;4504:129;16164:430:0;;;;;;;;;;-1:-1:-1;16164:430:0;;;;;:::i;:::-;;:::i;7331:617:91:-;;;:::i;31056:144:0:-;;;;;;;;;;-1:-1:-1;31056:144:0;;;;;:::i;:::-;;:::i;15243:358::-;;;;;;;;;;-1:-1:-1;15243:358:0;;;;;:::i;:::-;;:::i;19640:127::-;;;;;;:::i;:::-;;:::i;4929:145:63:-;;;;;;;;;;-1:-1:-1;4929:145:63;;;;;:::i;:::-;;:::i;6038:214::-;;;;;;;;;;-1:-1:-1;6038:214:63;;;;;:::i;:::-;;:::i;21187:196:0:-;;;;;;;;;;-1:-1:-1;21187:196:0;;;;;:::i;:::-;;:::i;31893:95::-;;;;;;;;;;-1:-1:-1;31973:8:0;;-1:-1:-1;;;;;31973:8:0;31893:95;;14337:229;;;;;;;;;;-1:-1:-1;14337:229:0;;;;;:::i;:::-;;:::i;31557:91::-;;;;;;;;;;-1:-1:-1;31631:10:0;;31557:91;;8030:456:91;;;:::i;32068:89:0:-;;;;;;;;;;-1:-1:-1;32142:8:0;;-1:-1:-1;;;;;32142:8:0;32068:89;;18994:320;;;;;;:::i;:::-;;:::i;12750:247::-;;;;;;;;;;-1:-1:-1;12750:247:0;;;;;:::i;:::-;;:::i;7072:100:91:-;;;:::i;11827:701:0:-;;;;;;:::i;:::-;;:::i;13480:113::-;;;;;;;;;;-1:-1:-1;13480:113:0;;;;;:::i;:::-;;:::i;15806:160::-;;;;;;;;;;-1:-1:-1;15806:160:0;;;;;:::i;:::-;;:::i;9718:191:91:-;;;;;;;;;;-1:-1:-1;;;9866:27:91;9718:191;;14044:101:0;;;;;;;;;;-1:-1:-1;14044:101:0;;;;;:::i;:::-;;:::i;3021:145:63:-;;;;;;;;;;-1:-1:-1;3021:145:63;;;;;:::i;:::-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:63;;;;;;;;;;;;;;;3021:145;4412:75:9;;;;;;;;;;;;4445:42;4412:75;;2153:49:63;;;;;;;;;;-1:-1:-1;2153:49:63;2198:4;2153:49;;32340:132:0;;;;;;;;;;-1:-1:-1;32340:132:0;;;;;:::i;:::-;;:::i;30692:140::-;;;;;;;;;;-1:-1:-1;30692:140:0;;;;;:::i;:::-;;:::i;20230:559::-;;;;;;;;;;-1:-1:-1;20230:559:0;;;;;:::i;:::-;;:::i;31333:126::-;;;;;;;;;;-1:-1:-1;31333:126:0;;;;;:::i;:::-;31394:7;31428:14;;;:5;:14;;;;;:23;;;-1:-1:-1;;;;;31428:23:0;;31333:126;5354:147:63;;;;;;;;;;-1:-1:-1;5354:147:63;;;;;:::i;:::-;;:::i;10137:884:0:-;;;;;;:::i;:::-;;:::i;7520:555::-;;;;;;;;;;-1:-1:-1;7520:555:0;;;;;:::i;:::-;;:::i;8673:708:91:-;;;;;;:::i;:::-;;:::i;6658:349::-;;;;;;:::i;:::-;;:::i;30368:103:0:-;;;;;;;;;;-1:-1:-1;30460:4:0;30368:103;;13767:113;;;;;;;;;;-1:-1:-1;13767:113:0;;;;;:::i;:::-;;:::i;10012:435:91:-;;;;;;;;;;-1:-1:-1;10012:435:91;;;;;:::i;:::-;10282:19;10276:4;10269:33;;;10131:14;10315:26;;;;10425:4;10409:21;;10403:28;;10012:435;2732:202:63;2817:4;2840:47;;;2855:32;2840:47;;:87;;-1:-1:-1;952:25:83;937:40;;;;2891:36:63;2833:94;2732:202;-1:-1:-1;;2732:202:63:o;14756:288:0:-;10836:13:91;:11;:13::i;:::-;-1:-1:-1;;;;;14915:30:0;::::1;14948:5;14915:30:::0;;;:19:::1;:30;::::0;;;;;;;;:38;;-1:-1:-1;;14915:38:0::1;::::0;;15011:26;;4373:74:182;;;15011:26:0::1;::::0;4346:18:182;15011:26:0::1;;;;;;;;14756:288:::0;:::o;32593:108::-;32650:11;;:::i;:::-;32680:14;;;;:5;:14;;;;;;;;;32673:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;32673:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32680:14;;32673:21;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32593:108;;;:::o;17154:258::-;17257:7;2505:21:60;:19;:21::i;:::-;17345:14:0::1;::::0;;;:5:::1;:14;::::0;;;;;;:23:::1;;::::0;:60;;;;;-1:-1:-1;;;;;17345:23:0;;::::1;::::0;:41:::1;::::0;:60:::1;::::0;17387:5;;17394:10:::1;::::0;17345:60:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17338:67;;2547:20:60::0;1787:1;3053:7;:22;2873:209;18050:747:0;18186:29;2505:21:60;:19;:21::i;:::-;18254:15:0;;;18294:27:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;18294:27:0::1;;18279:42;;18352:5;:12;18336;:28;18332:51;;18373:10;;-1:-1:-1::0;;;18373:10:0::1;;;;;;;;;;;18332:51;18501:9;18496:204;18516:12;18512:1;:16;18496:204;;;18563:5;:18;18569:8;18578:1;18569:11;;;;;;;;:::i;:::-;;;;;;;18563:18;;;;;;;;;;;:27;;;;;;;;;;-1:-1:-1::0;;;;;18563:27:0::1;-1:-1:-1::0;;;;;18563:45:0::1;;18609:5;18615:1;18609:8;;;;;;;;:::i;:::-;;;;;;;18619:10;18563:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18545:12;18558:1;18545:15;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18545:85:0;;::::1;:15;::::0;;::::1;::::0;;;;;;;:85;18672:3:::1;;18496:204;;;;18771:19;2547:20:60::0;1787:1;3053:7;:22;2873:209;13186:105:0;10836:13:91;:11;:13::i;:::-;13258:26:0::1;13274:9;13258:15;:26::i;:::-;13186:105:::0;:::o;16164:430::-;10836:13:91;:11;:13::i;:::-;16362:14:0::1;-1:-1:-1::0;;;;;16379:16:0;::::1;4445:42:9;16379:16:0;:93;;16422:50;::::0;;;;16466:4:::1;16422:50;::::0;::::1;4373:74:182::0;-1:-1:-1;;;;;16422:35:0;::::1;::::0;::::1;::::0;4346:18:182;;16422:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16379:93;;;16398:21;16379:93;16362:110;;16544:43;16560:6;16568:10;16580:6;16544:15;:43::i;:::-;16241:353;16164:430:::0;;:::o;7331:617:91:-;7424:15;6282:9;7442:46;;:15;:46;7424:64;;7656:19;7650:4;7643:33;7706:8;7700:4;7693:22;7762:7;7755:4;7749;7739:21;7732:38;7909:8;7862:45;7859:1;7856;7851:67;7558:374;7331:617::o;31056:144:0:-;31137:4;31160:33;31175:7;31184:8;31160:14;:33::i;:::-;31153:40;31056:144;-1:-1:-1;;;31056:144:0:o;15243:358::-;15325:7;8693:28;8713:7;8693:19;:28::i;:::-;-1:-1:-1;;;;;15424:22:0;::::1;15420:49;;15455:14;;-1:-1:-1::0;;;15455:14:0::1;;;;;;;;;;;15420:49;15557:14;::::0;;;:5:::1;:14;::::0;;;;:26:::1;;::::0;15546:48:::1;::::0;15585:8;15546:10:::1;:48::i;19640:127::-:0;2505:21:60;:19;:21::i;:::-;19735:25:0::1;19745:7;19754:5;19735:9;:25::i;:::-;2547:20:60::0;1787:1;3053:7;:22;2873:209;2547:20;19640:127:0;;:::o;4929:145:63:-;4578:7;4604:12;;;:6;:12;;;;;;;;:22;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;6038:214::-:0;-1:-1:-1;;;;;6133:23:63;;719:10:74;6133:23:63;6125:83;;;;-1:-1:-1;;;6125:83:63;;16807:2:182;6125:83:63;;;16789:21:182;16846:2;16826:18;;;16819:30;16885:34;16865:18;;;16858:62;16956:17;16936:18;;;16929:45;16991:19;;6125:83:63;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;21187:196:0:-;2505:21:60;:19;:21::i;:::-;21308:14:0::1;::::0;;;:5:::1;:14;::::0;;;;;;:23:::1;;::::0;:68;;;;;-1:-1:-1;;;;;21308:23:0;;::::1;::::0;:34:::1;::::0;:68:::1;::::0;21343:13;;21358:5;;21365:10:::1;::::0;21308:68:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2547:20:60::0;1787:1;3053:7;:22;2873:209;14337:229:0;10836:13:91;:11;:13::i;:::-;-1:-1:-1;;;;;14423:23:0;::::1;14419:50;;14455:14;;-1:-1:-1::0;;;14455:14:0::1;;;;;;;;;;;14419:50;-1:-1:-1::0;;;;;14480:30:0;::::1;;::::0;;;:19:::1;:30;::::0;;;;;;;;:37;;-1:-1:-1;;14480:37:0::1;14513:4;14480:37;::::0;;14532:27;;4373:74:182;;;14532:27:0::1;::::0;4346:18:182;14532:27:0::1;4227:226:182::0;8030:456:91;8232:19;8226:4;8219:33;8278:8;8272:4;8265:22;8330:1;8323:4;8317;8307:21;8300:32;8461:8;8415:44;8412:1;8409;8404:66;8030:456::o;18994:320:0:-;2505:21:60;:19;:21::i;:::-;19156:7:0::1;19167:1;19156:12:::0;19152:43:::1;;19177:18;;-1:-1:-1::0;;;19177:18:0::1;;;;;;;;;;;19152:43;19283:14;::::0;;;:5:::1;:14;::::0;;;;:23:::1;;::::0;19255:52:::1;::::0;19265:7;;19274;;-1:-1:-1;;;;;19283:23:0::1;19255:9;:52::i;12750:247::-:0;12847:7;8481:30;8503:7;8481:21;:30::i;:::-;12866:17:::1;12886:14:::0;;;:5:::1;:14;::::0;;;;;;;12910:25;;:13:::1;::::0;::::1;:25:::0;;;;;::::1;::::0;12886:14;;12926:9;;12910:25;;;;::::1;::::0;;::::1;:::i;:::-;;;;;12971:7;12951:39;12980:9;12951:39;;;;;;:::i;:::-;;;;;;;;12856:141;12750:247:::0;;;:::o;7072:100:91:-;10836:13;:11;:13::i;:::-;7144:21:::1;7162:1;7144:9;:21::i;:::-;7072:100::o:0;11827:701:0:-;12107:14;2505:21:60;:19;:21::i;:::-;-1:-1:-1;;;;;27573:30:0;;27550:4;27573:30;;;:19;:30;;;;;;;;12133:93:::1;;12192:23;;;;;;;;;;;;;;12133:93;12378:10;12370:19;::::0;;;:7:::1;:19;::::0;;;;:21;;12282:239:::1;::::0;12307:10;;12341:51:::1;::::0;12359:9;;12370:21;;:19;:21:::1;::::0;::::1;:::i;:::-;;;;;12341:17;:51::i;:::-;12407:17;12438:6;12458:7;12479:9;12502;12282:11;:239::i;:::-;12275:246;;2547:20:60::0;1787:1;3053:7;:22;2873:209;2547:20;11827:701:0;;;;;;;;;:::o;13480:113::-;10836:13:91;:11;:13::i;:::-;13560:26:0::1;13576:9;13560:15;:26::i;15806:160::-:0;15891:7;8693:28;8713:7;8693:19;:28::i;:::-;15922:14:::1;::::0;;;:5:::1;:14;::::0;;;;:26:::1;;::::0;15910:49:::1;::::0;15950:8;15910:11:::1;:49::i;14044:101::-:0;10836:13:91;:11;:13::i;:::-;14114:24:0::1;14129:8;14114:14;:24::i;32340:132::-:0;-1:-1:-1;;;;;27573:30:0;;32411:4;27573:30;;;:19;:30;;;;;;;;32434:31;27478:132;30692:140;30771:4;30794:31;30807:7;30816:8;30794:12;:31::i;20230:559::-;2505:21:60;:19;:21::i;:::-;20503:13:0;;20356:8;;20491:25;::::1;20487:48;;20525:10;;-1:-1:-1::0;;;20525:10:0::1;;;;;;;;;;;20487:48;20640:9;20635:148;20655:8;20651:1;:12;20635:148;;;20680:33;20690:8;;20699:1;20690:11;;;;;;;:::i;:::-;;;;;;;20703:6;20710:1;20703:9;;;;;;;;:::i;:::-;;;;;;;20680;:33::i;:::-;20755:3;;20635:148;;;;20327:462;2547:20:60::0;1787:1;3053:7;:22;2873:209;5354:147:63;4578:7;4604:12;;;:6;:12;;;;;;;;:22;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;10137:884:0:-:0;10422:14;-1:-1:-1;;;;;10543:23:0;;10539:50;;10575:14;;-1:-1:-1;;;10575:14:0;;;;;;;;;;;10539:50;-1:-1:-1;;;;;27573:30:0;;27550:4;27573:30;;;:19;:30;;;;;;;;10750:66;;;10794:22;;;;;;;;;;;;;;10750:66;10911:103;10923:10;10945:9;10957:17;10976:6;10984:7;10993:9;11004;10911:11;:103::i;:::-;10904:110;10137:884;-1:-1:-1;;;;;;;;10137:884:0:o;7520:555::-;4882:13:59;;7664:1:0;;4882:13:59;;;;;4881:14;:40;;;;-1:-1:-1;4899:12:59;;:22;;;;:12;;:22;4881:40;4873:99;;;;-1:-1:-1;;;4873:99:59;;20569:2:182;4873:99:59;;;20551:21:182;20608:2;20588:18;;;20581:30;20647:34;20627:18;;;20620:62;20718:16;20698:18;;;20691:44;20752:19;;4873:99:59;20367:410:182;4873:99:59;4982:12;:22;;-1:-1:-1;;5014:20:59;4982:22;;;5014:20;4982:22;5014:20;;;7742:28:0::1;7759:10;7742:16;:28::i;:::-;7824:26;7840:9;7824:15;:26::i;:::-;7904;7920:9;7904:15;:26::i;:::-;7975:30;7993:11;7975:17;:30::i;:::-;8044:24;8059:8;8044:14;:24::i;:::-;5071:5:59::0;5055:21;;-1:-1:-1;;5055:21:59;;;5091:20;;20954:4:182;20942:17;;20924:36;;5091:20:59;;20912:2:182;20897:18;5091:20:59;;;;;;;7520:555:0;;;;;:::o;8673:708:91:-;10836:13;:11;:13::i;:::-;8907:19:::1;8901:4;8894:33;8953:12;8947:4;8940:26;9015:4;9009;8999:21;9121:12;9115:19;9102:11;9099:36;9096:157;;;9167:10;9161:4;9154:24;9234:4;9228;9221:18;9096:157;9330:1;9309:23:::0;;9351::::1;9361:12:::0;9351:9:::1;:23::i;6658:349::-:0;10836:13;:11;:13::i;:::-;6830:8:::1;6826:2;6822:17;6812:150;;6872:10;6866:4;6859:24;6943:4;6937;6930:18;6812:150;6981:19;6991:8;6981:9;:19::i;13767:113:0:-:0;10836:13:91;:11;:13::i;:::-;13843:30:0::1;13861:11;13843:17;:30::i;5593:364:91:-:0;-1:-1:-1;;5799:27:91;5789:8;5786:41;5776:165;;5860:10;5854:4;5847:24;5922:4;5916;5909:18;2580:287:60;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:60;;21173:2:182;2704:63:60;;;21155:21:182;21212:2;21192:18;;;21185:30;21251:33;21231:18;;;21224:61;21302:18;;2704:63:60;20971:355:182;2704:63:60;1830:1;2842:18;;2580:287::o;28806:203:0:-;-1:-1:-1;;;;;28873:23:0;;28869:50;;28905:14;;-1:-1:-1;;;28905:14:0;;;;;;;;;;;28869:50;28930:8;:31;;-1:-1:-1;;28930:31:0;-1:-1:-1;;;;;28930:31:0;;;;;;;;28976:26;;4373:74:182;;;28976:26:0;;4361:2:182;4346:18;28976:26:0;4227:226:182;6721:269:10;-1:-1:-1;;;;;;;6815:16:10;;;6811:173;;6847:45;6879:3;6884:7;6847:31;:45::i;6811:173::-;6923:50;6952:6;6960:3;6965:7;6923:28;:50::i;28401:192:0:-;28483:4;28514:14;;;:5;:14;;;;;;;;:26;;;3130:12:63;;:6;:12;;;;;-1:-1:-1;;;;;3130:29:63;;;;;;;;;;;;28506:80:0;;;;28555:31;28568:7;28577:8;28555:12;:31::i;21879:138::-;21954:33;21967:7;21976:10;21954:12;:33::i;:::-;21949:61;;21996:14;;-1:-1:-1;;;21996:14:0;;;;;;;;;;;7587:233:63;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:63;;;;;;;;;;;;7665:149;;7708:12;;;;7740:4;7708:12;;;;;;;;-1:-1:-1;;;;;7708:29:63;;;;;;;;;;:36;;-1:-1:-1;;7708:36:63;;;;;;;7763:40;;719:10:74;;7708:12:63;;7763:40;;7708:12;7763:40;7587:233;;:::o;25880:151:0:-;25955:14;;;;:5;:14;;;;;;;:23;;;:69;;;;;-1:-1:-1;;;;;25955:23:0;;;;:32;;25995:9;;25955:69;;26006:5;;26013:10;;25955:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25880:151;;:::o;3460:103:63:-;3526:30;3537:4;719:10:74;3526::63;:30::i;7991:234::-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:63;;;;;;;;;;;;8070:149;;;8144:5;8112:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8112:29:63;;;;;;;;;;:37;;-1:-1:-1;;8112:37:63;;;8168:40;719:10:74;;8112:12:63;;8168:40;;8144:5;8168:40;7991:234;;:::o;26355:738:0:-;26448:17;26538:14;;;:5;:14;;;;;26579:10;;;;26604;;26500:7;;26538:14;-1:-1:-1;;;;;26579:10:0;;26604:14;26600:251;;30460:4;26657:10;;26647:20;;:7;:20;:::i;:::-;26646:44;;;;:::i;:::-;26634:56;-1:-1:-1;26704:27:0;26634:56;26704:27;;:::i;:::-;26774:65;;;;;;;;26794:10;26774:65;;26810:8;;-1:-1:-1;;;;;26810:8:0;26774:65;;;;;;;;;;26704:27;;-1:-1:-1;26746:94:0;;26766:6;;26746:19;:94::i;:::-;;26600:251;26861:109;26881:6;26889:80;;;;;;;;26909:10;-1:-1:-1;;;;;26889:80:0;;;;;26933:9;-1:-1:-1;;;;;26889:80:0;;;;;26953:14;26889:80;;;26861:19;:109::i;:::-;-1:-1:-1;26980:44:0;;;;;;;;4604:25:182;;;-1:-1:-1;;;;;26980:28:0;;;;;4577:18:182;;26980:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27040:46:0;;;22090:25:182;;;22146:2;22131:18;;22124:34;;;27051:7:0;;-1:-1:-1;27040:46:0;;-1:-1:-1;22063:18:182;27040:46:0;;;;;;;26438:655;;;;26355:738;;;:::o;21629:142::-;21706:35;21721:7;21730:10;21706:14;:35::i;5040:495:91:-;-1:-1:-1;;5416:16:91;;-1:-1:-1;;;;;5272:26:91;;;;;;5376:38;5373:1;;5365:78;5492:27;5040:495::o;4749:279:6:-;4867:36;;-1:-1:-1;;4884:10:6;22346:2:182;22342:15;22338:53;4867:36:6;;;22326:66:182;22408:12;;;22401:28;;;4823:7:6;;;;22445:12:182;;4867:36:6;;;;;;;;;;;;4857:47;;;;;;4842:62;;4968:53;5005:9;5016:4;4968:36;:53::i;:::-;4961:60;4749:279;-1:-1:-1;;;;4749:279:6:o;22850:2683:0:-;23143:8;;:57;;;;;;;;22642:25:182;;;23189:10:0;22683:18:182;;;22676:83;23112:14:0;;-1:-1:-1;;;;;23143:8:0;;:33;;22615:18:182;;23143:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23138:85;;23209:14;;-1:-1:-1;;;23209:14:0;;;;;;;;;;;23138:85;23245:10;;23243:12;;;;;:::i;:::-;;;;;-1:-1:-1;23483:33:0;;23243:12;;-1:-1:-1;23243:12:0;;23394:25;;23483:33;;23243:12;;23483:33;;23282:19:182;;;23331:7;23326:2;23317:12;;23310:29;23364:2;23355:12;;23052:321;23483:33:0;;;;-1:-1:-1;;23483:33:0;;;;;;;;;23473:44;;23483:33;23473:44;;;;23583:228;;;;;;;;-1:-1:-1;;;;;23583:228:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23564:16;23878:13;;;:5;:13;;;;;;:20;;;;;;;;;;;;;;-1:-1:-1;;23878:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23473:44;;-1:-1:-1;23483:33:0;;23878:13;:20;;;;;;;;;;:::i;:::-;-1:-1:-1;;;23878:20:0;;;;;;;;;;;;;;;;;;23958:39;23969:15;23986:10;23958;:39::i;:::-;24056:49;24070:17;24089:15;24056:13;:49::i;:::-;24260:47;;;;;-1:-1:-1;;;;;24260:20:0;;;;;:47;;24281:6;;24289:17;;24260:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24347:6;24322:9;-1:-1:-1;;;;;24322:19:0;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;:80;;;;24397:4;-1:-1:-1;;;;;24357:45:0;24365:9;-1:-1:-1;;;;;24365:17:0;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;24357:45:0;;;24322:80;24318:103;;;24411:10;;-1:-1:-1;;;24411:10:0;;;;;;;;;;;24318:103;24494:16;;24469:22;24520:266;24540:14;24536:1;:18;24520:266;;;24571:15;24589:9;24599:1;24589:12;;;;;;;;:::i;:::-;;;;;;;24571:30;;24638:1;-1:-1:-1;;;;;24619:21:0;:7;-1:-1:-1;;;;;24619:21:0;;24615:48;;24649:14;;-1:-1:-1;;;24649:14:0;;;;;;;;;;;24615:48;24678:38;24689:17;24708:7;24678:10;:38::i;:::-;-1:-1:-1;24758:3:0;;24520:266;;;-1:-1:-1;24800:7:0;;:11;24796:556;;-1:-1:-1;;;;;25080:16:0;;4445:42:9;25080:16:0;:52;;;;;25122:9;25111:7;25101;;:17;;;;:::i;:::-;:30;;25080:52;25079:100;;;-1:-1:-1;;;;;;25138:16:0;;4445:42:9;25138:16:0;;;;:40;;;25169:9;25158:7;;:20;;25138:40;25075:164;;;25206:18;;-1:-1:-1;;;25206:18:0;;;;;;;;;;;25075:164;25276:8;;25286:7;;25252:42;;4445::9;;-1:-1:-1;;;;;25276:8:0;;;;25252:15;:42::i;:::-;25325:6;25313:28;25333:7;;25313:28;;;;4604:25:182;;4592:2;4577:18;;4458:177;25313:28:0;;;;;;;;24796:556;25366:11;;25362:79;;25393:37;25403:7;25412:6;25420:9;25393;:37::i;:::-;25476:10;25468:6;25456:70;25488:9;25499:6;25507:7;25516:9;25456:70;;;;;;;;;:::i;:::-;;;;;;;;23128:2405;;;;22850:2683;;;;;;;;;:::o;29222:199::-;-1:-1:-1;;;;;29297:23:0;;29293:50;;29329:14;;-1:-1:-1;;;29329:14:0;;;;;;;;;;;29293:50;29354:8;:20;;-1:-1:-1;;29354:20:0;-1:-1:-1;;;;;29354:20:0;;;;;;;;29389:25;;4373:74:182;;;29389:25:0;;4361:2:182;4346:18;29389:25:0;4227:226:182;30006:125:0;30067:7;:18;;;30101:23;;4604:25:182;;;30101:23:0;;4592:2:182;4577:18;30101:23:0;4458:177:182;27926:153:0;28006:4;28037:14;;;:5;:14;;;;;;;;:24;;;3130:12:63;;:6;:12;;;;;-1:-1:-1;;;;;3130:29:63;;;;;;;;;;;;28029:43:0;3021:145:63;4520:448:91;-1:-1:-1;;;;;4709:26:91;-1:-1:-1;;4784:38:91;;;4709:26;4940:1;4900:38;4940:1;;4889:63;4520:448;:::o;29621:198:0:-;29706:4;29692:11;:18;29688:44;;;29719:13;;;;;;;;;;;;;;29688:44;29743:10;:24;;;29783:29;;4604:25:182;;;29783:29:0;;4592:2:182;4577:18;29783:29:0;4458:177:182;2455:490:96;2711:4;2705;2699;2693;2685:6;2681:2;2674:5;2669:47;2659:270;;2822:10;2816:4;2809:24;2910:4;2904;2897:18;11454:1189;11617:2;11611:4;11604:16;11674:6;11668:4;11661:20;11814:34;11808:4;11801:48;12272:4;12266;12260;12254;12251:1;12244:5;12237;12232:45;12192:16;12185:24;12181:1;12174:4;12168:11;12165:18;12162:48;11890:405;11863:655;;12411:10;12405:4;12398:24;12499:4;12493;12486:18;11863:655;12625:1;12619:4;12612:15;11454:1189;;;:::o;3844:479:63:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:63;;;;;;;;;;;;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:63;;;;;;;;;;-1:-1:-1;;;3970:336:63;;;;;;;:::i;6019:500:10:-;6150:20;;;;6117:4;;-1:-1:-1;;;;;;;6184:16:10;;;6180:312;;6260:6;6248:9;:18;6244:48;;;6275:17;;;;;;;;;;;;;;6244:48;6307:57;6339:13;:16;;;6357:6;6307:31;:57::i;:::-;6180:312;;;6395:86;6428:6;6436:13;:18;;;6456:13;:16;;;6474:6;6395:32;:86::i;:::-;-1:-1:-1;6508:4:10;;6019:500;-1:-1:-1;;;6019:500:10:o;2118:794:58:-;2202:16;2534:48;2516:14;2510:4;2506:25;2500:4;2496:36;2493:90;2487:4;2480:104;2741:32;2724:14;2718:4;2714:25;2711:63;2705:4;2698:77;2823:4;2817;2811;2808:1;2800:28;2788:40;-1:-1:-1;;;;;;2855:22:58;;2847:58;;;;-1:-1:-1;;;2847:58:58;;26133:2:182;2847:58:58;;;26115:21:182;26172:2;26152:18;;;26145:30;26211:25;26191:18;;;26184:53;26254:18;;2847:58:58;25931:347:182;7172:247:63;7255:25;4604:12;;;:6;:12;;;;;;;;:22;;;;;7311:34;;;;7360:52;;4604:22;;7311:34;;4604:22;;:12;;7360:52;;7255:25;7360:52;7245:174;7172:247;;:::o;2407:149:78:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:78;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:78;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:78;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:78;;;;;;;;-1:-1:-1;2030:9:78;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2105:5;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:78;;;;;;;;-1:-1:-1;2141:1:78;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:78;;2162:55;;;;-1:-1:-1;;;2162:55:78;;26626:2:182;2162:55:78;;;26608:21:182;;;26645:18;;;26638:30;26704:34;26684:18;;;26677:62;26756:18;;2162:55:78;26424:356:182;7671:1379:96;7854:4;7848:11;7920:6;7914:4;7907:20;7985:2;7979:4;7972:16;8050:4;8046:2;8042:13;8036:4;8029:27;8199:34;8193:4;8186:48;8657:4;8651;8645;8639;8636:1;8629:5;8622;8617:45;8577:16;8570:24;8566:1;8559:4;8553:11;8550:18;8547:48;8275:405;8248:659;;8800:10;8794:4;8787:24;8888:4;8882;8875:18;8248:659;8934:1;8928:4;8921:15;8990:4;8983:15;-1:-1:-1;;;;7671:1379:96:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:332:182:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:154;-1:-1:-1;;;;;622:5:182;618:54;611:5;608:65;598:93;;687:1;684;677:12;702:247;761:6;814:2;802:9;793:7;789:23;785:32;782:52;;;830:1;827;820:12;782:52;869:9;856:23;888:31;913:5;888:31;:::i;954:180::-;1013:6;1066:2;1054:9;1045:7;1041:23;1037:32;1034:52;;;1082:1;1079;1072:12;1034:52;-1:-1:-1;1105:23:182;;954:180;-1:-1:-1;954:180:182:o;1139:250::-;1224:1;1234:113;1248:6;1245:1;1242:13;1234:113;;;1324:11;;;1318:18;1305:11;;;1298:39;1270:2;1263:10;1234:113;;;-1:-1:-1;;1381:1:182;1363:16;;1356:27;1139:250::o;1394:271::-;1436:3;1474:5;1468:12;1501:6;1496:3;1489:19;1517:76;1586:6;1579:4;1574:3;1570:14;1563:4;1556:5;1552:16;1517:76;:::i;:::-;1647:2;1626:15;-1:-1:-1;;1622:29:182;1613:39;;;;1654:4;1609:50;;1394:271;-1:-1:-1;;1394:271:182:o;1670:252::-;1757:5;1751:12;1746:3;1739:25;1721:3;1810:4;1803:5;1799:16;1793:23;1848:4;1841;1836:3;1832:14;1825:28;1869:47;1910:4;1905:3;1901:14;1887:12;1869:47;:::i;1927:797::-;2100:2;2089:9;2082:21;2145:6;2139:13;2134:2;2123:9;2119:18;2112:41;2063:4;2200:2;2192:6;2188:15;2182:22;-1:-1:-1;;;;;2319:2:182;2305:12;2301:21;2296:2;2285:9;2281:18;2274:49;2387:2;2381;2373:6;2369:15;2363:22;2359:31;2354:2;2343:9;2339:18;2332:59;;;2440:2;2432:6;2428:15;2422:22;2481:4;2475:3;2464:9;2460:19;2453:33;2509:63;2567:3;2556:9;2552:19;2536:14;2509:63;:::i;:::-;2495:77;;2627:3;2619:6;2615:16;2609:23;2603:3;2592:9;2588:19;2581:52;2689:3;2681:6;2677:16;2671:23;2664:4;2653:9;2649:20;2642:53;2712:6;2704:14;;;1927:797;;;;:::o;2729:184::-;-1:-1:-1;;;2778:1:182;2771:88;2878:4;2875:1;2868:15;2902:4;2899:1;2892:15;2918:275;2989:2;2983:9;3054:2;3035:13;;-1:-1:-1;;3031:27:182;3019:40;;3089:18;3074:34;;3110:22;;;3071:62;3068:88;;;3136:18;;:::i;:::-;3172:2;3165:22;2918:275;;-1:-1:-1;2918:275:182:o;3198:406::-;3262:5;3296:18;3288:6;3285:30;3282:56;;;3318:18;;:::i;:::-;3356:57;3401:2;3380:15;;-1:-1:-1;;3376:29:182;3407:4;3372:40;3356:57;:::i;:::-;3347:66;;3436:6;3429:5;3422:21;3476:3;3467:6;3462:3;3458:16;3455:25;3452:45;;;3493:1;3490;3483:12;3452:45;3542:6;3537:3;3530:4;3523:5;3519:16;3506:43;3596:1;3589:4;3580:6;3573:5;3569:18;3565:29;3558:40;3198:406;;;;;:::o;3609:220::-;3651:5;3704:3;3697:4;3689:6;3685:17;3681:27;3671:55;;3722:1;3719;3712:12;3671:55;3744:79;3819:3;3810:6;3797:20;3790:4;3782:6;3778:17;3744:79;:::i;3834:388::-;3911:6;3919;3972:2;3960:9;3951:7;3947:23;3943:32;3940:52;;;3988:1;3985;3978:12;3940:52;4024:9;4011:23;4001:33;;4085:2;4074:9;4070:18;4057:32;4112:18;4104:6;4101:30;4098:50;;;4144:1;4141;4134:12;4098:50;4167:49;4208:7;4199:6;4188:9;4184:22;4167:49;:::i;:::-;4157:59;;;3834:388;;;;;:::o;4640:183::-;4700:4;4733:18;4725:6;4722:30;4719:56;;;4755:18;;:::i;:::-;-1:-1:-1;4800:1:182;4796:14;4812:4;4792:25;;4640:183::o;4828:886::-;4880:5;4933:3;4926:4;4918:6;4914:17;4910:27;4900:55;;4951:1;4948;4941:12;4900:55;4987:6;4974:20;5013:4;5037:60;5053:43;5093:2;5053:43;:::i;:::-;5037:60;:::i;:::-;5131:15;;;5217:1;5213:10;;;;5201:23;;5197:32;;;5162:12;;;;5241:15;;;5238:35;;;5269:1;5266;5259:12;5238:35;5305:2;5297:6;5293:15;5317:368;5333:6;5328:3;5325:15;5317:368;;;5419:3;5406:17;5455:18;5442:11;5439:35;5436:125;;;5515:1;5544:2;5540;5533:14;5436:125;5586:56;5638:3;5633:2;5619:11;5611:6;5607:24;5603:33;5586:56;:::i;:::-;5574:69;;-1:-1:-1;5663:12:182;;;;5350;;5317:368;;;-1:-1:-1;5703:5:182;4828:886;-1:-1:-1;;;;;;4828:886:182:o;5719:1147::-;5846:6;5854;5907:2;5895:9;5886:7;5882:23;5878:32;5875:52;;;5923:1;5920;5913:12;5875:52;5963:9;5950:23;5992:18;6033:2;6025:6;6022:14;6019:34;;;6049:1;6046;6039:12;6019:34;6087:6;6076:9;6072:22;6062:32;;6132:7;6125:4;6121:2;6117:13;6113:27;6103:55;;6154:1;6151;6144:12;6103:55;6190:2;6177:16;6212:4;6236:60;6252:43;6292:2;6252:43;:::i;6236:60::-;6330:15;;;6412:1;6408:10;;;;6400:19;;6396:28;;;6361:12;;;;6436:19;;;6433:39;;;6468:1;6465;6458:12;6433:39;6492:11;;;;6512:142;6528:6;6523:3;6520:15;6512:142;;;6594:17;;6582:30;;6545:12;;;;6632;;;;6512:142;;;6673:5;-1:-1:-1;;6716:18:182;;6703:32;;-1:-1:-1;;6747:16:182;;;6744:36;;;6776:1;6773;6766:12;6744:36;;6799:61;6852:7;6841:8;6830:9;6826:24;6799:61;:::i;6871:484::-;6924:3;6962:5;6956:12;6989:6;6984:3;6977:19;7015:4;7044:2;7039:3;7035:12;7028:19;;7081:2;7074:5;7070:14;7102:1;7112:218;7126:6;7123:1;7120:13;7112:218;;;7191:13;;-1:-1:-1;;;;;7187:62:182;7175:75;;7270:12;;;;7305:15;;;;7148:1;7141:9;7112:218;;;-1:-1:-1;7346:3:182;;6871:484;-1:-1:-1;;;;;6871:484:182:o;7360:261::-;7539:2;7528:9;7521:21;7502:4;7559:56;7611:2;7600:9;7596:18;7588:6;7559:56;:::i;7993:388::-;8061:6;8069;8122:2;8110:9;8101:7;8097:23;8093:32;8090:52;;;8138:1;8135;8128:12;8090:52;8177:9;8164:23;8196:31;8221:5;8196:31;:::i;:::-;8246:5;-1:-1:-1;8303:2:182;8288:18;;8275:32;8316:33;8275:32;8316:33;:::i;:::-;8368:7;8358:17;;;7993:388;;;;;:::o;8386:315::-;8454:6;8462;8515:2;8503:9;8494:7;8490:23;8486:32;8483:52;;;8531:1;8528;8521:12;8483:52;8567:9;8554:23;8544:33;;8627:2;8616:9;8612:18;8599:32;8640:31;8665:5;8640:31;:::i;9026:737::-;9080:5;9133:3;9126:4;9118:6;9114:17;9110:27;9100:55;;9151:1;9148;9141:12;9100:55;9187:6;9174:20;9213:4;9237:60;9253:43;9293:2;9253:43;:::i;9237:60::-;9331:15;;;9417:1;9413:10;;;;9401:23;;9397:32;;;9362:12;;;;9441:15;;;9438:35;;;9469:1;9466;9459:12;9438:35;9505:2;9497:6;9493:15;9517:217;9533:6;9528:3;9525:15;9517:217;;;9613:3;9600:17;9630:31;9655:5;9630:31;:::i;:::-;9674:18;;9712:12;;;;9550;;9517:217;;9768:635;9879:6;9887;9895;9948:2;9936:9;9927:7;9923:23;9919:32;9916:52;;;9964:1;9961;9954:12;9916:52;10000:9;9987:23;9977:33;;10061:2;10050:9;10046:18;10033:32;10084:18;10125:2;10117:6;10114:14;10111:34;;;10141:1;10138;10131:12;10111:34;10164:61;10217:7;10208:6;10197:9;10193:22;10164:61;:::i;:::-;10154:71;;10278:2;10267:9;10263:18;10250:32;10234:48;;10307:2;10297:8;10294:16;10291:36;;;10323:1;10320;10313:12;10291:36;;10346:51;10389:7;10378:8;10367:9;10363:24;10346:51;:::i;:::-;10336:61;;;9768:635;;;;;:::o;10904:248::-;10972:6;10980;11033:2;11021:9;11012:7;11008:23;11004:32;11001:52;;;11049:1;11046;11039:12;11001:52;-1:-1:-1;;11072:23:182;;;11142:2;11127:18;;;11114:32;;-1:-1:-1;10904:248:182:o;11157:734::-;11212:5;11260:4;11248:9;11243:3;11239:19;11235:30;11232:50;;;11278:1;11275;11268:12;11232:50;11311:4;11305:11;11355:4;11347:6;11343:17;11379:18;11447:6;11435:10;11432:22;11427:2;11415:10;11412:18;11409:46;11406:72;;;11458:18;;:::i;:::-;11500:10;11494:4;11487:24;11529:6;11520:15;;11572:9;11559:23;11551:6;11544:39;11634:2;11623:9;11619:18;11606:32;11592:46;;11661:2;11653:6;11650:14;11647:34;;;11677:1;11674;11667:12;11647:34;-1:-1:-1;11700:22:182;;11753:4;11745:13;;11741:23;-1:-1:-1;11731:51:182;;11778:1;11775;11768:12;11731:51;11815:69;11880:3;11875:2;11862:16;11857:2;11853;11849:11;11815:69;:::i;:::-;11810:2;11802:6;11798:15;11791:94;;;11157:734;;;;:::o;11896:415::-;11990:6;11998;12051:2;12039:9;12030:7;12026:23;12022:32;12019:52;;;12067:1;12064;12057:12;12019:52;12103:9;12090:23;12080:33;;12164:2;12153:9;12149:18;12136:32;12191:18;12183:6;12180:30;12177:50;;;12223:1;12220;12213:12;12177:50;12246:59;12297:7;12288:6;12277:9;12273:22;12246:59;:::i;12316:1208::-;12489:6;12497;12505;12513;12521;12529;12537;12590:3;12578:9;12569:7;12565:23;12561:33;12558:53;;;12607:1;12604;12597:12;12558:53;12643:9;12630:23;12620:33;;12703:2;12692:9;12688:18;12675:32;12716:31;12741:5;12716:31;:::i;:::-;12766:5;-1:-1:-1;12822:2:182;12807:18;;12794:32;12845:18;12875:14;;;12872:34;;;12902:1;12899;12892:12;12872:34;12925:49;12966:7;12957:6;12946:9;12942:22;12925:49;:::i;:::-;12915:59;;13026:2;13015:9;13011:18;12998:32;12983:47;;13039:33;13064:7;13039:33;:::i;:::-;13091:7;;-1:-1:-1;13145:3:182;13130:19;;13117:33;;-1:-1:-1;13203:3:182;13188:19;;13175:33;;13220:16;;;13217:36;;;13249:1;13246;13239:12;13217:36;13272:61;13325:7;13314:8;13303:9;13299:24;13272:61;:::i;:::-;13262:71;;13386:3;13375:9;13371:19;13358:33;13342:49;;13416:2;13406:8;13403:16;13400:36;;;13432:1;13429;13422:12;13400:36;;13455:63;13510:7;13499:8;13488:9;13484:24;13455:63;:::i;:::-;13445:73;;;12316:1208;;;;;;;;;;:::o;13789:854::-;13918:6;13926;13934;13987:2;13975:9;13966:7;13962:23;13958:32;13955:52;;;14003:1;14000;13993:12;13955:52;14043:9;14030:23;14072:18;14113:2;14105:6;14102:14;14099:34;;;14129:1;14126;14119:12;14099:34;14167:6;14156:9;14152:22;14142:32;;14212:7;14205:4;14201:2;14197:13;14193:27;14183:55;;14234:1;14231;14224:12;14183:55;14274:2;14261:16;14300:2;14292:6;14289:14;14286:34;;;14316:1;14313;14306:12;14286:34;14371:7;14364:4;14354:6;14351:1;14347:14;14343:2;14339:23;14335:34;14332:47;14329:67;;;14392:1;14389;14382:12;14329:67;14423:4;14415:13;;;;-1:-1:-1;14447:6:182;-1:-1:-1;14491:20:182;;;14478:34;;14524:16;;;14521:36;;;14553:1;14550;14543:12;14521:36;;14576:61;14629:7;14618:8;14607:9;14603:24;14576:61;:::i;14648:533::-;14742:6;14750;14758;14766;14819:3;14807:9;14798:7;14794:23;14790:33;14787:53;;;14836:1;14833;14826:12;14787:53;14875:9;14862:23;14894:31;14919:5;14894:31;:::i;:::-;14944:5;-1:-1:-1;15001:2:182;14986:18;;14973:32;15014:33;14973:32;15014:33;:::i;:::-;14648:533;;15066:7;;-1:-1:-1;;;;15120:2:182;15105:18;;15092:32;;15171:2;15156:18;15143:32;;14648:533::o;15186:437::-;15265:1;15261:12;;;;15308;;;15329:61;;15383:4;15375:6;15371:17;15361:27;;15329:61;15436:2;15428:6;15425:14;15405:18;15402:38;15399:218;;-1:-1:-1;;;15470:1:182;15463:88;15574:4;15571:1;15564:15;15602:4;15599:1;15592:15;15399:218;;15186:437;;;:::o;15628:338::-;15803:2;15792:9;15785:21;15766:4;15823:45;15864:2;15853:9;15849:18;15841:6;15823:45;:::i;:::-;15815:53;;-1:-1:-1;;;;;15908:6:182;15904:55;15899:2;15888:9;15884:18;15877:83;15628:338;;;;;:::o;15971:251::-;16041:6;16094:2;16082:9;16073:7;16069:23;16065:32;16062:52;;;16110:1;16107;16100:12;16062:52;16142:9;16136:16;16161:31;16186:5;16161:31;:::i;16227:184::-;-1:-1:-1;;;16276:1:182;16269:88;16376:4;16373:1;16366:15;16400:4;16397:1;16390:15;16416:184;16486:6;16539:2;16527:9;16518:7;16514:23;16510:32;16507:52;;;16555:1;16552;16545:12;16507:52;-1:-1:-1;16578:16:182;;16416:184;-1:-1:-1;16416:184:182:o;17021:542::-;17274:2;17263:9;17256:21;17237:4;17300:56;17352:2;17341:9;17337:18;17329:6;17300:56;:::i;:::-;17404:9;17396:6;17392:22;17387:2;17376:9;17372:18;17365:50;17432:33;17458:6;17450;17432:33;:::i;:::-;17424:41;;;-1:-1:-1;;;;;17505:6:182;17501:55;17496:2;17485:9;17481:18;17474:83;17021:542;;;;;;:::o;17694:545::-;17796:2;17791:3;17788:11;17785:448;;;17832:1;17857:5;17853:2;17846:17;17902:4;17898:2;17888:19;17972:2;17960:10;17956:19;17953:1;17949:27;17943:4;17939:38;18008:4;17996:10;17993:20;17990:47;;;-1:-1:-1;18031:4:182;17990:47;18086:2;18081:3;18077:12;18074:1;18070:20;18064:4;18060:31;18050:41;;18141:82;18159:2;18152:5;18149:13;18141:82;;;18204:17;;;18185:1;18174:13;18141:82;;;18145:3;;;17694:545;;;:::o;18415:1352::-;18541:3;18535:10;18568:18;18560:6;18557:30;18554:56;;;18590:18;;:::i;:::-;18619:97;18709:6;18669:38;18701:4;18695:11;18669:38;:::i;:::-;18663:4;18619:97;:::i;:::-;18771:4;;18835:2;18824:14;;18852:1;18847:663;;;;19554:1;19571:6;19568:89;;;-1:-1:-1;19623:19:182;;;19617:26;19568:89;-1:-1:-1;;18372:1:182;18368:11;;;18364:24;18360:29;18350:40;18396:1;18392:11;;;18347:57;19670:81;;18817:944;;18847:663;17641:1;17634:14;;;17678:4;17665:18;;-1:-1:-1;;18883:20:182;;;19001:236;19015:7;19012:1;19009:14;19001:236;;;19104:19;;;19098:26;19083:42;;19196:27;;;;19164:1;19152:14;;;;19031:19;;19001:236;;;19005:3;19265:6;19256:7;19253:19;19250:201;;;19326:19;;;19320:26;-1:-1:-1;;19409:1:182;19405:14;;;19421:3;19401:24;19397:37;19393:42;19378:58;19363:74;;19250:201;-1:-1:-1;;;;;19497:1:182;19481:14;;;19477:22;19464:36;;-1:-1:-1;18415:1352:182:o;19772:261::-;19953:2;19942:9;19935:21;19916:4;19973:54;20023:2;20012:9;20008:18;20000:6;19973:54;:::i;20038:184::-;-1:-1:-1;;;20087:1:182;20080:88;20187:4;20184:1;20177:15;20211:4;20208:1;20201:15;20227:135;20266:3;20287:17;;;20284:43;;20307:18;;:::i;:::-;-1:-1:-1;20354:1:182;20343:13;;20227:135::o;21331:168::-;21404:9;;;21435;;21452:15;;;21446:22;;21432:37;21422:71;;21473:18;;:::i;21504:274::-;21544:1;21570;21560:189;;-1:-1:-1;;;21602:1:182;21595:88;21706:4;21703:1;21696:15;21734:4;21731:1;21724:15;21560:189;-1:-1:-1;21763:9:182;;21504:274::o;21783:128::-;21850:9;;;21871:11;;;21868:37;;;21885:18;;:::i;22770:277::-;22837:6;22890:2;22878:9;22869:7;22865:23;22861:32;22858:52;;;22906:1;22903;22896:12;22858:52;22938:9;22932:16;22991:5;22984:13;22977:21;22970:5;22967:32;22957:60;;23013:1;23010;23003:12;23378:289;23553:6;23542:9;23535:25;23596:2;23591;23580:9;23576:18;23569:30;23516:4;23616:45;23657:2;23646:9;23642:18;23634:6;23616:45;:::i;23942:125::-;24007:9;;;24028:10;;;24025:36;;;24041:18;;:::i;24072:573::-;24318:4;-1:-1:-1;;;;;24428:2:182;24420:6;24416:15;24405:9;24398:34;24480:2;24472:6;24468:15;24463:2;24452:9;24448:18;24441:43;;24520:6;24515:2;24504:9;24500:18;24493:34;24563:3;24558:2;24547:9;24543:18;24536:31;24584:55;24634:3;24623:9;24619:19;24611:6;24584:55;:::i;:::-;24576:63;24072:573;-1:-1:-1;;;;;;24072:573:182:o;24889:812::-;25300:25;25295:3;25288:38;25270:3;25355:6;25349:13;25371:75;25439:6;25434:2;25429:3;25425:12;25418:4;25410:6;25406:17;25371:75;:::i;:::-;25510:19;25505:2;25465:16;;;25497:11;;;25490:40;25555:13;;25577:76;25555:13;25639:2;25631:11;;25624:4;25612:17;;25577:76;:::i;:::-;25673:17;25692:2;25669:26;;24889:812;-1:-1:-1;;;;24889:812:182:o;25706:220::-;25855:2;25844:9;25837:21;25818:4;25875:45;25916:2;25905:9;25901:18;25893:6;25875:45;:::i;26283:136::-;26322:3;26350:5;26340:39;;26359:18;;:::i;:::-;-1:-1:-1;;;26395:18:182;;26283:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "NATIVE()": "a0cf0aea",
    "addPoolManager(uint256,address)": "2cf682b0",
    "addToCloneableStrategies(address)": "41bba0b4",
    "allocate(uint256,bytes)": "2ec38188",
    "batchAllocate(uint256[],bytes[])": "c6dff1cf",
    "batchRegisterRecipient(uint256[],bytes[])": "1a20bd88",
    "cancelOwnershipHandover()": "54d1f13d",
    "completeOwnershipHandover(address)": "f04e283e",
    "createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])": "77da8caf",
    "createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])": "e1007d4a",
    "distribute(uint256,address[],bytes)": "3a5fbd92",
    "fundPool(uint256,uint256)": "5acd6fac",
    "getBaseFee()": "15e812ad",
    "getFeeDenominator()": "f4e1fc41",
    "getPercentFee()": "4edbaadc",
    "getPool(uint256)": "068bcd8d",
    "getRegistry()": "5ab1bd53",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getStrategy(uint256)": "cfc0cc34",
    "getTreasury()": "3b19e84a",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(address,address,uint256,uint256)": "eb990c59",
    "isCloneableStrategy(address)": "ab2ec589",
    "isPoolAdmin(uint256,address)": "ab3febc6",
    "isPoolManager(uint256,address)": "29e40d4b",
    "owner()": "8da5cb5b",
    "ownershipHandoverExpiresAt(address)": "fee81cf4",
    "recoverFunds(address,address)": "24ae6a27",
    "registerRecipient(uint256,bytes)": "075c0e9c",
    "removeFromCloneableStrategies(address)": "031e2fa1",
    "removePoolManager(uint256,address)": "7f5a70bd",
    "renounceOwnership()": "715018a6",
    "renounceRole(bytes32,address)": "36568abe",
    "requestOwnershipHandover()": "25692962",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferOwnership(address)": "f2fde38b",
    "updateBaseFee(uint256)": "8e690186",
    "updatePercentFee(uint256)": "f54fc4a0",
    "updatePoolMetadata(uint256,(uint256,string))": "5f9ca138",
    "updateRegistry(address)": "1a5da6c8",
    "updateTreasury(address)": "7f51bb1f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NewOwnerIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoHandoverRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BaseFeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFee\",\"type\":\"uint256\"}],\"name\":\"BaseFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipHandoverCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipHandoverRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentFee\",\"type\":\"uint256\"}],\"name\":\"PercentFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"PoolFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"PoolMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"name\":\"RegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"addPoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"addToCloneableStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_datas\",\"type\":\"bytes[]\"}],\"name\":\"batchAllocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"batchRegisterRecipient\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"recipientIds\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"completeOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_initStrategyData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_managers\",\"type\":\"address[]\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_initStrategyData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_managers\",\"type\":\"address[]\"}],\"name\":\"createPoolWithCustomStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"FEE_DENOMINATOR\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPercentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"managerRole\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"adminRole\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAllo.Pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_percentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"isCloneableStrategy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPoolAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPoolManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"result\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"ownershipHandoverExpiresAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"removeFromCloneableStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"removePoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestOwnershipHandover\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"}],\"name\":\"updateBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentFee\",\"type\":\"uint256\"}],\"name\":\"updatePercentFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"}],\"name\":\"updatePoolMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"updateRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"details\":\"The contract must be initialized with the 'initialize()' function.\",\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}],\"NewOwnerIsZeroAddress()\":[{\"details\":\"The `newOwner` cannot be the zero address.\"}],\"NoHandoverRequest()\":[{\"details\":\"The `pendingOwner` does not have a valid handover request.\"}],\"Unauthorized()\":[{\"details\":\"The caller is not authorized to call the function.\"}]},\"events\":{\"BaseFeePaid(uint256,uint256)\":{\"params\":{\"amount\":\"Amount of the base fee paid\",\"poolId\":\"ID of the pool the base fee was paid for\"}},\"BaseFeeUpdated(uint256)\":{\"params\":{\"baseFee\":\"New base fee amount\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OwnershipHandoverCanceled(address)\":{\"details\":\"The ownership handover to `pendingOwner` has been canceled.\"},\"OwnershipHandoverRequested(address)\":{\"details\":\"An ownership handover to `pendingOwner` has been requested.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"The ownership is transferred from `oldOwner` to `newOwner`. This event is intentionally kept the same as OpenZeppelin's Ownable to be compatible with indexers and [EIP-173](https://eips.ethereum.org/EIPS/eip-173), despite it not being as lightweight as a single argument event.\"},\"PercentFeeUpdated(uint256)\":{\"params\":{\"percentFee\":\"New percentage for the fee\"}},\"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))\":{\"params\":{\"amount\":\"Amount pool was funded with when created\",\"metadata\":\"Pool metadata\",\"poolId\":\"ID of the pool created\",\"profileId\":\"ID of the profile the pool is associated with\",\"strategy\":\"Address of the strategy contract\",\"token\":\"Address of the token pool was funded with when created\"}},\"PoolFunded(uint256,uint256,uint256)\":{\"params\":{\"amount\":\"Amount funded to the pool\",\"fee\":\"Amount of the fee paid to the treasury\",\"poolId\":\"ID of the pool funded\"}},\"PoolMetadataUpdated(uint256,(uint256,string))\":{\"params\":{\"metadata\":\"Pool metadata that was updated\",\"poolId\":\"ID of the pool updated\"}},\"RegistryUpdated(address)\":{\"params\":{\"registry\":\"Address of the new registry\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"StrategyApproved(address)\":{\"params\":{\"strategy\":\"Address of the strategy approved\"}},\"StrategyRemoved(address)\":{\"params\":{\"strategy\":\"Address of the strategy removed\"}},\"TreasuryUpdated(address)\":{\"params\":{\"treasury\":\"Address of the new treasury\"}}},\"kind\":\"dev\",\"methods\":{\"addPoolManager(uint256,address)\":{\"details\":\"Emits 'RoleGranted()' event. 'msg.sender' must be a pool admin.\",\"params\":{\"_manager\":\"The address to add\",\"_poolId\":\"ID of the pool\"}},\"addToCloneableStrategies(address)\":{\"details\":\"Emits the 'StrategyApproved()' event. 'msg.sender' must be Allo owner.\",\"params\":{\"_strategy\":\"The address of the strategy\"}},\"allocate(uint256,bytes)\":{\"details\":\"The encoded data will be specific to a given strategy requirements, reference the strategy      implementation of allocate().\",\"params\":{\"_data\":\"Encoded data unique to the strategy for that pool\",\"_poolId\":\"ID of the pool\"}},\"batchAllocate(uint256[],bytes[])\":{\"details\":\"The encoded data will be specific to a given strategy requirements, reference the strategy      implementation of allocate(). Please note that this is not a 'payable' function, so if you      want to send funds to the strategy, you must send the funds using 'fundPool()'.\",\"params\":{\"_datas\":\"encoded data unique to the strategy for that pool\",\"_poolIds\":\"IDs of the pools\"}},\"batchRegisterRecipient(uint256[],bytes[])\":{\"details\":\"Returns the 'recipientIds' from the strategy that have been registered from calling this function.      Encoded data unique to a strategy that registerRecipient() requires. Encoded '_data' length must match      '_poolIds' length or this will revert with MISMATCH(). Other requirements will be determined by the strategy.\",\"params\":{\"_data\":\"An array of encoded data unique to a strategy that registerRecipient() requires.\",\"_poolIds\":\"ID's of the pools\"},\"returns\":{\"recipientIds\":\"The recipient IDs that have been registered\"}},\"cancelOwnershipHandover()\":{\"details\":\"Cancels the two-step ownership handover to the caller, if any.\"},\"completeOwnershipHandover(address)\":{\"details\":\"Allows the owner to complete the two-step ownership handover to `pendingOwner`. Reverts if there is no existing ownership handover requested by `pendingOwner`.\"},\"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"custom:initstrategydata\":\"The encoded data will be specific to a given strategy requirements,    reference the strategy implementation of 'initialize()'\",\"details\":\"'msg.sender' must be owner or member of the profile id passed as '_profileId'.\",\"params\":{\"_amount\":\"The amount of the token\",\"_initStrategyData\":\"The data to initialize the strategy\",\"_managers\":\"The managers of the pool\",\"_metadata\":\"The metadata of the pool\",\"_profileId\":\"The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\",\"_strategy\":\"The address of the strategy contract the pool will use.\",\"_token\":\"The address of the token\"}},\"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"details\":\"'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must      be a member or owner of the profile id passed as '_profileId'.\",\"params\":{\"_amount\":\"The amount of the token you want to deposit into the pool on initialization\",\"_initStrategyData\":\"The data to initialize the strategy\",\"_managers\":\"The managers of the pool, and can be added/removed later by the pool admin\",\"_metadata\":\"The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)\",\"_profileId\":\"The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\",\"_strategy\":\"The address of the deployed custom strategy\",\"_token\":\"The address of the token you want to use in your pool\"},\"returns\":{\"poolId\":\"The ID of the pool\"}},\"distribute(uint256,address[],bytes)\":{\"details\":\"The encoded data will be specific to a given strategy requirements, reference the strategy      implementation of 'strategy.distribute()'.\",\"params\":{\"_data\":\"Encoded data unique to the strategy\",\"_poolId\":\"ID of the pool\",\"_recipientIds\":\"Ids of the recipients of the distribution\"}},\"fundPool(uint256,uint256)\":{\"details\":\"Anyone can fund a pool and call this function.\",\"params\":{\"_amount\":\"The amount to be deposited into the pool\",\"_poolId\":\"ID of the pool\"}},\"getBaseFee()\":{\"returns\":{\"_0\":\"The base fee\"}},\"getFeeDenominator()\":{\"returns\":{\"FEE_DENOMINATOR\":\"The fee denominator is (1e18) which represents 100%\"}},\"getPercentFee()\":{\"returns\":{\"_0\":\"The fee percentage (1e18 = 100%)\"}},\"getPool(uint256)\":{\"params\":{\"_poolId\":\"The ID of the pool\"},\"returns\":{\"_0\":\"The 'Pool' struct\"}},\"getRegistry()\":{\"returns\":{\"_0\":\"The registry address\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getStrategy(uint256)\":{\"params\":{\"_poolId\":\"The ID of the pool\"},\"returns\":{\"_0\":\"The address of the strategy\"}},\"getTreasury()\":{\"returns\":{\"_0\":\"The treasury address\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,uint256,uint256)\":{\"details\":\"During upgrade -> a higher version should be passed to reinitializer\",\"params\":{\"_baseFee\":\"The base fee\",\"_percentFee\":\"The percentage fee\",\"_registry\":\"The address of the registry\",\"_treasury\":\"The address of the treasury\"}},\"isCloneableStrategy(address)\":{\"params\":{\"_strategy\":\"The address of the strategy\"},\"returns\":{\"_0\":\"'true' if the strategy is cloneable, otherwise 'false'\"}},\"isPoolAdmin(uint256,address)\":{\"params\":{\"_address\":\"The address to check\",\"_poolId\":\"The ID of the pool\"},\"returns\":{\"_0\":\"'true' if the address is a pool admin, otherwise 'false'\"}},\"isPoolManager(uint256,address)\":{\"params\":{\"_address\":\"The address to check\",\"_poolId\":\"The ID of the pool\"},\"returns\":{\"_0\":\"'true' if the address is a pool manager, otherwise 'false'\"}},\"owner()\":{\"details\":\"Returns the owner of the contract.\"},\"ownershipHandoverExpiresAt(address)\":{\"details\":\"Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`.\"},\"recoverFunds(address,address)\":{\"details\":\"'msg.sender' must be Allo owner\",\"params\":{\"_recipient\":\"The recipient\",\"_token\":\"The token to transfer\"}},\"registerRecipient(uint256,bytes)\":{\"details\":\"The encoded data will be specific to a given strategy requirements, reference the strategy      implementation of registerRecipient().\",\"params\":{\"_data\":\"Encoded data unique to a strategy that registerRecipient() requires\",\"_poolId\":\"ID of the pool\"},\"returns\":{\"_0\":\"recipientId The recipient ID that has been registered\"}},\"removeFromCloneableStrategies(address)\":{\"details\":\"Emits 'StrategyRemoved()' event. 'msg.sender must be Allo owner.\",\"params\":{\"_strategy\":\"The address of the strategy\"}},\"removePoolManager(uint256,address)\":{\"details\":\"Emits 'RoleRevoked()' event. 'msg.sender' must be a pool admin.\",\"params\":{\"_manager\":\"The address to remove\",\"_poolId\":\"ID of the pool\"}},\"renounceOwnership()\":{\"details\":\"Allows the owner to renounce their ownership.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"requestOwnershipHandover()\":{\"details\":\"Request a two-step ownership handover to the caller. The request will automatically expire in 48 hours (172800 seconds) by default.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Allows the owner to transfer the ownership to `newOwner`.\"},\"updateBaseFee(uint256)\":{\"details\":\"Use this to update the base fee. 'msg.sender' must be Allo owner.\",\"params\":{\"_baseFee\":\"The new base fee\"}},\"updatePercentFee(uint256)\":{\"details\":\"Use this to update the fee percentage. 'msg.sender' must be Allo owner.\",\"params\":{\"_percentFee\":\"The new fee\"}},\"updatePoolMetadata(uint256,(uint256,string))\":{\"details\":\"'msg.sender' must be a pool manager. Emits 'PoolMetadataUpdated()' event.\",\"params\":{\"_metadata\":\"The new metadata of the pool\",\"_poolId\":\"ID of the pool\"}},\"updateRegistry(address)\":{\"details\":\"Use this to update the registry address. 'msg.sender' must be Allo owner.\",\"params\":{\"_registry\":\"The new registry address\"}},\"updateTreasury(address)\":{\"details\":\"Use this to update the treasury address. 'msg.sender' must be Allo owner.\",\"params\":{\"_treasury\":\"The new treasury address\"}}},\"stateVariables\":{\"_nonces\":{\"details\":\"'msg.sender' -> 'nonce' for cloning strategies\"},\"baseFee\":{\"details\":\"This is different from the 'percentFee' in that this is a flat fee and not a percentage. So if you want to create a pool      with a base fee of 100 DAI, then you would pass 100 DAI to the 'createPool()' function and the pool would be created      with 100 DAI less than the amount you passed to the function. The base fee is sent to the treasury address.\"},\"cloneableStrategies\":{\"details\":\"Strategy.address -> bool\"},\"percentFee\":{\"details\":\"How the percentage is represented in our contracts: 1e18 = 100%, 1e17 = 10%, 1e16 = 1%, 1e15 = 0.1%\"},\"pools\":{\"details\":\"'Pool.id' -> 'Pool'\"}},\"title\":\"Allo\",\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"events\":{\"BaseFeePaid(uint256,uint256)\":{\"notice\":\"Emitted when the base fee is paid\"},\"BaseFeeUpdated(uint256)\":{\"notice\":\"Emitted when the base fee is updated\"},\"PercentFeeUpdated(uint256)\":{\"notice\":\"Emitted when the percent fee is updated\"},\"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))\":{\"notice\":\"Event emitted when a new pool is created\"},\"PoolFunded(uint256,uint256,uint256)\":{\"notice\":\"Emitted when a pool is funded\"},\"PoolMetadataUpdated(uint256,(uint256,string))\":{\"notice\":\"Emitted when a pools metadata is updated\"},\"RegistryUpdated(address)\":{\"notice\":\"Emitted when the registry address is updated\"},\"StrategyApproved(address)\":{\"notice\":\"Emitted when a strategy is approved and added to the cloneable strategies\"},\"StrategyRemoved(address)\":{\"notice\":\"Emitted when a strategy is removed from the cloneable strategies\"},\"TreasuryUpdated(address)\":{\"notice\":\"Emitted when the treasury address is updated\"}},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"},\"addPoolManager(uint256,address)\":{\"notice\":\"Add a pool manager\"},\"addToCloneableStrategies(address)\":{\"notice\":\"Add a strategy to the allowlist.\"},\"allocate(uint256,bytes)\":{\"notice\":\"Allocate to a recipient or multiple recipients.\"},\"batchAllocate(uint256[],bytes[])\":{\"notice\":\"Allocate to multiple pools\"},\"batchRegisterRecipient(uint256[],bytes[])\":{\"notice\":\"Register multiple recipients to multiple pools.\"},\"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"notice\":\"Creates a new pool (by cloning a cloneable strategies).\"},\"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"notice\":\"Creates a new pool (with a custom strategy)\"},\"distribute(uint256,address[],bytes)\":{\"notice\":\"Distribute to a recipient or multiple recipients.\"},\"fundPool(uint256,uint256)\":{\"notice\":\"Fund a pool.\"},\"getBaseFee()\":{\"notice\":\"Getter for base fee.\"},\"getFeeDenominator()\":{\"notice\":\"Getter for the fee denominator\"},\"getPercentFee()\":{\"notice\":\"Getter for fee percentage.\"},\"getPool(uint256)\":{\"notice\":\"Getter for the 'Pool'.\"},\"getRegistry()\":{\"notice\":\"Getter for registry.\"},\"getStrategy(uint256)\":{\"notice\":\"Getter for the strategy.\"},\"getTreasury()\":{\"notice\":\"Getter for treasury address.\"},\"initialize(address,address,uint256,uint256)\":{\"notice\":\"Initializes the contract after an upgrade\"},\"isCloneableStrategy(address)\":{\"notice\":\"Getter for if strategy is cloneable.\"},\"isPoolAdmin(uint256,address)\":{\"notice\":\"Checks if the address is a pool admin.\"},\"isPoolManager(uint256,address)\":{\"notice\":\"Checks if the address is a pool manager\"},\"recoverFunds(address,address)\":{\"notice\":\"Transfer the funds recovered  to the recipient\"},\"registerRecipient(uint256,bytes)\":{\"notice\":\"Passes _data through to the strategy for that pool.\"},\"removeFromCloneableStrategies(address)\":{\"notice\":\"Remove a strategy from the allowlist\"},\"removePoolManager(uint256,address)\":{\"notice\":\"Remove a pool manager\"},\"updateBaseFee(uint256)\":{\"notice\":\"Updates the base fee.\"},\"updatePercentFee(uint256)\":{\"notice\":\"Updates the fee percentage.\"},\"updatePoolMetadata(uint256,(uint256,string))\":{\"notice\":\"Update pool metadata\"},\"updateRegistry(address)\":{\"notice\":\"Updates the registry address.\"},\"updateTreasury(address)\":{\"notice\":\"Updates the treasury address.\"}},\"notice\":\"This contract is used to create & manage pools as well as manage the protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Allo.sol\":\"Allo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/v2-core/lib/prb-math/\",\":@prb/test/=lib/v2-core/lib/prb-test/src/\",\":@sablier/v2-core/=lib/v2-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":permit2/=lib/permit2/src/interfaces/\",\":prb-math/=lib/v2-core/lib/prb-math/src/\",\":prb-test/=lib/v2-core/lib/prb-test/src/\",\":solady/=lib/solady/\",\":solarray/=lib/v2-core/lib/solarray/src/\",\":solmate/=lib/permit2/lib/solmate/\",\":v2-core/=lib/v2-core/\"]},\"sources\":{\"contracts/core/Allo.sol\":{\"keccak256\":\"0x76644c706d09c0c72d0e49f85f8bc0672312c812ac6514fa39c07c1aa7c4e837\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://01db33a0f7fde6870e0784cb0e19828bebc793c6e019db460f8b58523a6946e5\",\"dweb:/ipfs/QmaSBPoMoHjtVq2YzgL3eCHYjmSPPjYxTfdh7VrzqKpNBi\"]},\"contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xdd932a8ae96941626cc671c8aa404b001daed9be13c550fa67ce0dd676c610d3\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3b614de2e6ac5290ecc7087085aa299659debad909ba16a87ae66ced47efdcac\",\"dweb:/ipfs/QmPsULZYfgoNLwsMiMxmbKKs1RsyTAVnAPKmG2Tvp4zXBx\"]},\"contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"contracts/core/libraries/Clone.sol\":{\"keccak256\":\"0xc348b24b7d8a98c4faa5f2aa37ce9264a74f81dbdef1a9bae2eaa125585c3c7e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1335b3ec59ec7e3d12ea7c90b3aa56f4c26e0d44d342f54412933be9d4f16067\",\"dweb:/ipfs/QmXNFo2wCyq9cpvfgbdHvBUQecThFSEoUnMuZNS6WinDrr\"]},\"contracts/core/libraries/Errors.sol\":{\"keccak256\":\"0x09ca8be54b7e6a35fe653134ae6a1c3110b74db408c2f10ff638fe6bd4b97a50\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fb30a417610fdf3c7d8fa44cb45b06ee1465afd4062b59ba393b544c0038f5c2\",\"dweb:/ipfs/QmUy6gBqLBUqwCgtM26eodLwNNyaniXsk8pmD2mjGfZoPi\"]},\"contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]},\"contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a\",\"dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv\"]},\"contracts/core/libraries/Transfer.sol\":{\"keccak256\":\"0x347f35af500dd40d44eb89b4f427d24daaf7017dfc3ecd592b9fd7d1ea31f50d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://be7f3a8ba1bcb4e7bb821dcff12771b2e4cc6f00646ffcd91e321be22de701d1\",\"dweb:/ipfs/QmREV45kgZw1hcGAyDshRzntq8995jzhPgctm6FKBJfj5w\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ClonesUpgradeable.sol\":{\"keccak256\":\"0x3d98edeb5d5be8410fca707b73dabe7544d1dd11e35b73dd907c473fe43cc3ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a3fa9fc3aec149b8ad0dd8895277ab11e9244e9d2b7adc8404b22de974fc964\",\"dweb:/ipfs/QmRggzxs1WjuvGJSAKb2Nw5r7P3VDMefCWKTbkNPKRkv2j\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/solady/src/auth/Ownable.sol\":{\"keccak256\":\"0xd916b6ca098f26e08eff367c6fc1853956839d8d1c9d2df715784b6dec99889b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a9d8137ec1f5fb4210fbebeafa002f5b9cab28579445bd8281c56862e63aa30\",\"dweb:/ipfs/QmPLBcT1JkBKa4jK6qNficwZx2uGG4MetPNErJArdX6G61\"]},\"lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_NOT_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALLOCATION_NOT_ENDED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALREADY_INITIALIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AMOUNT_MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ANCHOR_ERROR"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ARRAY_MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_FEE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_METADATA"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_REGISTRATION"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IS_APPROVED_STRATEGY"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MISMATCH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NONCE_NOT_AVAILABLE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_APPROVED_STRATEGY"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_ENOUGH_FUNDS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_INITIALIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_PENDING_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NewOwnerIsZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoHandoverRequest"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "POOL_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "POOL_INACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RECIPIENT_ALREADY_ACCEPTED"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipientId",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "RECIPIENT_ERROR"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RECIPIENT_NOT_ACCEPTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "REGISTRATION_NOT_ACTIVE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UNAUTHORIZED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZERO_ADDRESS"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BaseFeePaid",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "baseFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BaseFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipHandoverCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipHandoverRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "percentFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PercentFeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "profileId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolFunded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolMetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "registry",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RegistryUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyApproved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "treasury",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TreasuryUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NATIVE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPoolManager"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_strategy",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addToCloneableStrategies"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "allocate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_poolIds",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "_datas",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchAllocate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_poolIds",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "_data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchRegisterRecipient",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "recipientIds",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "cancelOwnershipHandover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "completeOwnershipHandover"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_profileId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "_strategy",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_initStrategyData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "struct Metadata",
              "name": "_metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "_managers",
              "type": "address[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_profileId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "_strategy",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_initStrategyData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "struct Metadata",
              "name": "_metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "_managers",
              "type": "address[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createPoolWithCustomStrategy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "poolId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_recipientIds",
              "type": "address[]"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distribute"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fundPool"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBaseFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getFeeDenominator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "FEE_DENOMINATOR",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPercentFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "struct IAllo.Pool",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "profileId",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract IStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "struct Metadata",
                  "name": "metadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "protocol",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "pointer",
                      "type": "string"
                    }
                  ]
                },
                {
                  "internalType": "bytes32",
                  "name": "managerRole",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "adminRole",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegistry",
          "outputs": [
            {
              "internalType": "contract IRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTreasury",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_registry",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "_treasury",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_percentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_baseFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCloneableStrategy",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPoolAdmin",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPoolManager",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "result",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownershipHandoverExpiresAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "result",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recoverFunds"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "registerRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_strategy",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeFromCloneableStrategies"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_manager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removePoolManager"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "requestOwnershipHandover"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_baseFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBaseFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePercentFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_poolId",
              "type": "uint256"
            },
            {
              "internalType": "struct Metadata",
              "name": "_metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocol",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "pointer",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updatePoolMetadata"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_registry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_treasury",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTreasury"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addPoolManager(uint256,address)": {
            "details": "Emits 'RoleGranted()' event. 'msg.sender' must be a pool admin.",
            "params": {
              "_manager": "The address to add",
              "_poolId": "ID of the pool"
            }
          },
          "addToCloneableStrategies(address)": {
            "details": "Emits the 'StrategyApproved()' event. 'msg.sender' must be Allo owner.",
            "params": {
              "_strategy": "The address of the strategy"
            }
          },
          "allocate(uint256,bytes)": {
            "details": "The encoded data will be specific to a given strategy requirements, reference the strategy      implementation of allocate().",
            "params": {
              "_data": "Encoded data unique to the strategy for that pool",
              "_poolId": "ID of the pool"
            }
          },
          "batchAllocate(uint256[],bytes[])": {
            "details": "The encoded data will be specific to a given strategy requirements, reference the strategy      implementation of allocate(). Please note that this is not a 'payable' function, so if you      want to send funds to the strategy, you must send the funds using 'fundPool()'.",
            "params": {
              "_datas": "encoded data unique to the strategy for that pool",
              "_poolIds": "IDs of the pools"
            }
          },
          "batchRegisterRecipient(uint256[],bytes[])": {
            "details": "Returns the 'recipientIds' from the strategy that have been registered from calling this function.      Encoded data unique to a strategy that registerRecipient() requires. Encoded '_data' length must match      '_poolIds' length or this will revert with MISMATCH(). Other requirements will be determined by the strategy.",
            "params": {
              "_data": "An array of encoded data unique to a strategy that registerRecipient() requires.",
              "_poolIds": "ID's of the pools"
            },
            "returns": {
              "recipientIds": "The recipient IDs that have been registered"
            }
          },
          "cancelOwnershipHandover()": {
            "details": "Cancels the two-step ownership handover to the caller, if any."
          },
          "completeOwnershipHandover(address)": {
            "details": "Allows the owner to complete the two-step ownership handover to `pendingOwner`. Reverts if there is no existing ownership handover requested by `pendingOwner`."
          },
          "createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
            "custom:initstrategydata": "The encoded data will be specific to a given strategy requirements,    reference the strategy implementation of 'initialize()'",
            "details": "'msg.sender' must be owner or member of the profile id passed as '_profileId'.",
            "params": {
              "_amount": "The amount of the token",
              "_initStrategyData": "The data to initialize the strategy",
              "_managers": "The managers of the pool",
              "_metadata": "The metadata of the pool",
              "_profileId": "The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile",
              "_strategy": "The address of the strategy contract the pool will use.",
              "_token": "The address of the token"
            }
          },
          "createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
            "details": "'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must      be a member or owner of the profile id passed as '_profileId'.",
            "params": {
              "_amount": "The amount of the token you want to deposit into the pool on initialization",
              "_initStrategyData": "The data to initialize the strategy",
              "_managers": "The managers of the pool, and can be added/removed later by the pool admin",
              "_metadata": "The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)",
              "_profileId": "The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile",
              "_strategy": "The address of the deployed custom strategy",
              "_token": "The address of the token you want to use in your pool"
            },
            "returns": {
              "poolId": "The ID of the pool"
            }
          },
          "distribute(uint256,address[],bytes)": {
            "details": "The encoded data will be specific to a given strategy requirements, reference the strategy      implementation of 'strategy.distribute()'.",
            "params": {
              "_data": "Encoded data unique to the strategy",
              "_poolId": "ID of the pool",
              "_recipientIds": "Ids of the recipients of the distribution"
            }
          },
          "fundPool(uint256,uint256)": {
            "details": "Anyone can fund a pool and call this function.",
            "params": {
              "_amount": "The amount to be deposited into the pool",
              "_poolId": "ID of the pool"
            }
          },
          "getBaseFee()": {
            "returns": {
              "_0": "The base fee"
            }
          },
          "getFeeDenominator()": {
            "returns": {
              "FEE_DENOMINATOR": "The fee denominator is (1e18) which represents 100%"
            }
          },
          "getPercentFee()": {
            "returns": {
              "_0": "The fee percentage (1e18 = 100%)"
            }
          },
          "getPool(uint256)": {
            "params": {
              "_poolId": "The ID of the pool"
            },
            "returns": {
              "_0": "The 'Pool' struct"
            }
          },
          "getRegistry()": {
            "returns": {
              "_0": "The registry address"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getStrategy(uint256)": {
            "params": {
              "_poolId": "The ID of the pool"
            },
            "returns": {
              "_0": "The address of the strategy"
            }
          },
          "getTreasury()": {
            "returns": {
              "_0": "The treasury address"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "initialize(address,address,uint256,uint256)": {
            "details": "During upgrade -> a higher version should be passed to reinitializer",
            "params": {
              "_baseFee": "The base fee",
              "_percentFee": "The percentage fee",
              "_registry": "The address of the registry",
              "_treasury": "The address of the treasury"
            }
          },
          "isCloneableStrategy(address)": {
            "params": {
              "_strategy": "The address of the strategy"
            },
            "returns": {
              "_0": "'true' if the strategy is cloneable, otherwise 'false'"
            }
          },
          "isPoolAdmin(uint256,address)": {
            "params": {
              "_address": "The address to check",
              "_poolId": "The ID of the pool"
            },
            "returns": {
              "_0": "'true' if the address is a pool admin, otherwise 'false'"
            }
          },
          "isPoolManager(uint256,address)": {
            "params": {
              "_address": "The address to check",
              "_poolId": "The ID of the pool"
            },
            "returns": {
              "_0": "'true' if the address is a pool manager, otherwise 'false'"
            }
          },
          "owner()": {
            "details": "Returns the owner of the contract."
          },
          "ownershipHandoverExpiresAt(address)": {
            "details": "Returns the expiry timestamp for the two-step ownership handover to `pendingOwner`."
          },
          "recoverFunds(address,address)": {
            "details": "'msg.sender' must be Allo owner",
            "params": {
              "_recipient": "The recipient",
              "_token": "The token to transfer"
            }
          },
          "registerRecipient(uint256,bytes)": {
            "details": "The encoded data will be specific to a given strategy requirements, reference the strategy      implementation of registerRecipient().",
            "params": {
              "_data": "Encoded data unique to a strategy that registerRecipient() requires",
              "_poolId": "ID of the pool"
            },
            "returns": {
              "_0": "recipientId The recipient ID that has been registered"
            }
          },
          "removeFromCloneableStrategies(address)": {
            "details": "Emits 'StrategyRemoved()' event. 'msg.sender must be Allo owner.",
            "params": {
              "_strategy": "The address of the strategy"
            }
          },
          "removePoolManager(uint256,address)": {
            "details": "Emits 'RoleRevoked()' event. 'msg.sender' must be a pool admin.",
            "params": {
              "_manager": "The address to remove",
              "_poolId": "ID of the pool"
            }
          },
          "renounceOwnership()": {
            "details": "Allows the owner to renounce their ownership."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "requestOwnershipHandover()": {
            "details": "Request a two-step ownership handover to the caller. The request will automatically expire in 48 hours (172800 seconds) by default."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Allows the owner to transfer the ownership to `newOwner`."
          },
          "updateBaseFee(uint256)": {
            "details": "Use this to update the base fee. 'msg.sender' must be Allo owner.",
            "params": {
              "_baseFee": "The new base fee"
            }
          },
          "updatePercentFee(uint256)": {
            "details": "Use this to update the fee percentage. 'msg.sender' must be Allo owner.",
            "params": {
              "_percentFee": "The new fee"
            }
          },
          "updatePoolMetadata(uint256,(uint256,string))": {
            "details": "'msg.sender' must be a pool manager. Emits 'PoolMetadataUpdated()' event.",
            "params": {
              "_metadata": "The new metadata of the pool",
              "_poolId": "ID of the pool"
            }
          },
          "updateRegistry(address)": {
            "details": "Use this to update the registry address. 'msg.sender' must be Allo owner.",
            "params": {
              "_registry": "The new registry address"
            }
          },
          "updateTreasury(address)": {
            "details": "Use this to update the treasury address. 'msg.sender' must be Allo owner.",
            "params": {
              "_treasury": "The new treasury address"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NATIVE()": {
            "notice": "Address of the native token"
          },
          "addPoolManager(uint256,address)": {
            "notice": "Add a pool manager"
          },
          "addToCloneableStrategies(address)": {
            "notice": "Add a strategy to the allowlist."
          },
          "allocate(uint256,bytes)": {
            "notice": "Allocate to a recipient or multiple recipients."
          },
          "batchAllocate(uint256[],bytes[])": {
            "notice": "Allocate to multiple pools"
          },
          "batchRegisterRecipient(uint256[],bytes[])": {
            "notice": "Register multiple recipients to multiple pools."
          },
          "createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
            "notice": "Creates a new pool (by cloning a cloneable strategies)."
          },
          "createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
            "notice": "Creates a new pool (with a custom strategy)"
          },
          "distribute(uint256,address[],bytes)": {
            "notice": "Distribute to a recipient or multiple recipients."
          },
          "fundPool(uint256,uint256)": {
            "notice": "Fund a pool."
          },
          "getBaseFee()": {
            "notice": "Getter for base fee."
          },
          "getFeeDenominator()": {
            "notice": "Getter for the fee denominator"
          },
          "getPercentFee()": {
            "notice": "Getter for fee percentage."
          },
          "getPool(uint256)": {
            "notice": "Getter for the 'Pool'."
          },
          "getRegistry()": {
            "notice": "Getter for registry."
          },
          "getStrategy(uint256)": {
            "notice": "Getter for the strategy."
          },
          "getTreasury()": {
            "notice": "Getter for treasury address."
          },
          "initialize(address,address,uint256,uint256)": {
            "notice": "Initializes the contract after an upgrade"
          },
          "isCloneableStrategy(address)": {
            "notice": "Getter for if strategy is cloneable."
          },
          "isPoolAdmin(uint256,address)": {
            "notice": "Checks if the address is a pool admin."
          },
          "isPoolManager(uint256,address)": {
            "notice": "Checks if the address is a pool manager"
          },
          "recoverFunds(address,address)": {
            "notice": "Transfer the funds recovered  to the recipient"
          },
          "registerRecipient(uint256,bytes)": {
            "notice": "Passes _data through to the strategy for that pool."
          },
          "removeFromCloneableStrategies(address)": {
            "notice": "Remove a strategy from the allowlist"
          },
          "removePoolManager(uint256,address)": {
            "notice": "Remove a pool manager"
          },
          "updateBaseFee(uint256)": {
            "notice": "Updates the base fee."
          },
          "updatePercentFee(uint256)": {
            "notice": "Updates the fee percentage."
          },
          "updatePoolMetadata(uint256,(uint256,string))": {
            "notice": "Update pool metadata"
          },
          "updateRegistry(address)": {
            "notice": "Updates the registry address."
          },
          "updateTreasury(address)": {
            "notice": "Updates the treasury address."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/math/=lib/v2-core/lib/prb-math/",
        ":@prb/test/=lib/v2-core/lib/prb-test/src/",
        ":@sablier/v2-core/=lib/v2-core/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eas-contracts/=lib/eas-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-gas-snapshot/=lib/permit2/lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":permit2/=lib/permit2/src/interfaces/",
        ":prb-math/=lib/v2-core/lib/prb-math/src/",
        ":prb-test/=lib/v2-core/lib/prb-test/src/",
        ":solady/=lib/solady/",
        ":solarray/=lib/v2-core/lib/solarray/src/",
        ":solmate/=lib/permit2/lib/solmate/",
        ":v2-core/=lib/v2-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/core/Allo.sol": "Allo"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/core/Allo.sol": {
        "keccak256": "0x76644c706d09c0c72d0e49f85f8bc0672312c812ac6514fa39c07c1aa7c4e837",
        "urls": [
          "bzz-raw://01db33a0f7fde6870e0784cb0e19828bebc793c6e019db460f8b58523a6946e5",
          "dweb:/ipfs/QmaSBPoMoHjtVq2YzgL3eCHYjmSPPjYxTfdh7VrzqKpNBi"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/core/interfaces/IAllo.sol": {
        "keccak256": "0xdd932a8ae96941626cc671c8aa404b001daed9be13c550fa67ce0dd676c610d3",
        "urls": [
          "bzz-raw://3b614de2e6ac5290ecc7087085aa299659debad909ba16a87ae66ced47efdcac",
          "dweb:/ipfs/QmPsULZYfgoNLwsMiMxmbKKs1RsyTAVnAPKmG2Tvp4zXBx"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/core/interfaces/IRegistry.sol": {
        "keccak256": "0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f",
        "urls": [
          "bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e",
          "dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA"
        ],
        "license": "MIT"
      },
      "contracts/core/interfaces/IStrategy.sol": {
        "keccak256": "0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23",
        "urls": [
          "bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487",
          "dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/core/libraries/Clone.sol": {
        "keccak256": "0xc348b24b7d8a98c4faa5f2aa37ce9264a74f81dbdef1a9bae2eaa125585c3c7e",
        "urls": [
          "bzz-raw://1335b3ec59ec7e3d12ea7c90b3aa56f4c26e0d44d342f54412933be9d4f16067",
          "dweb:/ipfs/QmXNFo2wCyq9cpvfgbdHvBUQecThFSEoUnMuZNS6WinDrr"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/core/libraries/Errors.sol": {
        "keccak256": "0x09ca8be54b7e6a35fe653134ae6a1c3110b74db408c2f10ff638fe6bd4b97a50",
        "urls": [
          "bzz-raw://fb30a417610fdf3c7d8fa44cb45b06ee1465afd4062b59ba393b544c0038f5c2",
          "dweb:/ipfs/QmUy6gBqLBUqwCgtM26eodLwNNyaniXsk8pmD2mjGfZoPi"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/core/libraries/Metadata.sol": {
        "keccak256": "0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44",
        "urls": [
          "bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c",
          "dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/core/libraries/Native.sol": {
        "keccak256": "0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5",
        "urls": [
          "bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a",
          "dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv"
        ],
        "license": "AGPL-3.0-only"
      },
      "contracts/core/libraries/Transfer.sol": {
        "keccak256": "0x347f35af500dd40d44eb89b4f427d24daaf7017dfc3ecd592b9fd7d1ea31f50d",
        "urls": [
          "bzz-raw://be7f3a8ba1bcb4e7bb821dcff12771b2e4cc6f00646ffcd91e321be22de701d1",
          "dweb:/ipfs/QmREV45kgZw1hcGAyDshRzntq8995jzhPgctm6FKBJfj5w"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ClonesUpgradeable.sol": {
        "keccak256": "0x3d98edeb5d5be8410fca707b73dabe7544d1dd11e35b73dd907c473fe43cc3ae",
        "urls": [
          "bzz-raw://1a3fa9fc3aec149b8ad0dd8895277ab11e9244e9d2b7adc8404b22de974fc964",
          "dweb:/ipfs/QmRggzxs1WjuvGJSAKb2Nw5r7P3VDMefCWKTbkNPKRkv2j"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/solady/src/auth/Ownable.sol": {
        "keccak256": "0xd916b6ca098f26e08eff367c6fc1853956839d8d1c9d2df715784b6dec99889b",
        "urls": [
          "bzz-raw://7a9d8137ec1f5fb4210fbebeafa002f5b9cab28579445bd8281c56862e63aa30",
          "dweb:/ipfs/QmPLBcT1JkBKa4jK6qNficwZx2uGG4MetPNErJArdX6G61"
        ],
        "license": "MIT"
      },
      "lib/solady/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624",
        "urls": [
          "bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298",
          "dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61822,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 61825,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 62501,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)62496_storage)"
      },
      {
        "astId": 61998,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "_status",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 62067,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "__gap",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 34,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "percentFee",
        "offset": 0,
        "slot": "52",
        "type": "t_uint256"
      },
      {
        "astId": 37,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "baseFee",
        "offset": 0,
        "slot": "53",
        "type": "t_uint256"
      },
      {
        "astId": 40,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "_poolIndex",
        "offset": 0,
        "slot": "54",
        "type": "t_uint256"
      },
      {
        "astId": 43,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "treasury",
        "offset": 0,
        "slot": "55",
        "type": "t_address_payable"
      },
      {
        "astId": 47,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "registry",
        "offset": 0,
        "slot": "56",
        "type": "t_contract(IRegistry)2625"
      },
      {
        "astId": 52,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "_nonces",
        "offset": 0,
        "slot": "57",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 58,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "pools",
        "offset": 0,
        "slot": "58",
        "type": "t_mapping(t_uint256,t_struct(Pool)2144_storage)"
      },
      {
        "astId": 63,
        "contract": "contracts/core/Allo.sol:Allo",
        "label": "cloneableStrategies",
        "offset": 0,
        "slot": "59",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IRegistry)2625": {
        "encoding": "inplace",
        "label": "contract IRegistry",
        "numberOfBytes": "20"
      },
      "t_contract(IStrategy)2792": {
        "encoding": "inplace",
        "label": "contract IStrategy",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)62496_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)62496_storage"
      },
      "t_mapping(t_uint256,t_struct(Pool)2144_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IAllo.Pool)",
        "numberOfBytes": "32",
        "value": "t_struct(Pool)2144_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Metadata)2918_storage": {
        "encoding": "inplace",
        "label": "struct Metadata",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 2914,
            "contract": "contracts/core/Allo.sol:Allo",
            "label": "protocol",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2917,
            "contract": "contracts/core/Allo.sol:Allo",
            "label": "pointer",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(Pool)2144_storage": {
        "encoding": "inplace",
        "label": "struct IAllo.Pool",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 2131,
            "contract": "contracts/core/Allo.sol:Allo",
            "label": "profileId",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 2134,
            "contract": "contracts/core/Allo.sol:Allo",
            "label": "strategy",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IStrategy)2792"
          },
          {
            "astId": 2136,
            "contract": "contracts/core/Allo.sol:Allo",
            "label": "token",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 2139,
            "contract": "contracts/core/Allo.sol:Allo",
            "label": "metadata",
            "offset": 0,
            "slot": "3",
            "type": "t_struct(Metadata)2918_storage"
          },
          {
            "astId": 2141,
            "contract": "contracts/core/Allo.sol:Allo",
            "label": "managerRole",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32"
          },
          {
            "astId": 2143,
            "contract": "contracts/core/Allo.sol:Allo",
            "label": "adminRole",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_struct(RoleData)62496_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 62493,
            "contract": "contracts/core/Allo.sol:Allo",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 62495,
            "contract": "contracts/core/Allo.sol:Allo",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "ast": {
    "absolutePath": "contracts/core/Allo.sol",
    "id": 1279,
    "exportedSymbols": {
      "AccessControl": [
        62792
      ],
      "AddressUpgradeable": [
        62476
      ],
      "Allo": [
        1278
      ],
      "Clone": [
        2825
      ],
      "Context": [
        64018
      ],
      "ERC165": [
        65753
      ],
      "Errors": [
        2909
      ],
      "IAccessControl": [
        62865
      ],
      "IAllo": [
        2433
      ],
      "IERC165": [
        65765
      ],
      "IERC20Upgradeable": [
        62146
      ],
      "IRegistry": [
        2625
      ],
      "IStrategy": [
        2792
      ],
      "Initializable": [
        61984
      ],
      "Math": [
        66631
      ],
      "Metadata": [
        2918
      ],
      "Native": [
        2926
      ],
      "Ownable": [
        68280
      ],
      "ReentrancyGuardUpgradeable": [
        62068
      ],
      "SignedMath": [
        66736
      ],
      "Strings": [
        64628
      ],
      "Transfer": [
        3108
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:32662:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "42:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "89:37:0",
        "nodes": [],
        "absolutePath": "lib/solady/src/auth/Ownable.sol",
        "file": "solady/src/auth/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1279,
        "sourceUnit": 68281,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "127:84:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1279,
        "sourceUnit": 61985,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "212:88:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1279,
        "sourceUnit": 62147,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "301:67:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "file": "openzeppelin-contracts/contracts/access/AccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1279,
        "sourceUnit": 62793,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "369:94:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1279,
        "sourceUnit": 62069,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "478:32:0",
        "nodes": [],
        "absolutePath": "contracts/core/interfaces/IAllo.sol",
        "file": "./interfaces/IAllo.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1279,
        "sourceUnit": 2434,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9,
        "nodeType": "ImportDirective",
        "src": "534:44:0",
        "nodes": [],
        "absolutePath": "contracts/core/libraries/Clone.sol",
        "file": "./libraries/Clone.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1279,
        "sourceUnit": 2826,
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "Clone",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2825,
              "src": "542:5:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11,
        "nodeType": "ImportDirective",
        "src": "579:46:0",
        "nodes": [],
        "absolutePath": "contracts/core/libraries/Errors.sol",
        "file": "./libraries/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1279,
        "sourceUnit": 2910,
        "symbolAliases": [
          {
            "foreign": {
              "id": 10,
              "name": "Errors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2909,
              "src": "587:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12,
        "nodeType": "ImportDirective",
        "src": "626:32:0",
        "nodes": [],
        "absolutePath": "contracts/core/libraries/Native.sol",
        "file": "./libraries/Native.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1279,
        "sourceUnit": 2927,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 14,
        "nodeType": "ImportDirective",
        "src": "659:50:0",
        "nodes": [],
        "absolutePath": "contracts/core/libraries/Transfer.sol",
        "file": "./libraries/Transfer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1279,
        "sourceUnit": 3109,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13,
              "name": "Transfer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3108,
              "src": "667:8:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1278,
        "nodeType": "ContractDefinition",
        "src": "5053:27650:0",
        "nodes": [
          {
            "id": 34,
            "nodeType": "VariableDeclaration",
            "src": "5796:26:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 32,
              "nodeType": "StructuredDocumentation",
              "src": "5278:513:0",
              "text": "@notice Percentage that is used to calculate the fee Allo takes from each pool when funded\n         and is deducted when a pool is funded. So if you want to fund a round with 1000 DAI and the fee\n         percentage is 1e17 (10%), then 100 DAI will be deducted from the 1000 DAI and the pool will be\n         funded with 900 DAI. The fee is then sent to the treasury address.\n @dev How the percentage is represented in our contracts: 1e18 = 100%, 1e17 = 10%, 1e16 = 1%, 1e15 = 0.1%"
            },
            "mutability": "mutable",
            "name": "percentFee",
            "nameLocation": "5812:10:0",
            "scope": 1278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5796:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 37,
            "nodeType": "VariableDeclaration",
            "src": "6273:24:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "5829:439:0",
              "text": "@notice Fee Allo charges for all pools on creation\n @dev This is different from the 'percentFee' in that this is a flat fee and not a percentage. So if you want to create a pool\n      with a base fee of 100 DAI, then you would pass 100 DAI to the 'createPool()' function and the pool would be created\n      with 100 DAI less than the amount you passed to the function. The base fee is sent to the treasury address."
            },
            "mutability": "mutable",
            "name": "baseFee",
            "nameLocation": "6290:7:0",
            "scope": 1278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6273:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 40,
            "nodeType": "VariableDeclaration",
            "src": "6365:26:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 38,
              "nodeType": "StructuredDocumentation",
              "src": "6304:56:0",
              "text": "@notice Incremental index to track the pools created"
            },
            "mutability": "mutable",
            "name": "_poolIndex",
            "nameLocation": "6381:10:0",
            "scope": 1278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6365:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 43,
            "nodeType": "VariableDeclaration",
            "src": "6428:32:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 41,
              "nodeType": "StructuredDocumentation",
              "src": "6398:25:0",
              "text": "@notice Allo treasury"
            },
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "6452:8:0",
            "scope": 1278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 42,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6428:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47,
            "nodeType": "VariableDeclaration",
            "src": "6501:26:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44,
              "nodeType": "StructuredDocumentation",
              "src": "6467:29:0",
              "text": "@notice Registry contract"
            },
            "mutability": "mutable",
            "name": "registry",
            "nameLocation": "6519:8:0",
            "scope": 1278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRegistry_$2625",
              "typeString": "contract IRegistry"
            },
            "typeName": {
              "id": 46,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45,
                "name": "IRegistry",
                "nameLocations": [
                  "6501:9:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2625,
                "src": "6501:9:0"
              },
              "referencedDeclaration": 2625,
              "src": "6501:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRegistry_$2625",
                "typeString": "contract IRegistry"
              }
            },
            "visibility": "private"
          },
          {
            "id": 52,
            "nodeType": "VariableDeclaration",
            "src": "6667:43:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 48,
              "nodeType": "StructuredDocumentation",
              "src": "6534:128:0",
              "text": "@notice Maps the `msg.sender` to a `nonce` to prevent duplicates\n @dev 'msg.sender' -> 'nonce' for cloning strategies"
            },
            "mutability": "mutable",
            "name": "_nonces",
            "nameLocation": "6703:7:0",
            "scope": 1278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 51,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "6675:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "6667:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 50,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6686:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 58,
            "nodeType": "VariableDeclaration",
            "src": "6803:38:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 53,
              "nodeType": "StructuredDocumentation",
              "src": "6717:81:0",
              "text": "@notice Maps the pool ID to the pool details\n @dev 'Pool.id' -> 'Pool'"
            },
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "6836:5:0",
            "scope": 1278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
              "typeString": "mapping(uint256 => struct IAllo.Pool)"
            },
            "typeName": {
              "id": 57,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 54,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6811:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "6803:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                "typeString": "mapping(uint256 => struct IAllo.Pool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 56,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 55,
                  "name": "Pool",
                  "nameLocations": [
                    "6822:4:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2144,
                  "src": "6822:4:0"
                },
                "referencedDeclaration": 2144,
                "src": "6822:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Pool_$2144_storage_ptr",
                  "typeString": "struct IAllo.Pool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 63,
            "nodeType": "VariableDeclaration",
            "src": "6998:52:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59,
              "nodeType": "StructuredDocumentation",
              "src": "6848:145:0",
              "text": "@notice Returns a bool for whether a strategy is cloneable or not using the strategy address as the key\n @dev Strategy.address -> bool"
            },
            "mutability": "mutable",
            "name": "cloneableStrategies",
            "nameLocation": "7031:19:0",
            "scope": 1278,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 62,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 60,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7006:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "6998:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 61,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "7017:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 100,
            "nodeType": "FunctionDefinition",
            "src": "7520:555:0",
            "nodes": [],
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "7671:404:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 79,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7759:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7763:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7759:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 78,
                      "name": "_initializeOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68165,
                      "src": "7742:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7742:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "7742:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "7840:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 83,
                      "name": "_updateRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "7824:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7824:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "7824:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "7920:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 87,
                      "name": "_updateTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "7904:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7904:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "7904:26:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 92,
                        "name": "_percentFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "7993:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 91,
                      "name": "_updatePercentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1140,
                      "src": "7975:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7975:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "7975:30:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 96,
                        "name": "_baseFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "8059:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 95,
                      "name": "_updateBaseFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "8044:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8044:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "8044:24:0"
                }
              ]
            },
            "baseFunctions": [
              2227
            ],
            "documentation": {
              "id": 64,
              "nodeType": "StructuredDocumentation",
              "src": "7191:324:0",
              "text": "@notice Initializes the contract after an upgrade\n @dev During upgrade -> a higher version should be passed to reinitializer\n @param _registry The address of the registry\n @param _treasury The address of the treasury\n @param _percentFee The percentage fee\n @param _baseFee The base fee"
            },
            "functionSelector": "eb990c59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "31",
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7664:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  }
                ],
                "id": 76,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 74,
                  "name": "reinitializer",
                  "nameLocations": [
                    "7650:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61919,
                  "src": "7650:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7650:16:0"
              }
            ],
            "name": "initialize",
            "nameLocation": "7529:10:0",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "_registry",
                  "nameLocation": "7548:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "7540:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7540:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nameLocation": "7575:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "7559:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7559:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_percentFee",
                  "nameLocation": "7594:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "7586:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7586:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_baseFee",
                  "nameLocation": "7615:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "7607:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7607:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7539:85:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7671:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 111,
            "nodeType": "ModifierDefinition",
            "src": "8429:100:0",
            "nodes": [],
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "8471:58:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 106,
                        "name": "_poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "8503:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 105,
                      "name": "_checkOnlyPoolManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "8481:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8481:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "8481:30:0"
                },
                {
                  "id": 109,
                  "nodeType": "PlaceholderStatement",
                  "src": "8521:1:0"
                }
              ]
            },
            "documentation": {
              "id": 101,
              "nodeType": "StructuredDocumentation",
              "src": "8319:105:0",
              "text": "@notice Reverts UNAUTHORIZED() if the caller is not a pool manager\n @param _poolId The pool id"
            },
            "name": "onlyPoolManager",
            "nameLocation": "8438:15:0",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "8462:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "8454:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8454:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8453:17:0"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 122,
            "nodeType": "ModifierDefinition",
            "src": "8643:96:0",
            "nodes": [],
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "8683:56:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 117,
                        "name": "_poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "8713:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 116,
                      "name": "_checkOnlyPoolAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "8693:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8693:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "8693:28:0"
                },
                {
                  "id": 120,
                  "nodeType": "PlaceholderStatement",
                  "src": "8731:1:0"
                }
              ]
            },
            "documentation": {
              "id": 112,
              "nodeType": "StructuredDocumentation",
              "src": "8535:103:0",
              "text": "@notice Reverts UNAUTHORIZED() if the caller is not a pool admin\n @param _poolId The pool id"
            },
            "name": "onlyPoolAdmin",
            "nameLocation": "8652:13:0",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "8674:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "8666:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8666:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8665:17:0"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 174,
            "nodeType": "FunctionDefinition",
            "src": "10137:884:0",
            "nodes": [],
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "10438:583:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 144,
                      "name": "_strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 127,
                      "src": "10543:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10564:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10556:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10556:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10556:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10543:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 153,
                  "nodeType": "IfStatement",
                  "src": "10539:50:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 150,
                        "name": "ZERO_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2843,
                        "src": "10575:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10575:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 152,
                    "nodeType": "RevertStatement",
                    "src": "10568:21:0"
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 155,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "10775:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 154,
                      "name": "_isCloneableStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1023,
                      "src": "10754:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10754:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 160,
                  "nodeType": "IfStatement",
                  "src": "10750:66:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 157,
                        "name": "IS_APPROVED_STRATEGY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2858,
                        "src": "10794:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10794:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 159,
                    "nodeType": "RevertStatement",
                    "src": "10787:29:0"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 162,
                        "name": "_profileId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "10923:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 164,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "10945:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 163,
                          "name": "IStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2792,
                          "src": "10935:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStrategy_$2792_$",
                            "typeString": "type(contract IStrategy)"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10935:20:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 166,
                        "name": "_initStrategyData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "10957:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 167,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "10976:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 168,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "10984:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 169,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "10993:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                          "typeString": "struct Metadata memory"
                        }
                      },
                      {
                        "id": 170,
                        "name": "_managers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "11004:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                          "typeString": "struct Metadata memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 161,
                      "name": "_createPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "10911:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_contract$_IStrategy_$2792_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_struct$_Metadata_$2918_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,contract IStrategy,bytes memory,address,uint256,struct Metadata memory,address[] memory) returns (uint256)"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10911:103:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 143,
                  "id": 172,
                  "nodeType": "Return",
                  "src": "10904:110:0"
                }
              ]
            },
            "documentation": {
              "id": 123,
              "nodeType": "StructuredDocumentation",
              "src": "8881:1251:0",
              "text": "@notice Creates a new pool (with a custom strategy)\n @dev 'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data\n      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy\n      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must\n      be a member or owner of the profile id passed as '_profileId'.\n @param _profileId The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n @param _strategy The address of the deployed custom strategy\n @param _initStrategyData The data to initialize the strategy\n @param _token The address of the token you want to use in your pool\n @param _amount The amount of the token you want to deposit into the pool on initialization\n @param _metadata The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)\n @param _managers The managers of the pool, and can be added/removed later by the pool admin\n @return poolId The ID of the pool"
            },
            "functionSelector": "e1007d4a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPoolWithCustomStrategy",
            "nameLocation": "10146:28:0",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "_profileId",
                  "nameLocation": "10192:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "10184:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10184:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "10220:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "10212:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10212:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_initStrategyData",
                  "nameLocation": "10252:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "10239:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10239:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "10287:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "10279:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10279:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10311:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "10303:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10303:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "_metadata",
                  "nameLocation": "10344:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "10328:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                    "typeString": "struct Metadata"
                  },
                  "typeName": {
                    "id": 135,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 134,
                      "name": "Metadata",
                      "nameLocations": [
                        "10328:8:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2918,
                      "src": "10328:8:0"
                    },
                    "referencedDeclaration": 2918,
                    "src": "10328:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$2918_storage_ptr",
                      "typeString": "struct Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "_managers",
                  "nameLocation": "10380:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "10363:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 137,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10363:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 138,
                    "nodeType": "ArrayTypeName",
                    "src": "10363:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10174:221:0"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "10430:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "10422:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10422:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10421:16:0"
            },
            "scope": 1278,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 228,
            "nodeType": "FunctionDefinition",
            "src": "11827:701:0",
            "nodes": [],
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "12123:405:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12137:32:0",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 199,
                          "name": "_strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "12159:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 198,
                        "name": "_isCloneableStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1023,
                        "src": "12138:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12138:31:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 206,
                  "nodeType": "IfStatement",
                  "src": "12133:93:0",
                  "trueBody": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "12171:55:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 202,
                            "name": "NOT_APPROVED_STRATEGY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2855,
                            "src": "12192:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12192:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 204,
                        "nodeType": "RevertStatement",
                        "src": "12185:30:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 208,
                        "name": "_profileId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "12307:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 212,
                                "name": "_strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 179,
                                "src": "12359:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "12370:21:0",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 213,
                                    "name": "_nonces",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 52,
                                    "src": "12370:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 216,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 214,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "12378:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 215,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12382:6:0",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "12378:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12370:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 210,
                                "name": "Clone",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2825,
                                "src": "12341:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Clone_$2825_$",
                                  "typeString": "type(library Clone)"
                                }
                              },
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12347:11:0",
                              "memberName": "createClone",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2824,
                              "src": "12341:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (address,uint256) returns (address)"
                              }
                            },
                            "id": 218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12341:51:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 209,
                          "name": "IStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2792,
                          "src": "12331:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IStrategy_$2792_$",
                            "typeString": "type(contract IStrategy)"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12331:62:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 220,
                        "name": "_initStrategyData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "12407:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 221,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "12438:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 222,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "12458:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 223,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "12479:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                          "typeString": "struct Metadata memory"
                        }
                      },
                      {
                        "id": 224,
                        "name": "_managers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "12502:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                          "typeString": "struct Metadata memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 207,
                      "name": "_createPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "12282:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_contract$_IStrategy_$2792_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_struct$_Metadata_$2918_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,contract IStrategy,bytes memory,address,uint256,struct Metadata memory,address[] memory) returns (uint256)"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12282:239:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 197,
                  "id": 226,
                  "nodeType": "Return",
                  "src": "12275:246:0"
                }
              ]
            },
            "documentation": {
              "id": 175,
              "nodeType": "StructuredDocumentation",
              "src": "11027:795:0",
              "text": "@notice Creates a new pool (by cloning a cloneable strategies).\n @dev 'msg.sender' must be owner or member of the profile id passed as '_profileId'.\n @param _profileId The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n @param _strategy The address of the strategy contract the pool will use.\n @param _initStrategyData The data to initialize the strategy\n @param _token The address of the token\n @param _amount The amount of the token\n @param _metadata The metadata of the pool\n @param _managers The managers of the pool\n @custom:initstrategydata The encoded data will be specific to a given strategy requirements,\n    reference the strategy implementation of 'initialize()'"
            },
            "functionSelector": "77da8caf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 194,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 193,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "12085:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62028,
                  "src": "12085:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12085:12:0"
              }
            ],
            "name": "createPool",
            "nameLocation": "11836:10:0",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "_profileId",
                  "nameLocation": "11864:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "11856:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11856:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "11892:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "11884:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11884:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "_initStrategyData",
                  "nameLocation": "11924:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "11911:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11911:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "11959:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "11951:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11951:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11983:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "11975:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11975:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "_metadata",
                  "nameLocation": "12016:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "12000:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                    "typeString": "struct Metadata"
                  },
                  "typeName": {
                    "id": 187,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 186,
                      "name": "Metadata",
                      "nameLocations": [
                        "12000:8:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2918,
                      "src": "12000:8:0"
                    },
                    "referencedDeclaration": 2918,
                    "src": "12000:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$2918_storage_ptr",
                      "typeString": "struct Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_managers",
                  "nameLocation": "12052:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "12035:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 189,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12035:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 190,
                    "nodeType": "ArrayTypeName",
                    "src": "12035:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11846:221:0"
            },
            "returnParameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "12115:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "12107:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12107:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12106:16:0"
            },
            "scope": 1278,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 259,
            "nodeType": "FunctionDefinition",
            "src": "12750:247:0",
            "nodes": [],
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "12856:141:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 242,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "12879:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 258,
                      "src": "12866:17:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$2144_storage_ptr",
                        "typeString": "struct IAllo.Pool"
                      },
                      "typeName": {
                        "id": 241,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 240,
                          "name": "Pool",
                          "nameLocations": [
                            "12866:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2144,
                          "src": "12866:4:0"
                        },
                        "referencedDeclaration": 2144,
                        "src": "12866:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$2144_storage_ptr",
                          "typeString": "struct IAllo.Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 246,
                  "initialValue": {
                    "baseExpression": {
                      "id": 243,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "12886:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                        "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                      }
                    },
                    "id": 245,
                    "indexExpression": {
                      "id": 244,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "12892:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12886:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$2144_storage",
                      "typeString": "struct IAllo.Pool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12866:34:0"
                },
                {
                  "expression": {
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 247,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "12910:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$2144_storage_ptr",
                          "typeString": "struct IAllo.Pool storage pointer"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12915:8:0",
                      "memberName": "metadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2139,
                      "src": "12910:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$2918_storage",
                        "typeString": "struct Metadata storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 250,
                      "name": "_metadata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "12926:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                        "typeString": "struct Metadata memory"
                      }
                    },
                    "src": "12910:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$2918_storage",
                      "typeString": "struct Metadata storage ref"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "12910:25:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 254,
                        "name": "_poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "12971:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 255,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "12980:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                          "typeString": "struct Metadata memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                          "typeString": "struct Metadata memory"
                        }
                      ],
                      "id": 253,
                      "name": "PoolMetadataUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2169,
                      "src": "12951:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_Metadata_$2918_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct Metadata memory)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12951:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "EmitStatement",
                  "src": "12946:44:0"
                }
              ]
            },
            "baseFunctions": [
              2236
            ],
            "documentation": {
              "id": 229,
              "nodeType": "StructuredDocumentation",
              "src": "12534:211:0",
              "text": "@notice Update pool metadata\n @dev 'msg.sender' must be a pool manager. Emits 'PoolMetadataUpdated()' event.\n @param _poolId ID of the pool\n @param _metadata The new metadata of the pool"
            },
            "functionSelector": "5f9ca138",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 237,
                    "name": "_poolId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 231,
                    "src": "12847:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 236,
                  "name": "onlyPoolManager",
                  "nameLocations": [
                    "12831:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 111,
                  "src": "12831:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12831:24:0"
              }
            ],
            "name": "updatePoolMetadata",
            "nameLocation": "12759:18:0",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "12786:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "12778:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12778:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "_metadata",
                  "nameLocation": "12811:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "12795:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                    "typeString": "struct Metadata"
                  },
                  "typeName": {
                    "id": 233,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 232,
                      "name": "Metadata",
                      "nameLocations": [
                        "12795:8:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2918,
                      "src": "12795:8:0"
                    },
                    "referencedDeclaration": 2918,
                    "src": "12795:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$2918_storage_ptr",
                      "typeString": "struct Metadata"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12777:44:0"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12856:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 272,
            "nodeType": "FunctionDefinition",
            "src": "13186:105:0",
            "nodes": [],
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "13248:43:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 268,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "13274:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 267,
                      "name": "_updateRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "13258:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13258:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "13258:26:0"
                }
              ]
            },
            "baseFunctions": [
              2242
            ],
            "documentation": {
              "id": 260,
              "nodeType": "StructuredDocumentation",
              "src": "13003:178:0",
              "text": "@notice Updates the registry address.\n @dev Use this to update the registry address. 'msg.sender' must be Allo owner.\n @param _registry The new registry address"
            },
            "functionSelector": "1a5da6c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 265,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 264,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "13238:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68279,
                  "src": "13238:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13238:9:0"
              }
            ],
            "name": "updateRegistry",
            "nameLocation": "13195:14:0",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "_registry",
                  "nameLocation": "13218:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "13210:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13210:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13209:19:0"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13248:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 285,
            "nodeType": "FunctionDefinition",
            "src": "13480:113:0",
            "nodes": [],
            "body": {
              "id": 284,
              "nodeType": "Block",
              "src": "13550:43:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 281,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "13576:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 280,
                      "name": "_updateTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "13560:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13560:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "13560:26:0"
                }
              ]
            },
            "baseFunctions": [
              2248
            ],
            "documentation": {
              "id": 273,
              "nodeType": "StructuredDocumentation",
              "src": "13297:178:0",
              "text": "@notice Updates the treasury address.\n @dev Use this to update the treasury address. 'msg.sender' must be Allo owner.\n @param _treasury The new treasury address"
            },
            "functionSelector": "7f51bb1f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 278,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 277,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "13540:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68279,
                  "src": "13540:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13540:9:0"
              }
            ],
            "name": "updateTreasury",
            "nameLocation": "13489:14:0",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nameLocation": "13520:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "13504:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13504:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13503:27:0"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13550:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 298,
            "nodeType": "FunctionDefinition",
            "src": "13767:113:0",
            "nodes": [],
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "13833:47:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 294,
                        "name": "_percentFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "13861:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 293,
                      "name": "_updatePercentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1140,
                      "src": "13843:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13843:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "13843:30:0"
                }
              ]
            },
            "baseFunctions": [
              2254
            ],
            "documentation": {
              "id": 286,
              "nodeType": "StructuredDocumentation",
              "src": "13599:163:0",
              "text": "@notice Updates the fee percentage.\n @dev Use this to update the fee percentage. 'msg.sender' must be Allo owner.\n @param _percentFee The new fee"
            },
            "functionSelector": "f54fc4a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 291,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 290,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "13823:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68279,
                  "src": "13823:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "13823:9:0"
              }
            ],
            "name": "updatePercentFee",
            "nameLocation": "13776:16:0",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "_percentFee",
                  "nameLocation": "13801:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "13793:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13793:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13792:21:0"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13833:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 311,
            "nodeType": "FunctionDefinition",
            "src": "14044:101:0",
            "nodes": [],
            "body": {
              "id": 310,
              "nodeType": "Block",
              "src": "14104:41:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 307,
                        "name": "_baseFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "14129:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 306,
                      "name": "_updateBaseFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "14114:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14114:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "14114:24:0"
                }
              ]
            },
            "baseFunctions": [
              2260
            ],
            "documentation": {
              "id": 299,
              "nodeType": "StructuredDocumentation",
              "src": "13886:153:0",
              "text": "@notice Updates the base fee.\n @dev Use this to update the base fee. 'msg.sender' must be Allo owner.\n @param _baseFee The new base fee"
            },
            "functionSelector": "8e690186",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 304,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 303,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "14094:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68279,
                  "src": "14094:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "14094:9:0"
              }
            ],
            "name": "updateBaseFee",
            "nameLocation": "14053:13:0",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "_baseFee",
                  "nameLocation": "14075:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 311,
                  "src": "14067:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14067:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14066:18:0"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14104:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 340,
            "nodeType": "FunctionDefinition",
            "src": "14337:229:0",
            "nodes": [],
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "14409:157:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 319,
                      "name": "_strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "14423:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14444:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14436:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 320,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14436:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14436:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14423:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 328,
                  "nodeType": "IfStatement",
                  "src": "14419:50:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 325,
                        "name": "ZERO_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2843,
                        "src": "14455:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14455:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 327,
                    "nodeType": "RevertStatement",
                    "src": "14448:21:0"
                  }
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 329,
                        "name": "cloneableStrategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "14480:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 331,
                      "indexExpression": {
                        "id": 330,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "14500:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14480:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14513:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "14480:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "14480:37:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 336,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "14549:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 335,
                      "name": "StrategyApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2210,
                      "src": "14532:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14532:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "EmitStatement",
                  "src": "14527:32:0"
                }
              ]
            },
            "baseFunctions": [
              2266
            ],
            "documentation": {
              "id": 312,
              "nodeType": "StructuredDocumentation",
              "src": "14151:181:0",
              "text": "@notice Add a strategy to the allowlist.\n @dev Emits the 'StrategyApproved()' event. 'msg.sender' must be Allo owner.\n @param _strategy The address of the strategy"
            },
            "functionSelector": "41bba0b4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 317,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 316,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "14399:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68279,
                  "src": "14399:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "14399:9:0"
              }
            ],
            "name": "addToCloneableStrategies",
            "nameLocation": "14346:24:0",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "14379:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "14371:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14371:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14370:19:0"
            },
            "returnParameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14409:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 359,
            "nodeType": "FunctionDefinition",
            "src": "14756:288:0",
            "nodes": [],
            "body": {
              "id": 358,
              "nodeType": "Block",
              "src": "14833:211:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 348,
                        "name": "cloneableStrategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "14915:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 350,
                      "indexExpression": {
                        "id": 349,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "14935:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14915:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14948:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "14915:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "14915:38:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 355,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "15027:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 354,
                      "name": "StrategyRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2215,
                      "src": "15011:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15011:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 357,
                  "nodeType": "EmitStatement",
                  "src": "15006:31:0"
                }
              ]
            },
            "baseFunctions": [
              2272
            ],
            "documentation": {
              "id": 341,
              "nodeType": "StructuredDocumentation",
              "src": "14572:179:0",
              "text": "@notice Remove a strategy from the allowlist\n @dev Emits 'StrategyRemoved()' event. 'msg.sender must be Allo owner.\n @param _strategy The address of the strategy"
            },
            "functionSelector": "031e2fa1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 346,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 345,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "14823:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68279,
                  "src": "14823:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "14823:9:0"
              }
            ],
            "name": "removeFromCloneableStrategies",
            "nameLocation": "14765:29:0",
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "14803:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 359,
                  "src": "14795:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14795:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14794:19:0"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14833:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 389,
            "nodeType": "FunctionDefinition",
            "src": "15243:358:0",
            "nodes": [],
            "body": {
              "id": 388,
              "nodeType": "Block",
              "src": "15334:267:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 370,
                      "name": "_manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "15424:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15444:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15436:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15436:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15436:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15424:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 379,
                  "nodeType": "IfStatement",
                  "src": "15420:49:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 376,
                        "name": "ZERO_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2843,
                        "src": "15455:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15455:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 378,
                    "nodeType": "RevertStatement",
                    "src": "15448:21:0"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 381,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "15557:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                              "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                            }
                          },
                          "id": 383,
                          "indexExpression": {
                            "id": 382,
                            "name": "_poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "15563:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15557:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$2144_storage",
                            "typeString": "struct IAllo.Pool storage ref"
                          }
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15572:11:0",
                        "memberName": "managerRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2141,
                        "src": "15557:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 385,
                        "name": "_manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "15585:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 380,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62760,
                      "src": "15546:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15546:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "15546:48:0"
                }
              ]
            },
            "baseFunctions": [
              2280
            ],
            "documentation": {
              "id": 360,
              "nodeType": "StructuredDocumentation",
              "src": "15050:188:0",
              "text": "@notice Add a pool manager\n @dev Emits 'RoleGranted()' event. 'msg.sender' must be a pool admin.\n @param _poolId ID of the pool\n @param _manager The address to add"
            },
            "functionSelector": "2cf682b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 367,
                    "name": "_poolId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 362,
                    "src": "15325:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 368,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 366,
                  "name": "onlyPoolAdmin",
                  "nameLocations": [
                    "15311:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122,
                  "src": "15311:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "15311:22:0"
              }
            ],
            "name": "addPoolManager",
            "nameLocation": "15252:14:0",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "15275:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "15267:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15267:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 364,
                  "mutability": "mutable",
                  "name": "_manager",
                  "nameLocation": "15292:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "15284:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15284:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15266:35:0"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15334:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 409,
            "nodeType": "FunctionDefinition",
            "src": "15806:160:0",
            "nodes": [],
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "15900:66:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 401,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "15922:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                              "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                            }
                          },
                          "id": 403,
                          "indexExpression": {
                            "id": 402,
                            "name": "_poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 392,
                            "src": "15928:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15922:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$2144_storage",
                            "typeString": "struct IAllo.Pool storage ref"
                          }
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15937:11:0",
                        "memberName": "managerRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2141,
                        "src": "15922:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 405,
                        "name": "_manager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "15950:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 400,
                      "name": "_revokeRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62791,
                      "src": "15910:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15910:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "15910:49:0"
                }
              ]
            },
            "baseFunctions": [
              2288
            ],
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "15607:194:0",
              "text": "@notice Remove a pool manager\n @dev Emits 'RoleRevoked()' event. 'msg.sender' must be a pool admin.\n @param _poolId ID of the pool\n @param _manager The address to remove"
            },
            "functionSelector": "7f5a70bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 397,
                    "name": "_poolId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 392,
                    "src": "15891:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 398,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 396,
                  "name": "onlyPoolAdmin",
                  "nameLocations": [
                    "15877:13:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122,
                  "src": "15877:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "15877:22:0"
              }
            ],
            "name": "removePoolManager",
            "nameLocation": "15815:17:0",
            "parameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "15841:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "15833:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15833:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 394,
                  "mutability": "mutable",
                  "name": "_manager",
                  "nameLocation": "15858:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "15850:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15850:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15832:35:0"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15900:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 447,
            "nodeType": "FunctionDefinition",
            "src": "16164:430:0",
            "nodes": [],
            "body": {
              "id": 446,
              "nodeType": "Block",
              "src": "16241:353:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 420,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "16370:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 446,
                      "src": "16362:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 419,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16362:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 439,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 421,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "16379:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 422,
                        "name": "NATIVE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2925,
                        "src": "16389:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "16379:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 435,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "16466:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Allo_$1278",
                                "typeString": "contract Allo"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Allo_$1278",
                                "typeString": "contract Allo"
                              }
                            ],
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16458:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 433,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16458:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16458:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 430,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "16440:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 429,
                            "name": "IERC20Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62146,
                            "src": "16422:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$62146_$",
                              "typeString": "type(contract IERC20Upgradeable)"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16422:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$62146",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16448:9:0",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62103,
                        "src": "16422:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16422:50:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "16379:93:0",
                    "trueExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 426,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16406:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Allo_$1278",
                              "typeString": "contract Allo"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Allo_$1278",
                              "typeString": "contract Allo"
                            }
                          ],
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16398:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 424,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16398:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16398:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16412:7:0",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "16398:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16362:110:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 441,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "16560:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 442,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "16568:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 443,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "16580:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 440,
                      "name": "_transferAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3107,
                      "src": "16544:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16544:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "16544:43:0"
                }
              ]
            },
            "baseFunctions": [
              2296
            ],
            "documentation": {
              "id": 410,
              "nodeType": "StructuredDocumentation",
              "src": "15972:187:0",
              "text": "@notice Transfer the funds recovered  to the recipient\n @dev 'msg.sender' must be Allo owner\n @param _token The token to transfer\n @param _recipient The recipient"
            },
            "functionSelector": "24ae6a27",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 417,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 416,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "16231:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68279,
                  "src": "16231:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "16231:9:0"
              }
            ],
            "name": "recoverFunds",
            "nameLocation": "16173:12:0",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "16194:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "16186:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16186:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "16210:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 447,
                  "src": "16202:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16202:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16185:36:0"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16241:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 470,
            "nodeType": "FunctionDefinition",
            "src": "17154:258:0",
            "nodes": [],
            "body": {
              "id": 469,
              "nodeType": "Block",
              "src": "17266:146:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 464,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 452,
                        "src": "17387:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17394:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17398:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17394:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 459,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "17345:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                              "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                            }
                          },
                          "id": 461,
                          "indexExpression": {
                            "id": 460,
                            "name": "_poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "17351:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17345:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$2144_storage",
                            "typeString": "struct IAllo.Pool storage ref"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17360:8:0",
                        "memberName": "strategy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2134,
                        "src": "17345:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17369:17:0",
                      "memberName": "registerRecipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2772,
                      "src": "17345:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (bytes memory,address) payable external returns (address)"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17345:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 458,
                  "id": 468,
                  "nodeType": "Return",
                  "src": "17338:67:0"
                }
              ]
            },
            "baseFunctions": [
              2306
            ],
            "documentation": {
              "id": 448,
              "nodeType": "StructuredDocumentation",
              "src": "16733:416:0",
              "text": "@notice Passes _data through to the strategy for that pool.\n @dev The encoded data will be specific to a given strategy requirements, reference the strategy\n      implementation of registerRecipient().\n @param _poolId ID of the pool\n @param _data Encoded data unique to a strategy that registerRecipient() requires\n @return recipientId The recipient ID that has been registered"
            },
            "functionSelector": "075c0e9c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 455,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 454,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "17235:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62028,
                  "src": "17235:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "17235:12:0"
              }
            ],
            "name": "registerRecipient",
            "nameLocation": "17163:17:0",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "17189:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 470,
                  "src": "17181:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17181:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "17211:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 470,
                  "src": "17198:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17198:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17180:37:0"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 470,
                  "src": "17257:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17257:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17256:9:0"
            },
            "scope": 1278,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 539,
            "nodeType": "FunctionDefinition",
            "src": "18050:747:0",
            "nodes": [],
            "body": {
              "id": 538,
              "nodeType": "Block",
              "src": "18221:576:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 486,
                      "mutability": "mutable",
                      "name": "poolIdLength",
                      "nameLocation": "18239:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 538,
                      "src": "18231:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 485,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18231:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 489,
                  "initialValue": {
                    "expression": {
                      "id": 487,
                      "name": "_poolIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "18254:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "18263:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "18254:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18231:38:0"
                },
                {
                  "expression": {
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 490,
                      "name": "recipientIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 483,
                      "src": "18279:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 494,
                          "name": "poolIdLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 486,
                          "src": "18308:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "18294:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 491,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18298:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 492,
                          "nodeType": "ArrayTypeName",
                          "src": "18298:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18294:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "18279:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "18279:42:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 498,
                      "name": "poolIdLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 486,
                      "src": "18336:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 499,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "18352:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18358:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "18352:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18336:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 505,
                  "nodeType": "IfStatement",
                  "src": "18332:51:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 502,
                        "name": "MISMATCH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2834,
                        "src": "18373:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18373:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 504,
                    "nodeType": "RevertStatement",
                    "src": "18366:17:0"
                  }
                },
                {
                  "body": {
                    "id": 534,
                    "nodeType": "Block",
                    "src": "18531:169:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 512,
                              "name": "recipientIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 483,
                              "src": "18545:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 514,
                            "indexExpression": {
                              "id": 513,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 507,
                              "src": "18558:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "18545:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 522,
                                  "name": "_data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 477,
                                  "src": "18609:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "bytes memory[] memory"
                                  }
                                },
                                "id": 524,
                                "indexExpression": {
                                  "id": 523,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 507,
                                  "src": "18615:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18609:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 525,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "18619:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "18623:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "18619:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 515,
                                    "name": "pools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58,
                                    "src": "18563:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                                      "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                                    }
                                  },
                                  "id": 519,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 516,
                                      "name": "_poolIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 474,
                                      "src": "18569:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 518,
                                    "indexExpression": {
                                      "id": 517,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 507,
                                      "src": "18578:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18569:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18563:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Pool_$2144_storage",
                                    "typeString": "struct IAllo.Pool storage ref"
                                  }
                                },
                                "id": 520,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "18582:8:0",
                                "memberName": "strategy",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2134,
                                "src": "18563:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$2792",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "18591:17:0",
                              "memberName": "registerRecipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2772,
                              "src": "18563:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                                "typeString": "function (bytes memory,address) payable external returns (address)"
                              }
                            },
                            "id": 527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18563:67:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18545:85:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 529,
                        "nodeType": "ExpressionStatement",
                        "src": "18545:85:0"
                      },
                      {
                        "id": 533,
                        "nodeType": "UncheckedBlock",
                        "src": "18644:46:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "18672:3:0",
                              "subExpression": {
                                "id": 530,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 507,
                                "src": "18674:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 532,
                            "nodeType": "ExpressionStatement",
                            "src": "18672:3:0"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 509,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "18512:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 510,
                      "name": "poolIdLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 486,
                      "src": "18516:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18512:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 535,
                  "initializationExpression": {
                    "assignments": [
                      507
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 507,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "18509:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 535,
                        "src": "18501:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 506,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18501:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 508,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18501:9:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "18496:204:0"
                },
                {
                  "expression": {
                    "id": 536,
                    "name": "recipientIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 483,
                    "src": "18778:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 484,
                  "id": 537,
                  "nodeType": "Return",
                  "src": "18771:19:0"
                }
              ]
            },
            "baseFunctions": [
              2319
            ],
            "documentation": {
              "id": 471,
              "nodeType": "StructuredDocumentation",
              "src": "17418:627:0",
              "text": "@notice Register multiple recipients to multiple pools.\n @dev Returns the 'recipientIds' from the strategy that have been registered from calling this function.\n      Encoded data unique to a strategy that registerRecipient() requires. Encoded '_data' length must match\n      '_poolIds' length or this will revert with MISMATCH(). Other requirements will be determined by the strategy.\n @param _poolIds ID's of the pools\n @param _data An array of encoded data unique to a strategy that registerRecipient() requires.\n @return recipientIds The recipient IDs that have been registered"
            },
            "functionSelector": "1a20bd88",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 480,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 479,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "18156:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62028,
                  "src": "18156:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "18156:12:0"
              }
            ],
            "name": "batchRegisterRecipient",
            "nameLocation": "18059:22:0",
            "parameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "_poolIds",
                  "nameLocation": "18099:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "18082:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 472,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "18082:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 473,
                    "nodeType": "ArrayTypeName",
                    "src": "18082:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "18124:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "18109:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 475,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "18109:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 476,
                    "nodeType": "ArrayTypeName",
                    "src": "18109:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18081:49:0"
            },
            "returnParameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "mutability": "mutable",
                  "name": "recipientIds",
                  "nameLocation": "18203:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "18186:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 481,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "18186:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 482,
                    "nodeType": "ArrayTypeName",
                    "src": "18186:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18185:31:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 566,
            "nodeType": "FunctionDefinition",
            "src": "18994:320:0",
            "nodes": [],
            "body": {
              "id": 565,
              "nodeType": "Block",
              "src": "19076:238:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 549,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 544,
                      "src": "19156:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19167:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19156:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 555,
                  "nodeType": "IfStatement",
                  "src": "19152:43:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 552,
                        "name": "NOT_ENOUGH_FUNDS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2837,
                        "src": "19177:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19177:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 554,
                    "nodeType": "RevertStatement",
                    "src": "19170:25:0"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 557,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 544,
                        "src": "19265:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 558,
                        "name": "_poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 542,
                        "src": "19274:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 559,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "19283:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                              "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                            }
                          },
                          "id": 561,
                          "indexExpression": {
                            "id": 560,
                            "name": "_poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 542,
                            "src": "19289:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19283:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$2144_storage",
                            "typeString": "struct IAllo.Pool storage ref"
                          }
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19298:8:0",
                        "memberName": "strategy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2134,
                        "src": "19283:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      ],
                      "id": 556,
                      "name": "_fundPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1010,
                      "src": "19255:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_IStrategy_$2792_$returns$__$",
                        "typeString": "function (uint256,uint256,contract IStrategy)"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19255:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "19255:52:0"
                }
              ]
            },
            "baseFunctions": [
              2327
            ],
            "documentation": {
              "id": 540,
              "nodeType": "StructuredDocumentation",
              "src": "18803:186:0",
              "text": "@notice Fund a pool.\n @dev Anyone can fund a pool and call this function.\n @param _poolId ID of the pool\n @param _amount The amount to be deposited into the pool"
            },
            "functionSelector": "5acd6fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 547,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 546,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "19063:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62028,
                  "src": "19063:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "19063:12:0"
              }
            ],
            "name": "fundPool",
            "nameLocation": "19003:8:0",
            "parameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 542,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "19020:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "19012:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19012:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "19037:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 566,
                  "src": "19029:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19029:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19011:34:0"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19076:0:0"
            },
            "scope": 1278,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 582,
            "nodeType": "FunctionDefinition",
            "src": "19640:127:0",
            "nodes": [],
            "body": {
              "id": 581,
              "nodeType": "Block",
              "src": "19725:42:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 577,
                        "name": "_poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "19745:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 578,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 571,
                        "src": "19754:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 576,
                      "name": "_allocate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "19735:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19735:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 580,
                  "nodeType": "ExpressionStatement",
                  "src": "19735:25:0"
                }
              ]
            },
            "baseFunctions": [
              2335
            ],
            "documentation": {
              "id": 567,
              "nodeType": "StructuredDocumentation",
              "src": "19320:315:0",
              "text": "@notice Allocate to a recipient or multiple recipients.\n @dev The encoded data will be specific to a given strategy requirements, reference the strategy\n      implementation of allocate().\n @param _poolId ID of the pool\n @param _data Encoded data unique to the strategy for that pool"
            },
            "functionSelector": "2ec38188",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 574,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 573,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "19712:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62028,
                  "src": "19712:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "19712:12:0"
              }
            ],
            "name": "allocate",
            "nameLocation": "19649:8:0",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "19666:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "19658:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19658:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 571,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "19688:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "19675:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 570,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19675:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19657:37:0"
            },
            "returnParameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19725:0:0"
            },
            "scope": 1278,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 629,
            "nodeType": "FunctionDefinition",
            "src": "20230:559:0",
            "nodes": [],
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "20327:462:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 595,
                      "mutability": "mutable",
                      "name": "numPools",
                      "nameLocation": "20345:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 628,
                      "src": "20337:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 594,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20337:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 598,
                  "initialValue": {
                    "expression": {
                      "id": 596,
                      "name": "_poolIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "20356:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "20365:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "20356:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20337:34:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 599,
                      "name": "numPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 595,
                      "src": "20491:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 600,
                        "name": "_datas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "20503:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20510:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "20503:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20491:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 606,
                  "nodeType": "IfStatement",
                  "src": "20487:48:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 603,
                        "name": "MISMATCH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2834,
                        "src": "20525:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20525:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 605,
                    "nodeType": "RevertStatement",
                    "src": "20518:17:0"
                  }
                },
                {
                  "body": {
                    "id": 626,
                    "nodeType": "Block",
                    "src": "20666:117:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 614,
                                "name": "_poolIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 586,
                                "src": "20690:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 616,
                              "indexExpression": {
                                "id": 615,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 608,
                                "src": "20699:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20690:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 617,
                                "name": "_datas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 589,
                                "src": "20703:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              "id": 619,
                              "indexExpression": {
                                "id": 618,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 608,
                                "src": "20710:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20703:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 613,
                            "name": "_allocate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 925,
                            "src": "20680:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,bytes memory)"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20680:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 621,
                        "nodeType": "ExpressionStatement",
                        "src": "20680:33:0"
                      },
                      {
                        "id": 625,
                        "nodeType": "UncheckedBlock",
                        "src": "20727:46:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "20755:3:0",
                              "subExpression": {
                                "id": 622,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 608,
                                "src": "20757:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 624,
                            "nodeType": "ExpressionStatement",
                            "src": "20755:3:0"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 610,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 608,
                      "src": "20651:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 611,
                      "name": "numPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 595,
                      "src": "20655:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20651:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 627,
                  "initializationExpression": {
                    "assignments": [
                      608
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 608,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "20648:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 627,
                        "src": "20640:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20640:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 609,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "20640:9:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "20635:148:0"
                }
              ]
            },
            "baseFunctions": [
              2345
            ],
            "documentation": {
              "id": 583,
              "nodeType": "StructuredDocumentation",
              "src": "19773:452:0",
              "text": "@notice Allocate to multiple pools\n @dev The encoded data will be specific to a given strategy requirements, reference the strategy\n      implementation of allocate(). Please note that this is not a 'payable' function, so if you\n      want to send funds to the strategy, you must send the funds using 'fundPool()'.\n @param _poolIds IDs of the pools\n @param _datas encoded data unique to the strategy for that pool"
            },
            "functionSelector": "c6dff1cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 592,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 591,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "20314:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62028,
                  "src": "20314:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "20314:12:0"
              }
            ],
            "name": "batchAllocate",
            "nameLocation": "20239:13:0",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "_poolIds",
                  "nameLocation": "20272:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "20253:27:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 584,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "20253:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 585,
                    "nodeType": "ArrayTypeName",
                    "src": "20253:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 589,
                  "mutability": "mutable",
                  "name": "_datas",
                  "nameLocation": "20297:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 629,
                  "src": "20282:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 587,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "20282:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 588,
                    "nodeType": "ArrayTypeName",
                    "src": "20282:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20252:52:0"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20327:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 654,
            "nodeType": "FunctionDefinition",
            "src": "21187:196:0",
            "nodes": [],
            "body": {
              "id": 653,
              "nodeType": "Block",
              "src": "21298:85:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 647,
                        "name": "_recipientIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "21343:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 648,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 637,
                        "src": "21358:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 649,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21365:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21369:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21365:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 642,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "21308:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                              "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                            }
                          },
                          "id": 644,
                          "indexExpression": {
                            "id": 643,
                            "name": "_poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "21314:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21308:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$2144_storage",
                            "typeString": "struct IAllo.Pool storage ref"
                          }
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21323:8:0",
                        "memberName": "strategy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2134,
                        "src": "21308:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21332:10:0",
                      "memberName": "distribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2791,
                      "src": "21308:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address[] memory,bytes memory,address) external"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21308:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "21308:68:0"
                }
              ]
            },
            "baseFunctions": [
              2356
            ],
            "documentation": {
              "id": 630,
              "nodeType": "StructuredDocumentation",
              "src": "20795:387:0",
              "text": "@notice Distribute to a recipient or multiple recipients.\n @dev The encoded data will be specific to a given strategy requirements, reference the strategy\n      implementation of 'strategy.distribute()'.\n @param _poolId ID of the pool\n @param _recipientIds Ids of the recipients of the distribution\n @param _data Encoded data unique to the strategy"
            },
            "functionSelector": "3a5fbd92",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 640,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 639,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "21285:12:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62028,
                  "src": "21285:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "21285:12:0"
              }
            ],
            "name": "distribute",
            "nameLocation": "21196:10:0",
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "21215:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "21207:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21207:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "_recipientIds",
                  "nameLocation": "21241:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "21224:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 633,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21224:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 634,
                    "nodeType": "ArrayTypeName",
                    "src": "21224:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "21269:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 654,
                  "src": "21256:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21256:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21206:69:0"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21298:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 671,
            "nodeType": "FunctionDefinition",
            "src": "21629:142:0",
            "nodes": [],
            "body": {
              "id": 670,
              "nodeType": "Block",
              "src": "21691:80:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "21705:36:0",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 661,
                          "name": "_poolId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "21721:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 662,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "21730:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21734:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21730:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 660,
                        "name": "_isPoolManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1066,
                        "src": "21706:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (uint256,address) view returns (bool)"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21706:35:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 669,
                  "nodeType": "IfStatement",
                  "src": "21701:63:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 666,
                        "name": "UNAUTHORIZED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2840,
                        "src": "21750:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21750:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 668,
                    "nodeType": "RevertStatement",
                    "src": "21743:21:0"
                  }
                }
              ]
            },
            "documentation": {
              "id": 655,
              "nodeType": "StructuredDocumentation",
              "src": "21525:99:0",
              "text": "@notice Internal function to check is caller is pool manager\n @param _poolId The pool id"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnlyPoolManager",
            "nameLocation": "21638:21:0",
            "parameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "21668:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 671,
                  "src": "21660:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21660:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21659:17:0"
            },
            "returnParameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21691:0:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 688,
            "nodeType": "FunctionDefinition",
            "src": "21879:138:0",
            "nodes": [],
            "body": {
              "id": 687,
              "nodeType": "Block",
              "src": "21939:78:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "21953:34:0",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 678,
                          "name": "_poolId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 674,
                          "src": "21967:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 679,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "21976:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21980:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "21976:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 677,
                        "name": "_isPoolAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1042,
                        "src": "21954:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (uint256,address) view returns (bool)"
                        }
                      },
                      "id": 681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21954:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 686,
                  "nodeType": "IfStatement",
                  "src": "21949:61:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 683,
                        "name": "UNAUTHORIZED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2840,
                        "src": "21996:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21996:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 685,
                    "nodeType": "RevertStatement",
                    "src": "21989:21:0"
                  }
                }
              ]
            },
            "documentation": {
              "id": 672,
              "nodeType": "StructuredDocumentation",
              "src": "21777:97:0",
              "text": "@notice Internal function to check is caller is pool admin\n @param _poolId The pool id"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnlyPoolAdmin",
            "nameLocation": "21888:19:0",
            "parameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "21916:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "21908:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21908:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21907:17:0"
            },
            "returnParameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21939:0:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 903,
            "nodeType": "FunctionDefinition",
            "src": "22850:2683:0",
            "nodes": [],
            "body": {
              "id": 902,
              "nodeType": "Block",
              "src": "23128:2405:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "23142:58:0",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 713,
                          "name": "_profileId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 691,
                          "src": "23177:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 714,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "23189:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "23193:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "23189:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 711,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "23143:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRegistry_$2625",
                            "typeString": "contract IRegistry"
                          }
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23152:24:0",
                        "memberName": "isOwnerOrMemberOfProfile",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2527,
                        "src": "23143:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view external returns (bool)"
                        }
                      },
                      "id": 716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23143:57:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 721,
                  "nodeType": "IfStatement",
                  "src": "23138:85:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 718,
                        "name": "UNAUTHORIZED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2840,
                        "src": "23209:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23209:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 720,
                    "nodeType": "RevertStatement",
                    "src": "23202:21:0"
                  }
                },
                {
                  "expression": {
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 722,
                      "name": "poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 709,
                      "src": "23234:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "23243:12:0",
                      "subExpression": {
                        "id": 723,
                        "name": "_poolIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "23245:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23234:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "23234:21:0"
                },
                {
                  "assignments": [
                    728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 728,
                      "mutability": "mutable",
                      "name": "POOL_MANAGER_ROLE",
                      "nameLocation": "23402:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 902,
                      "src": "23394:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 727,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "23394:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 733,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 731,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "23430:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "23422:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 729,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "23422:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23422:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23394:43:0"
                },
                {
                  "assignments": [
                    735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 735,
                      "mutability": "mutable",
                      "name": "POOL_ADMIN_ROLE",
                      "nameLocation": "23455:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 902,
                      "src": "23447:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 734,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "23447:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 743,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 739,
                            "name": "poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 709,
                            "src": "23500:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "61646d696e",
                            "id": 740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23508:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8",
                              "typeString": "literal_string \"admin\""
                            },
                            "value": "admin"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8",
                              "typeString": "literal_string \"admin\""
                            }
                          ],
                          "expression": {
                            "id": 737,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "23483:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "23487:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "23483:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23483:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 736,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "23473:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23473:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23447:70:0"
                },
                {
                  "assignments": [
                    746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 746,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "23576:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 902,
                      "src": "23564:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$2144_memory_ptr",
                        "typeString": "struct IAllo.Pool"
                      },
                      "typeName": {
                        "id": 745,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 744,
                          "name": "Pool",
                          "nameLocations": [
                            "23564:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2144,
                          "src": "23564:4:0"
                        },
                        "referencedDeclaration": 2144,
                        "src": "23564:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$2144_storage_ptr",
                          "typeString": "struct IAllo.Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 755,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 748,
                        "name": "_profileId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "23613:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 749,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "23647:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 750,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "23680:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                          "typeString": "struct Metadata memory"
                        }
                      },
                      {
                        "id": 751,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "23710:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 752,
                        "name": "POOL_MANAGER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "23743:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 753,
                        "name": "POOL_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "23785:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                          "typeString": "struct Metadata memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 747,
                      "name": "Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "23583:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Pool_$2144_storage_ptr_$",
                        "typeString": "type(struct IAllo.Pool storage pointer)"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "23602:9:0",
                      "23637:8:0",
                      "23670:8:0",
                      "23703:5:0",
                      "23730:11:0",
                      "23774:9:0"
                    ],
                    "names": [
                      "profileId",
                      "strategy",
                      "metadata",
                      "token",
                      "managerRole",
                      "adminRole"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "23583:228:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$2144_memory_ptr",
                      "typeString": "struct IAllo.Pool memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23564:247:0"
                },
                {
                  "expression": {
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 756,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "23878:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                          "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                        }
                      },
                      "id": 758,
                      "indexExpression": {
                        "id": 757,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "23884:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23878:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$2144_storage",
                        "typeString": "struct IAllo.Pool storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 759,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "23894:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$2144_memory_ptr",
                        "typeString": "struct IAllo.Pool memory"
                      }
                    },
                    "src": "23878:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$2144_storage",
                      "typeString": "struct IAllo.Pool storage ref"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "23878:20:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 763,
                        "name": "POOL_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "23969:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 764,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "23986:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23990:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "23986:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 762,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62760,
                      "src": "23958:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23958:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "23958:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 769,
                        "name": "POOL_MANAGER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "24070:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 770,
                        "name": "POOL_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "24089:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 768,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62728,
                      "src": "24056:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24056:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "24056:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 776,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "24281:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 777,
                        "name": "_initStrategyData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "24289:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 773,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "24260:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "24270:10:0",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2762,
                      "src": "24260:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory) external"
                      }
                    },
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24260:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 779,
                  "nodeType": "ExpressionStatement",
                  "src": "24260:47:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 780,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "24322:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$2792",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "24332:9:0",
                          "memberName": "getPoolId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2699,
                          "src": "24322:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24322:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 783,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "24347:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "24322:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 787,
                                "name": "_strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 694,
                                "src": "24365:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$2792",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "id": 788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "24375:7:0",
                              "memberName": "getAllo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2693,
                              "src": "24365:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IAllo_$2433_$",
                                "typeString": "function () view external returns (contract IAllo)"
                              }
                            },
                            "id": 789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24365:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAllo_$2433",
                              "typeString": "contract IAllo"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IAllo_$2433",
                              "typeString": "contract IAllo"
                            }
                          ],
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24357:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 785,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24357:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24357:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 793,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "24397:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Allo_$1278",
                              "typeString": "contract Allo"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Allo_$1278",
                              "typeString": "contract Allo"
                            }
                          ],
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "24389:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "24389:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24389:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "24357:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "24322:80:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 800,
                  "nodeType": "IfStatement",
                  "src": "24318:103:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 797,
                        "name": "MISMATCH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2834,
                        "src": "24411:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24411:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 799,
                    "nodeType": "RevertStatement",
                    "src": "24404:17:0"
                  }
                },
                {
                  "assignments": [
                    802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 802,
                      "mutability": "mutable",
                      "name": "managersLength",
                      "nameLocation": "24477:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 902,
                      "src": "24469:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 801,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "24469:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 805,
                  "initialValue": {
                    "expression": {
                      "id": 803,
                      "name": "_managers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "24494:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "24504:6:0",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "24494:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24469:41:0"
                },
                {
                  "body": {
                    "id": 837,
                    "nodeType": "Block",
                    "src": "24557:229:0",
                    "statements": [
                      {
                        "assignments": [
                          813
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 813,
                            "mutability": "mutable",
                            "name": "manager",
                            "nameLocation": "24579:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 837,
                            "src": "24571:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 812,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "24571:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 817,
                        "initialValue": {
                          "baseExpression": {
                            "id": 814,
                            "name": "_managers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "24589:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 816,
                          "indexExpression": {
                            "id": 815,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "24599:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24589:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24571:30:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 818,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 813,
                            "src": "24619:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24638:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24630:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 819,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24630:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24630:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "24619:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 827,
                        "nodeType": "IfStatement",
                        "src": "24615:48:0",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 824,
                              "name": "ZERO_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2843,
                              "src": "24649:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24649:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 826,
                          "nodeType": "RevertStatement",
                          "src": "24642:21:0"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 829,
                              "name": "POOL_MANAGER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 728,
                              "src": "24689:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 830,
                              "name": "manager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "24708:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 828,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62760,
                            "src": "24678:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24678:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 832,
                        "nodeType": "ExpressionStatement",
                        "src": "24678:38:0"
                      },
                      {
                        "id": 836,
                        "nodeType": "UncheckedBlock",
                        "src": "24730:46:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "24758:3:0",
                              "subExpression": {
                                "id": 833,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 807,
                                "src": "24760:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 835,
                            "nodeType": "ExpressionStatement",
                            "src": "24758:3:0"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 809,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "24536:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 810,
                      "name": "managersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 802,
                      "src": "24540:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24536:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 838,
                  "initializationExpression": {
                    "assignments": [
                      807
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "24533:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 838,
                        "src": "24525:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24525:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 808,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "24525:9:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "24520:266:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 839,
                      "name": "baseFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "24800:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "24810:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "24800:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 881,
                  "nodeType": "IfStatement",
                  "src": "24796:556:0",
                  "trueBody": {
                    "id": 880,
                    "nodeType": "Block",
                    "src": "24813:539:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 844,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 842,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 698,
                                    "src": "25080:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 843,
                                    "name": "NATIVE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2925,
                                    "src": "25090:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "25080:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 850,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 847,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 845,
                                          "name": "baseFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 37,
                                          "src": "25101:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 846,
                                          "name": "_amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 700,
                                          "src": "25111:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "25101:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 848,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "25122:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 849,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "25126:5:0",
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "25122:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "25101:30:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 851,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "25100:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "25080:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 853,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "25079:54:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 854,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 698,
                                    "src": "25138:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "id": 855,
                                    "name": "NATIVE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2925,
                                    "src": "25148:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "25138:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 860,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 857,
                                    "name": "baseFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37,
                                    "src": "25158:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 858,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "25169:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 859,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "25173:5:0",
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "25169:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "25158:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "25138:40:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 862,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "25137:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "25079:100:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 868,
                        "nodeType": "IfStatement",
                        "src": "25075:164:0",
                        "trueBody": {
                          "id": 867,
                          "nodeType": "Block",
                          "src": "25181:58:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 864,
                                  "name": "NOT_ENOUGH_FUNDS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2837,
                                  "src": "25206:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "25206:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 866,
                              "nodeType": "RevertStatement",
                              "src": "25199:25:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 870,
                              "name": "NATIVE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2925,
                              "src": "25268:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 871,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "25276:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 872,
                              "name": "baseFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "25286:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 869,
                            "name": "_transferAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3107,
                            "src": "25252:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25252:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 874,
                        "nodeType": "ExpressionStatement",
                        "src": "25252:42:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 876,
                              "name": "poolId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "25325:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 877,
                              "name": "baseFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "25333:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 875,
                            "name": "BaseFeePaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "25313:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25313:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 879,
                        "nodeType": "EmitStatement",
                        "src": "25308:33:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 882,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 700,
                      "src": "25366:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25376:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "25366:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 892,
                  "nodeType": "IfStatement",
                  "src": "25362:79:0",
                  "trueBody": {
                    "id": 891,
                    "nodeType": "Block",
                    "src": "25379:62:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 886,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 700,
                              "src": "25403:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 887,
                              "name": "poolId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "25412:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 888,
                              "name": "_strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "25420:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$2792",
                                "typeString": "contract IStrategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$2792",
                                "typeString": "contract IStrategy"
                              }
                            ],
                            "id": 885,
                            "name": "_fundPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "25393:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_IStrategy_$2792_$returns$__$",
                              "typeString": "function (uint256,uint256,contract IStrategy)"
                            }
                          },
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25393:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 890,
                        "nodeType": "ExpressionStatement",
                        "src": "25393:37:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 894,
                        "name": "poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "25468:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 895,
                        "name": "_profileId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 691,
                        "src": "25476:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 896,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "25488:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 897,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "25499:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 898,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "25507:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 899,
                        "name": "_metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "25516:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                          "typeString": "struct Metadata memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                          "typeString": "struct Metadata memory"
                        }
                      ],
                      "id": 893,
                      "name": "PoolCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2161,
                      "src": "25456:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_contract$_IStrategy_$2792_$_t_address_$_t_uint256_$_t_struct$_Metadata_$2918_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes32,contract IStrategy,address,uint256,struct Metadata memory)"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25456:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 901,
                  "nodeType": "EmitStatement",
                  "src": "25451:75:0"
                }
              ]
            },
            "documentation": {
              "id": 689,
              "nodeType": "StructuredDocumentation",
              "src": "22023:822:0",
              "text": "@notice Creates a new pool.\n @dev This is an internal function that is called by the 'createPool()' & 'createPoolWithCustomStrategy()' functions\n      It is used to create a new pool and is called by both functions. The 'msg.sender' must be a member or owner of\n      a profile to create a pool.\n @param _profileId The ID of the profile of for pool creator in the registry\n @param _strategy The address of strategy\n @param _initStrategyData The data to initialize the strategy\n @param _token The address of the token that the pool is denominated in\n @param _amount The amount of the token to be deposited into the pool\n @param _metadata The 'Metadata' of the pool\n @param _managers The managers of the pool\n @return poolId The ID of the pool"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createPool",
            "nameLocation": "22859:11:0",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "_profileId",
                  "nameLocation": "22888:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "22880:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22880:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "22918:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "22908:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$2792",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 693,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 692,
                      "name": "IStrategy",
                      "nameLocations": [
                        "22908:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2792,
                      "src": "22908:9:0"
                    },
                    "referencedDeclaration": 2792,
                    "src": "22908:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$2792",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "_initStrategyData",
                  "nameLocation": "22950:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "22937:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22937:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "22985:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "22977:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22977:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "23009:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "23001:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23001:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "_metadata",
                  "nameLocation": "23042:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "23026:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Metadata_$2918_memory_ptr",
                    "typeString": "struct Metadata"
                  },
                  "typeName": {
                    "id": 702,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 701,
                      "name": "Metadata",
                      "nameLocations": [
                        "23026:8:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2918,
                      "src": "23026:8:0"
                    },
                    "referencedDeclaration": 2918,
                    "src": "23026:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Metadata_$2918_storage_ptr",
                      "typeString": "struct Metadata"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 706,
                  "mutability": "mutable",
                  "name": "_managers",
                  "nameLocation": "23078:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "23061:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 704,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "23061:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 705,
                    "nodeType": "ArrayTypeName",
                    "src": "23061:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22870:223:0"
            },
            "returnParameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "23120:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 903,
                  "src": "23112:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23112:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23111:16:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 925,
            "nodeType": "FunctionDefinition",
            "src": "25880:151:0",
            "nodes": [],
            "body": {
              "id": 924,
              "nodeType": "Block",
              "src": "25945:86:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 919,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "26006:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 920,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26013:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "26017:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "26013:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 911,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "25955:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                                "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                              }
                            },
                            "id": 913,
                            "indexExpression": {
                              "id": 912,
                              "name": "_poolId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "25961:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "25955:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pool_$2144_storage",
                              "typeString": "struct IAllo.Pool storage ref"
                            }
                          },
                          "id": 914,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "25970:8:0",
                          "memberName": "strategy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2134,
                          "src": "25955:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$2792",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "25979:8:0",
                        "memberName": "allocate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2780,
                        "src": "25955:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                          "typeString": "function (bytes memory,address) payable external"
                        }
                      },
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 916,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "25995:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "25999:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "25995:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "25955:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_address_$returns$__$value",
                        "typeString": "function (bytes memory,address) payable external"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25955:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "25955:69:0"
                }
              ]
            },
            "documentation": {
              "id": 904,
              "nodeType": "StructuredDocumentation",
              "src": "25539:336:0",
              "text": "@notice Allocate to recipient(s).\n @dev Passes '_data' & 'msg.sender' through to the strategy for that pool.\n      This is an internal function that is called by the 'allocate()' & 'batchAllocate()' functions.\n @param _poolId ID of the pool\n @param _data Encoded data unique to the strategy for that pool"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_allocate",
            "nameLocation": "25889:9:0",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "25907:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "25899:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25899:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 908,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "25929:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 925,
                  "src": "25916:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "25916:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25898:37:0"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25945:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1010,
            "nodeType": "FunctionDefinition",
            "src": "26355:738:0",
            "nodes": [],
            "body": {
              "id": 1009,
              "nodeType": "Block",
              "src": "26438:655:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 937,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "26456:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1009,
                      "src": "26448:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 936,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26448:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 938,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26448:17:0"
                },
                {
                  "assignments": [
                    940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 940,
                      "mutability": "mutable",
                      "name": "amountAfterFee",
                      "nameLocation": "26483:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1009,
                      "src": "26475:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 939,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26475:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 942,
                  "initialValue": {
                    "id": 941,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 928,
                    "src": "26500:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26475:32:0"
                },
                {
                  "assignments": [
                    945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 945,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "26531:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1009,
                      "src": "26518:17:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$2144_storage_ptr",
                        "typeString": "struct IAllo.Pool"
                      },
                      "typeName": {
                        "id": 944,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 943,
                          "name": "Pool",
                          "nameLocations": [
                            "26518:4:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2144,
                          "src": "26518:4:0"
                        },
                        "referencedDeclaration": 2144,
                        "src": "26518:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pool_$2144_storage_ptr",
                          "typeString": "struct IAllo.Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 949,
                  "initialValue": {
                    "baseExpression": {
                      "id": 946,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "26538:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                        "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                      }
                    },
                    "id": 948,
                    "indexExpression": {
                      "id": 947,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 930,
                      "src": "26544:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "26538:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$2144_storage",
                      "typeString": "struct IAllo.Pool storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26518:34:0"
                },
                {
                  "assignments": [
                    951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 951,
                      "mutability": "mutable",
                      "name": "_token",
                      "nameLocation": "26570:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1009,
                      "src": "26562:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 950,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26562:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 954,
                  "initialValue": {
                    "expression": {
                      "id": 952,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 945,
                      "src": "26579:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pool_$2144_storage_ptr",
                        "typeString": "struct IAllo.Pool storage pointer"
                      }
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "26584:5:0",
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2136,
                    "src": "26579:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26562:27:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 955,
                      "name": "percentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "26604:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26617:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "26604:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 983,
                  "nodeType": "IfStatement",
                  "src": "26600:251:0",
                  "trueBody": {
                    "id": 982,
                    "nodeType": "Block",
                    "src": "26620:231:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 958,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 937,
                            "src": "26634:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 961,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 959,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 928,
                                    "src": "26647:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 960,
                                    "name": "percentFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34,
                                    "src": "26657:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "26647:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 962,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "26646:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 963,
                                "name": "getFeeDenominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1164,
                                "src": "26671:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                  "typeString": "function () pure returns (uint256)"
                                }
                              },
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26671:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "26646:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26634:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 967,
                        "nodeType": "ExpressionStatement",
                        "src": "26634:56:0"
                      },
                      {
                        "expression": {
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 968,
                            "name": "amountAfterFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 940,
                            "src": "26704:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 969,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 937,
                            "src": "26722:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26704:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 971,
                        "nodeType": "ExpressionStatement",
                        "src": "26704:27:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 973,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 951,
                              "src": "26766:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 975,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "26794:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 976,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "26798:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "26794:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 977,
                                  "name": "treasury",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43,
                                  "src": "26810:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "id": 978,
                                  "name": "feeAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 937,
                                  "src": "26828:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 974,
                                "name": "TransferData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2944,
                                "src": "26774:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_TransferData_$2944_storage_ptr_$",
                                  "typeString": "type(struct Transfer.TransferData storage pointer)"
                                }
                              },
                              "id": 979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "26788:4:0",
                                "26806:2:0",
                                "26820:6:0"
                              ],
                              "names": [
                                "from",
                                "to",
                                "amount"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "26774:65:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TransferData_$2944_memory_ptr",
                                "typeString": "struct Transfer.TransferData memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_TransferData_$2944_memory_ptr",
                                "typeString": "struct Transfer.TransferData memory"
                              }
                            ],
                            "id": 972,
                            "name": "_transferAmountFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3075,
                            "src": "26746:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_TransferData_$2944_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,struct Transfer.TransferData memory) returns (bool)"
                            }
                          },
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26746:94:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 981,
                        "nodeType": "ExpressionStatement",
                        "src": "26746:94:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 985,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "26881:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 987,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "26909:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "26913:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "26909:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 991,
                                "name": "_strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 933,
                                "src": "26933:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$2792",
                                  "typeString": "contract IStrategy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IStrategy_$2792",
                                  "typeString": "contract IStrategy"
                                }
                              ],
                              "id": 990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "26925:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 989,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "26925:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26925:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 993,
                            "name": "amountAfterFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 940,
                            "src": "26953:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 986,
                          "name": "TransferData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2944,
                          "src": "26889:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_TransferData_$2944_storage_ptr_$",
                            "typeString": "type(struct Transfer.TransferData storage pointer)"
                          }
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "26903:4:0",
                          "26921:2:0",
                          "26945:6:0"
                        ],
                        "names": [
                          "from",
                          "to",
                          "amount"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "26889:80:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TransferData_$2944_memory_ptr",
                          "typeString": "struct Transfer.TransferData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_TransferData_$2944_memory_ptr",
                          "typeString": "struct Transfer.TransferData memory"
                        }
                      ],
                      "id": 984,
                      "name": "_transferAmountFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3075,
                      "src": "26861:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_TransferData_$2944_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,struct Transfer.TransferData memory) returns (bool)"
                      }
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26861:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "26861:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1000,
                        "name": "amountAfterFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "27009:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 997,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 933,
                        "src": "26980:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "26990:18:0",
                      "memberName": "increasePoolAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2731,
                      "src": "26980:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26980:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1002,
                  "nodeType": "ExpressionStatement",
                  "src": "26980:44:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1004,
                        "name": "_poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "27051:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1005,
                        "name": "amountAfterFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "27060:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1006,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "27076:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1003,
                      "name": "PoolFunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2178,
                      "src": "27040:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27040:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "EmitStatement",
                  "src": "27035:51:0"
                }
              ]
            },
            "documentation": {
              "id": 926,
              "nodeType": "StructuredDocumentation",
              "src": "26037:313:0",
              "text": "@notice Fund a pool.\n @dev Deducts the fee and transfers the amount to the distribution strategy.\n      Emits a 'PoolFunded' event.\n @param _amount The amount to transfer\n @param _poolId The 'poolId' for the pool you are funding\n @param _strategy The address of the strategy"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_fundPool",
            "nameLocation": "26364:9:0",
            "parameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "26382:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "26374:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26374:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 930,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "26399:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "26391:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26391:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 933,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "26418:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "26408:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$2792",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 932,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 931,
                      "name": "IStrategy",
                      "nameLocations": [
                        "26408:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2792,
                      "src": "26408:9:0"
                    },
                    "referencedDeclaration": 2792,
                    "src": "26408:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$2792",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26373:55:0"
            },
            "returnParameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26438:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1023,
            "nodeType": "FunctionDefinition",
            "src": "27478:132:0",
            "nodes": [],
            "body": {
              "id": 1022,
              "nodeType": "Block",
              "src": "27556:54:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1018,
                      "name": "cloneableStrategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "27573:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1020,
                    "indexExpression": {
                      "id": 1019,
                      "name": "_strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "27593:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27573:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1017,
                  "id": 1021,
                  "nodeType": "Return",
                  "src": "27566:37:0"
                }
              ]
            },
            "documentation": {
              "id": 1011,
              "nodeType": "StructuredDocumentation",
              "src": "27099:374:0",
              "text": "@notice Checks if the strategy is an approved cloneable strategy.\n @dev Internal function used by createPoolwithCustomStrategy and createPool to\n      determine if a strategy is in the cloneable strategy allow list.\n @param _strategy The address of the strategy\n @return This will return 'true' if the strategy is cloneable, otherwise 'false'"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isCloneableStrategy",
            "nameLocation": "27487:20:0",
            "parameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "27516:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "27508:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27508:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27507:19:0"
            },
            "returnParameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "27550:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27550:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27549:6:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1042,
            "nodeType": "FunctionDefinition",
            "src": "27926:153:0",
            "nodes": [],
            "body": {
              "id": 1041,
              "nodeType": "Block",
              "src": "28012:67:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1034,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "28037:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                              "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                            }
                          },
                          "id": 1036,
                          "indexExpression": {
                            "id": 1035,
                            "name": "_poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "28043:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28037:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$2144_storage",
                            "typeString": "struct IAllo.Pool storage ref"
                          }
                        },
                        "id": 1037,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "28052:9:0",
                        "memberName": "adminRole",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2143,
                        "src": "28037:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1038,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1028,
                        "src": "28063:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1033,
                      "name": "hasRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62556,
                      "src": "28029:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) view returns (bool)"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28029:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1032,
                  "id": 1040,
                  "nodeType": "Return",
                  "src": "28022:50:0"
                }
              ]
            },
            "documentation": {
              "id": 1024,
              "nodeType": "StructuredDocumentation",
              "src": "27616:305:0",
              "text": "@notice Checks if the address is a pool admin\n @dev Internal function used to determine if an address is a pool admin\n @param _poolId The ID of the pool\n @param _address The address to check\n @return This will return 'true' if the address is a pool admin, otherwise 'false'"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isPoolAdmin",
            "nameLocation": "27935:12:0",
            "parameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "27956:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "27948:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27948:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "27973:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "27965:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27965:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27947:35:0"
            },
            "returnParameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "28006:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28006:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28005:6:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1066,
            "nodeType": "FunctionDefinition",
            "src": "28401:192:0",
            "nodes": [],
            "body": {
              "id": 1065,
              "nodeType": "Block",
              "src": "28489:104:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 1053,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "28514:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                                "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                              }
                            },
                            "id": 1055,
                            "indexExpression": {
                              "id": 1054,
                              "name": "_poolId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "28520:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "28514:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Pool_$2144_storage",
                              "typeString": "struct IAllo.Pool storage ref"
                            }
                          },
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "28529:11:0",
                          "memberName": "managerRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2141,
                          "src": "28514:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1057,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1047,
                          "src": "28542:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1052,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62556,
                        "src": "28506:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28506:45:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1060,
                          "name": "_poolId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "28568:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1061,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1047,
                          "src": "28577:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1059,
                        "name": "_isPoolAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1042,
                        "src": "28555:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (uint256,address) view returns (bool)"
                        }
                      },
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28555:31:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "28506:80:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1051,
                  "id": 1064,
                  "nodeType": "Return",
                  "src": "28499:87:0"
                }
              ]
            },
            "documentation": {
              "id": 1043,
              "nodeType": "StructuredDocumentation",
              "src": "28085:311:0",
              "text": "@notice Checks if the address is a pool manager\n @dev Internal function used to determine if an address is a pool manager\n @param _poolId The ID of the pool\n @param _address The address to check\n @return This will return 'true' if the address is a pool manager, otherwise 'false'"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isPoolManager",
            "nameLocation": "28410:14:0",
            "parameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1045,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "28433:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "28425:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28425:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1047,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "28450:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "28442:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28442:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28424:35:0"
            },
            "returnParameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "28483:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28483:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28482:6:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1093,
            "nodeType": "FunctionDefinition",
            "src": "28806:203:0",
            "nodes": [],
            "body": {
              "id": 1092,
              "nodeType": "Block",
              "src": "28859:150:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1072,
                      "name": "_registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "28873:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28894:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "28886:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28886:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28886:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "28873:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1081,
                  "nodeType": "IfStatement",
                  "src": "28869:50:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1078,
                        "name": "ZERO_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2843,
                        "src": "28905:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28905:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1080,
                    "nodeType": "RevertStatement",
                    "src": "28898:21:0"
                  }
                },
                {
                  "expression": {
                    "id": 1086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1082,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "28930:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRegistry_$2625",
                        "typeString": "contract IRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1084,
                          "name": "_registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1069,
                          "src": "28951:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1083,
                        "name": "IRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "28941:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRegistry_$2625_$",
                          "typeString": "type(contract IRegistry)"
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28941:20:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRegistry_$2625",
                        "typeString": "contract IRegistry"
                      }
                    },
                    "src": "28930:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistry_$2625",
                      "typeString": "contract IRegistry"
                    }
                  },
                  "id": 1087,
                  "nodeType": "ExpressionStatement",
                  "src": "28930:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1089,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "28992:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1088,
                      "name": "RegistryUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2205,
                      "src": "28976:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28976:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1091,
                  "nodeType": "EmitStatement",
                  "src": "28971:31:0"
                }
              ]
            },
            "documentation": {
              "id": 1067,
              "nodeType": "StructuredDocumentation",
              "src": "28599:202:0",
              "text": "@notice Updates the registry address\n @dev Internal function used to update the registry address.\n      Emits a RegistryUpdated event.\n @param _registry The new registry address"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateRegistry",
            "nameLocation": "28815:15:0",
            "parameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "_registry",
                  "nameLocation": "28839:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "28831:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28831:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28830:19:0"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28859:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1118,
            "nodeType": "FunctionDefinition",
            "src": "29222:199:0",
            "nodes": [],
            "body": {
              "id": 1117,
              "nodeType": "Block",
              "src": "29283:138:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1099,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "29297:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29318:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "29310:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "29310:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "29310:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "29297:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1108,
                  "nodeType": "IfStatement",
                  "src": "29293:50:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1105,
                        "name": "ZERO_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2843,
                        "src": "29329:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "29329:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1107,
                    "nodeType": "RevertStatement",
                    "src": "29322:21:0"
                  }
                },
                {
                  "expression": {
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1109,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "29354:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1110,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "29365:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "29354:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "29354:20:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1114,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "29405:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1113,
                      "name": "TreasuryUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2190,
                      "src": "29389:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29389:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "EmitStatement",
                  "src": "29384:30:0"
                }
              ]
            },
            "documentation": {
              "id": 1094,
              "nodeType": "StructuredDocumentation",
              "src": "29015:202:0",
              "text": "@notice Updates the treasury address\n @dev Internal function used to update the treasury address.\n      Emits a TreasuryUpdated event.\n @param _treasury The new treasury address"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateTreasury",
            "nameLocation": "29231:15:0",
            "parameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1096,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nameLocation": "29263:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "29247:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29247:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29246:27:0"
            },
            "returnParameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29283:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1140,
            "nodeType": "FunctionDefinition",
            "src": "29621:198:0",
            "nodes": [],
            "body": {
              "id": 1139,
              "nodeType": "Block",
              "src": "29678:141:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1124,
                      "name": "_percentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1121,
                      "src": "29692:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29706:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "29692:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1130,
                  "nodeType": "IfStatement",
                  "src": "29688:44:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1127,
                        "name": "INVALID_FEE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2861,
                        "src": "29719:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "29719:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1129,
                    "nodeType": "RevertStatement",
                    "src": "29712:20:0"
                  }
                },
                {
                  "expression": {
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1131,
                      "name": "percentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "29743:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1132,
                      "name": "_percentFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1121,
                      "src": "29756:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29743:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "29743:24:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1136,
                        "name": "percentFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "29801:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1135,
                      "name": "PercentFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2195,
                      "src": "29783:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29783:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1138,
                  "nodeType": "EmitStatement",
                  "src": "29778:34:0"
                }
              ]
            },
            "documentation": {
              "id": 1119,
              "nodeType": "StructuredDocumentation",
              "src": "29427:189:0",
              "text": "@notice Updates the fee percentage\n @dev Internal function used to update the percentage fee.\n      Emits a PercentFeeUpdated event.\n @param _percentFee The new fee"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updatePercentFee",
            "nameLocation": "29630:17:0",
            "parameters": {
              "id": 1122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1121,
                  "mutability": "mutable",
                  "name": "_percentFee",
                  "nameLocation": "29656:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "29648:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29648:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29647:21:0"
            },
            "returnParameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29678:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1155,
            "nodeType": "FunctionDefinition",
            "src": "30006:125:0",
            "nodes": [],
            "body": {
              "id": 1154,
              "nodeType": "Block",
              "src": "30057:74:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1146,
                      "name": "baseFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "30067:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1147,
                      "name": "_baseFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1143,
                      "src": "30077:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30067:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1149,
                  "nodeType": "ExpressionStatement",
                  "src": "30067:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1151,
                        "name": "baseFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "30116:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1150,
                      "name": "BaseFeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2200,
                      "src": "30101:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30101:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1153,
                  "nodeType": "EmitStatement",
                  "src": "30096:28:0"
                }
              ]
            },
            "documentation": {
              "id": 1141,
              "nodeType": "StructuredDocumentation",
              "src": "29825:176:0",
              "text": "@notice Updates the base fee\n @dev Internal function used to update the base fee.\n      Emits a BaseFeeUpdated event.\n @param _baseFee The new base fee"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateBaseFee",
            "nameLocation": "30015:14:0",
            "parameters": {
              "id": 1144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1143,
                  "mutability": "mutable",
                  "name": "_baseFee",
                  "nameLocation": "30038:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "30030:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30030:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30029:18:0"
            },
            "returnParameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30057:0:0"
            },
            "scope": 1278,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1164,
            "nodeType": "FunctionDefinition",
            "src": "30368:103:0",
            "nodes": [],
            "body": {
              "id": 1163,
              "nodeType": "Block",
              "src": "30443:28:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "31653138",
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "30460:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1e18"
                  },
                  "functionReturnParameters": 1160,
                  "id": 1162,
                  "nodeType": "Return",
                  "src": "30453:11:0"
                }
              ]
            },
            "baseFunctions": [
              2432
            ],
            "documentation": {
              "id": 1156,
              "nodeType": "StructuredDocumentation",
              "src": "30237:126:0",
              "text": "@notice Getter for the fee denominator\n @return FEE_DENOMINATOR The fee denominator is (1e18) which represents 100%"
            },
            "functionSelector": "f4e1fc41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFeeDenominator",
            "nameLocation": "30377:17:0",
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30394:2:0"
            },
            "returnParameters": {
              "id": 1160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1159,
                  "mutability": "mutable",
                  "name": "FEE_DENOMINATOR",
                  "nameLocation": "30426:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "30418:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30418:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30417:25:0"
            },
            "scope": 1278,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1180,
            "nodeType": "FunctionDefinition",
            "src": "30692:140:0",
            "nodes": [],
            "body": {
              "id": 1179,
              "nodeType": "Block",
              "src": "30777:55:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1175,
                        "name": "_poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1167,
                        "src": "30807:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1176,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1169,
                        "src": "30816:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1174,
                      "name": "_isPoolAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "30794:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30794:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1173,
                  "id": 1178,
                  "nodeType": "Return",
                  "src": "30787:38:0"
                }
              ]
            },
            "baseFunctions": [
              2366
            ],
            "documentation": {
              "id": 1165,
              "nodeType": "StructuredDocumentation",
              "src": "30477:210:0",
              "text": "@notice Checks if the address is a pool admin.\n @param _poolId The ID of the pool\n @param _address The address to check\n @return 'true' if the address is a pool admin, otherwise 'false'"
            },
            "functionSelector": "ab3febc6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPoolAdmin",
            "nameLocation": "30701:11:0",
            "parameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "30721:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1180,
                  "src": "30713:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30713:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1169,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "30738:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1180,
                  "src": "30730:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30730:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30712:35:0"
            },
            "returnParameters": {
              "id": 1173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1172,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1180,
                  "src": "30771:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "30771:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30770:6:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1196,
            "nodeType": "FunctionDefinition",
            "src": "31056:144:0",
            "nodes": [],
            "body": {
              "id": 1195,
              "nodeType": "Block",
              "src": "31143:57:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1191,
                        "name": "_poolId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1183,
                        "src": "31175:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1192,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "31184:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1190,
                      "name": "_isPoolManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1066,
                      "src": "31160:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31160:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1189,
                  "id": 1194,
                  "nodeType": "Return",
                  "src": "31153:40:0"
                }
              ]
            },
            "baseFunctions": [
              2376
            ],
            "documentation": {
              "id": 1181,
              "nodeType": "StructuredDocumentation",
              "src": "30838:213:0",
              "text": "@notice Checks if the address is a pool manager\n @param _poolId The ID of the pool\n @param _address The address to check\n @return 'true' if the address is a pool manager, otherwise 'false'"
            },
            "functionSelector": "29e40d4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPoolManager",
            "nameLocation": "31065:13:0",
            "parameters": {
              "id": 1186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1183,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "31087:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "31079:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31079:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1185,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "31104:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "31096:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31096:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31078:35:0"
            },
            "returnParameters": {
              "id": 1189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1188,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "31137:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1187,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "31137:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31136:6:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1213,
            "nodeType": "FunctionDefinition",
            "src": "31333:126:0",
            "nodes": [],
            "body": {
              "id": 1212,
              "nodeType": "Block",
              "src": "31403:56:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1206,
                            "name": "pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "31428:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                              "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                            }
                          },
                          "id": 1208,
                          "indexExpression": {
                            "id": 1207,
                            "name": "_poolId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "31434:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "31428:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Pool_$2144_storage",
                            "typeString": "struct IAllo.Pool storage ref"
                          }
                        },
                        "id": 1209,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "31443:8:0",
                        "memberName": "strategy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2134,
                        "src": "31428:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$2792",
                          "typeString": "contract IStrategy"
                        }
                      ],
                      "id": 1205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "31420:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1204,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "31420:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31420:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1203,
                  "id": 1211,
                  "nodeType": "Return",
                  "src": "31413:39:0"
                }
              ]
            },
            "baseFunctions": [
              2392
            ],
            "documentation": {
              "id": 1197,
              "nodeType": "StructuredDocumentation",
              "src": "31206:122:0",
              "text": "@notice Getter for the strategy.\n @param _poolId The ID of the pool\n @return The address of the strategy"
            },
            "functionSelector": "cfc0cc34",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStrategy",
            "nameLocation": "31342:11:0",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "31362:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "31354:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31354:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31353:17:0"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "31394:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31394:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31393:9:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1222,
            "nodeType": "FunctionDefinition",
            "src": "31557:91:0",
            "nodes": [],
            "body": {
              "id": 1221,
              "nodeType": "Block",
              "src": "31614:34:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1219,
                    "name": "percentFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "31631:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1218,
                  "id": 1220,
                  "nodeType": "Return",
                  "src": "31624:17:0"
                }
              ]
            },
            "baseFunctions": [
              2398
            ],
            "documentation": {
              "id": 1214,
              "nodeType": "StructuredDocumentation",
              "src": "31465:87:0",
              "text": "@notice Getter for fee percentage.\n @return The fee percentage (1e18 = 100%)"
            },
            "functionSelector": "4edbaadc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPercentFee",
            "nameLocation": "31566:13:0",
            "parameters": {
              "id": 1215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31579:2:0"
            },
            "returnParameters": {
              "id": 1218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1222,
                  "src": "31605:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31605:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31604:9:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1231,
            "nodeType": "FunctionDefinition",
            "src": "31720:85:0",
            "nodes": [],
            "body": {
              "id": 1230,
              "nodeType": "Block",
              "src": "31774:31:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1228,
                    "name": "baseFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "31791:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1227,
                  "id": 1229,
                  "nodeType": "Return",
                  "src": "31784:14:0"
                }
              ]
            },
            "baseFunctions": [
              2404
            ],
            "documentation": {
              "id": 1223,
              "nodeType": "StructuredDocumentation",
              "src": "31654:61:0",
              "text": "@notice Getter for base fee.\n @return The base fee"
            },
            "functionSelector": "15e812ad",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBaseFee",
            "nameLocation": "31729:10:0",
            "parameters": {
              "id": 1224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31739:2:0"
            },
            "returnParameters": {
              "id": 1227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1226,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1231,
                  "src": "31765:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31765:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31764:9:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1240,
            "nodeType": "FunctionDefinition",
            "src": "31893:95:0",
            "nodes": [],
            "body": {
              "id": 1239,
              "nodeType": "Block",
              "src": "31956:32:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1237,
                    "name": "treasury",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 43,
                    "src": "31973:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 1236,
                  "id": 1238,
                  "nodeType": "Return",
                  "src": "31966:15:0"
                }
              ]
            },
            "baseFunctions": [
              2410
            ],
            "documentation": {
              "id": 1232,
              "nodeType": "StructuredDocumentation",
              "src": "31811:77:0",
              "text": "@notice Getter for treasury address.\n @return The treasury address"
            },
            "functionSelector": "3b19e84a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTreasury",
            "nameLocation": "31902:11:0",
            "parameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31913:2:0"
            },
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "31939:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31939:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31938:17:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1250,
            "nodeType": "FunctionDefinition",
            "src": "32068:89:0",
            "nodes": [],
            "body": {
              "id": 1249,
              "nodeType": "Block",
              "src": "32125:32:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1247,
                    "name": "registry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "32142:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistry_$2625",
                      "typeString": "contract IRegistry"
                    }
                  },
                  "functionReturnParameters": 1246,
                  "id": 1248,
                  "nodeType": "Return",
                  "src": "32135:15:0"
                }
              ]
            },
            "baseFunctions": [
              2417
            ],
            "documentation": {
              "id": 1241,
              "nodeType": "StructuredDocumentation",
              "src": "31994:69:0",
              "text": "@notice Getter for registry.\n @return The registry address"
            },
            "functionSelector": "5ab1bd53",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegistry",
            "nameLocation": "32077:11:0",
            "parameters": {
              "id": 1242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32088:2:0"
            },
            "returnParameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1245,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "32114:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRegistry_$2625",
                    "typeString": "contract IRegistry"
                  },
                  "typeName": {
                    "id": 1244,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1243,
                      "name": "IRegistry",
                      "nameLocations": [
                        "32114:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2625,
                      "src": "32114:9:0"
                    },
                    "referencedDeclaration": 2625,
                    "src": "32114:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistry_$2625",
                      "typeString": "contract IRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32113:11:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1263,
            "nodeType": "FunctionDefinition",
            "src": "32340:132:0",
            "nodes": [],
            "body": {
              "id": 1262,
              "nodeType": "Block",
              "src": "32417:55:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1259,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1253,
                        "src": "32455:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1258,
                      "name": "_isCloneableStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1023,
                      "src": "32434:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32434:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1257,
                  "id": 1261,
                  "nodeType": "Return",
                  "src": "32427:38:0"
                }
              ]
            },
            "baseFunctions": [
              2384
            ],
            "documentation": {
              "id": 1251,
              "nodeType": "StructuredDocumentation",
              "src": "32163:172:0",
              "text": "@notice Getter for if strategy is cloneable.\n @param _strategy The address of the strategy\n @return 'true' if the strategy is cloneable, otherwise 'false'"
            },
            "functionSelector": "ab2ec589",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCloneableStrategy",
            "nameLocation": "32349:19:0",
            "parameters": {
              "id": 1254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nameLocation": "32377:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "32369:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32369:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32368:19:0"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "32411:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "32411:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32410:6:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1277,
            "nodeType": "FunctionDefinition",
            "src": "32593:108:0",
            "nodes": [],
            "body": {
              "id": 1276,
              "nodeType": "Block",
              "src": "32663:38:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1272,
                      "name": "pools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "32680:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Pool_$2144_storage_$",
                        "typeString": "mapping(uint256 => struct IAllo.Pool storage ref)"
                      }
                    },
                    "id": 1274,
                    "indexExpression": {
                      "id": 1273,
                      "name": "_poolId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1266,
                      "src": "32686:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "32680:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$2144_storage",
                      "typeString": "struct IAllo.Pool storage ref"
                    }
                  },
                  "functionReturnParameters": 1271,
                  "id": 1275,
                  "nodeType": "Return",
                  "src": "32673:21:0"
                }
              ]
            },
            "baseFunctions": [
              2426
            ],
            "documentation": {
              "id": 1264,
              "nodeType": "StructuredDocumentation",
              "src": "32478:110:0",
              "text": "@notice Getter for the 'Pool'.\n @param _poolId The ID of the pool\n @return The 'Pool' struct"
            },
            "functionSelector": "068bcd8d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPool",
            "nameLocation": "32602:7:0",
            "parameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1266,
                  "mutability": "mutable",
                  "name": "_poolId",
                  "nameLocation": "32618:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1277,
                  "src": "32610:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32610:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32609:17:0"
            },
            "returnParameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1270,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1277,
                  "src": "32650:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pool_$2144_memory_ptr",
                    "typeString": "struct IAllo.Pool"
                  },
                  "typeName": {
                    "id": 1269,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1268,
                      "name": "Pool",
                      "nameLocations": [
                        "32650:4:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2144,
                      "src": "32650:4:0"
                    },
                    "referencedDeclaration": 2144,
                    "src": "32650:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pool_$2144_storage_ptr",
                      "typeString": "struct IAllo.Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32649:13:0"
            },
            "scope": 1278,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16,
              "name": "IAllo",
              "nameLocations": [
                "5070:5:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2433,
              "src": "5070:5:0"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "5070:5:0"
          },
          {
            "baseName": {
              "id": 18,
              "name": "Native",
              "nameLocations": [
                "5077:6:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2926,
              "src": "5077:6:0"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "5077:6:0"
          },
          {
            "baseName": {
              "id": 20,
              "name": "Transfer",
              "nameLocations": [
                "5085:8:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3108,
              "src": "5085:8:0"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "5085:8:0"
          },
          {
            "baseName": {
              "id": 22,
              "name": "Initializable",
              "nameLocations": [
                "5095:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 61984,
              "src": "5095:13:0"
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "5095:13:0"
          },
          {
            "baseName": {
              "id": 24,
              "name": "Ownable",
              "nameLocations": [
                "5110:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68280,
              "src": "5110:7:0"
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "5110:7:0"
          },
          {
            "baseName": {
              "id": 26,
              "name": "AccessControl",
              "nameLocations": [
                "5119:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 62792,
              "src": "5119:13:0"
            },
            "id": 27,
            "nodeType": "InheritanceSpecifier",
            "src": "5119:13:0"
          },
          {
            "baseName": {
              "id": 28,
              "name": "ReentrancyGuardUpgradeable",
              "nameLocations": [
                "5134:26:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 62068,
              "src": "5134:26:0"
            },
            "id": 29,
            "nodeType": "InheritanceSpecifier",
            "src": "5134:26:0"
          },
          {
            "baseName": {
              "id": 30,
              "name": "Errors",
              "nameLocations": [
                "5162:6:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2909,
              "src": "5162:6:0"
            },
            "id": 31,
            "nodeType": "InheritanceSpecifier",
            "src": "5162:6:0"
          }
        ],
        "canonicalName": "Allo",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15,
          "nodeType": "StructuredDocumentation",
          "src": "4702:351:0",
          "text": "@title Allo\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice This contract is used to create & manage pools as well as manage the protocol.\n @dev The contract must be initialized with the 'initialize()' function."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1278,
          2909,
          62068,
          62792,
          65753,
          65765,
          62865,
          64018,
          68280,
          61984,
          3108,
          2926,
          2433
        ],
        "name": "Allo",
        "nameLocation": "5062:4:0",
        "scope": 1279,
        "usedErrors": [
          2831,
          2834,
          2837,
          2840,
          2843,
          2846,
          2849,
          2852,
          2855,
          2858,
          2861,
          2864,
          2867,
          2870,
          2873,
          2876,
          2879,
          2882,
          2885,
          2888,
          2891,
          2894,
          2899,
          2902,
          2905,
          2908,
          2937,
          68114,
          68117,
          68120
        ]
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 0
}